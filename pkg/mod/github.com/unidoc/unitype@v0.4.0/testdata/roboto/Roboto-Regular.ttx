<?xml version="1.0" encoding="UTF-8"?>
<ttFont sfntVersion="\x00\x01\x00\x00" ttLibVersion="3.0">

  <GlyphOrder>
    <!-- The 'id' attribute is only for humans; it is ignored when parsed. -->
    <GlyphID id="0" name=".notdef"/>
    <GlyphID id="1" name="uni0000"/>
    <GlyphID id="2" name="uni0002"/>
    <GlyphID id="3" name="uni000D"/>
    <GlyphID id="4" name="space"/>
    <GlyphID id="5" name="exclam"/>
    <GlyphID id="6" name="quotedbl"/>
    <GlyphID id="7" name="numbersign"/>
    <GlyphID id="8" name="dollar"/>
    <GlyphID id="9" name="percent"/>
    <GlyphID id="10" name="ampersand"/>
    <GlyphID id="11" name="quotesingle"/>
    <GlyphID id="12" name="parenleft"/>
    <GlyphID id="13" name="parenright"/>
    <GlyphID id="14" name="asterisk"/>
    <GlyphID id="15" name="plus"/>
    <GlyphID id="16" name="comma"/>
    <GlyphID id="17" name="hyphen"/>
    <GlyphID id="18" name="period"/>
    <GlyphID id="19" name="slash"/>
    <GlyphID id="20" name="zero"/>
    <GlyphID id="21" name="one"/>
    <GlyphID id="22" name="two"/>
    <GlyphID id="23" name="three"/>
    <GlyphID id="24" name="four"/>
    <GlyphID id="25" name="five"/>
    <GlyphID id="26" name="six"/>
    <GlyphID id="27" name="seven"/>
    <GlyphID id="28" name="eight"/>
    <GlyphID id="29" name="nine"/>
    <GlyphID id="30" name="colon"/>
    <GlyphID id="31" name="semicolon"/>
    <GlyphID id="32" name="less"/>
    <GlyphID id="33" name="equal"/>
    <GlyphID id="34" name="greater"/>
    <GlyphID id="35" name="question"/>
    <GlyphID id="36" name="at"/>
    <GlyphID id="37" name="A"/>
    <GlyphID id="38" name="B"/>
    <GlyphID id="39" name="C"/>
    <GlyphID id="40" name="D"/>
    <GlyphID id="41" name="E"/>
    <GlyphID id="42" name="F"/>
    <GlyphID id="43" name="G"/>
    <GlyphID id="44" name="H"/>
    <GlyphID id="45" name="I"/>
    <GlyphID id="46" name="J"/>
    <GlyphID id="47" name="K"/>
    <GlyphID id="48" name="L"/>
    <GlyphID id="49" name="M"/>
    <GlyphID id="50" name="N"/>
    <GlyphID id="51" name="O"/>
    <GlyphID id="52" name="P"/>
    <GlyphID id="53" name="Q"/>
    <GlyphID id="54" name="R"/>
    <GlyphID id="55" name="S"/>
    <GlyphID id="56" name="T"/>
    <GlyphID id="57" name="U"/>
    <GlyphID id="58" name="V"/>
    <GlyphID id="59" name="W"/>
    <GlyphID id="60" name="X"/>
    <GlyphID id="61" name="Y"/>
    <GlyphID id="62" name="Z"/>
    <GlyphID id="63" name="bracketleft"/>
    <GlyphID id="64" name="backslash"/>
    <GlyphID id="65" name="bracketright"/>
    <GlyphID id="66" name="asciicircum"/>
    <GlyphID id="67" name="underscore"/>
    <GlyphID id="68" name="grave"/>
    <GlyphID id="69" name="a"/>
    <GlyphID id="70" name="b"/>
    <GlyphID id="71" name="c"/>
    <GlyphID id="72" name="d"/>
    <GlyphID id="73" name="e"/>
    <GlyphID id="74" name="f"/>
    <GlyphID id="75" name="g"/>
    <GlyphID id="76" name="h"/>
    <GlyphID id="77" name="i"/>
    <GlyphID id="78" name="j"/>
    <GlyphID id="79" name="k"/>
    <GlyphID id="80" name="l"/>
    <GlyphID id="81" name="m"/>
    <GlyphID id="82" name="n"/>
    <GlyphID id="83" name="o"/>
    <GlyphID id="84" name="p"/>
    <GlyphID id="85" name="q"/>
    <GlyphID id="86" name="r"/>
    <GlyphID id="87" name="s"/>
    <GlyphID id="88" name="t"/>
    <GlyphID id="89" name="u"/>
    <GlyphID id="90" name="v"/>
    <GlyphID id="91" name="w"/>
    <GlyphID id="92" name="x"/>
    <GlyphID id="93" name="y"/>
    <GlyphID id="94" name="z"/>
    <GlyphID id="95" name="braceleft"/>
    <GlyphID id="96" name="bar"/>
    <GlyphID id="97" name="braceright"/>
    <GlyphID id="98" name="asciitilde"/>
    <GlyphID id="99" name="exclamdown"/>
    <GlyphID id="100" name="cent"/>
    <GlyphID id="101" name="sterling"/>
    <GlyphID id="102" name="currency"/>
    <GlyphID id="103" name="yen"/>
    <GlyphID id="104" name="brokenbar"/>
    <GlyphID id="105" name="section"/>
    <GlyphID id="106" name="dieresis"/>
    <GlyphID id="107" name="copyright"/>
    <GlyphID id="108" name="ordfeminine"/>
    <GlyphID id="109" name="guillemotleft"/>
    <GlyphID id="110" name="logicalnot"/>
    <GlyphID id="111" name="registered"/>
    <GlyphID id="112" name="macron"/>
    <GlyphID id="113" name="degree"/>
    <GlyphID id="114" name="plusminus"/>
    <GlyphID id="115" name="uni00B2"/>
    <GlyphID id="116" name="uni00B3"/>
    <GlyphID id="117" name="acute"/>
    <GlyphID id="118" name="mu"/>
    <GlyphID id="119" name="paragraph"/>
    <GlyphID id="120" name="periodcentered"/>
    <GlyphID id="121" name="cedilla"/>
    <GlyphID id="122" name="uni00B9"/>
    <GlyphID id="123" name="ordmasculine"/>
    <GlyphID id="124" name="guillemotright"/>
    <GlyphID id="125" name="onequarter"/>
    <GlyphID id="126" name="onehalf"/>
    <GlyphID id="127" name="threequarters"/>
    <GlyphID id="128" name="questiondown"/>
    <GlyphID id="129" name="AE"/>
    <GlyphID id="130" name="multiply"/>
    <GlyphID id="131" name="Oslash"/>
    <GlyphID id="132" name="Thorn"/>
    <GlyphID id="133" name="germandbls"/>
    <GlyphID id="134" name="ae"/>
    <GlyphID id="135" name="eth"/>
    <GlyphID id="136" name="divide"/>
    <GlyphID id="137" name="oslash"/>
    <GlyphID id="138" name="thorn"/>
    <GlyphID id="139" name="dcroat"/>
    <GlyphID id="140" name="Hbar"/>
    <GlyphID id="141" name="dotlessi"/>
    <GlyphID id="142" name="kgreenlandic"/>
    <GlyphID id="143" name="Lslash"/>
    <GlyphID id="144" name="lslash"/>
    <GlyphID id="145" name="Eng"/>
    <GlyphID id="146" name="eng"/>
    <GlyphID id="147" name="OE"/>
    <GlyphID id="148" name="oe"/>
    <GlyphID id="149" name="longs"/>
    <GlyphID id="150" name="uni018F"/>
    <GlyphID id="151" name="florin"/>
    <GlyphID id="152" name="Ohorn"/>
    <GlyphID id="153" name="ohorn"/>
    <GlyphID id="154" name="Uhorn"/>
    <GlyphID id="155" name="uhorn"/>
    <GlyphID id="156" name="uni0237"/>
    <GlyphID id="157" name="uni0259"/>
    <GlyphID id="158" name="circumflex"/>
    <GlyphID id="159" name="caron"/>
    <GlyphID id="160" name="uni02C9"/>
    <GlyphID id="161" name="breve"/>
    <GlyphID id="162" name="dotaccent"/>
    <GlyphID id="163" name="ring"/>
    <GlyphID id="164" name="ogonek"/>
    <GlyphID id="165" name="tilde"/>
    <GlyphID id="166" name="hungarumlaut"/>
    <GlyphID id="167" name="uni02F3"/>
    <GlyphID id="168" name="gravecomb"/>
    <GlyphID id="169" name="acutecomb"/>
    <GlyphID id="170" name="tildecomb"/>
    <GlyphID id="171" name="hookabovecomb"/>
    <GlyphID id="172" name="uni030F"/>
    <GlyphID id="173" name="dotbelowcomb"/>
    <GlyphID id="174" name="tonos"/>
    <GlyphID id="175" name="dieresistonos"/>
    <GlyphID id="176" name="anoteleia"/>
    <GlyphID id="177" name="Gamma"/>
    <GlyphID id="178" name="uni0394"/>
    <GlyphID id="179" name="Theta"/>
    <GlyphID id="180" name="Lambda"/>
    <GlyphID id="181" name="Xi"/>
    <GlyphID id="182" name="Pi"/>
    <GlyphID id="183" name="Sigma"/>
    <GlyphID id="184" name="Phi"/>
    <GlyphID id="185" name="Psi"/>
    <GlyphID id="186" name="uni03A9"/>
    <GlyphID id="187" name="alpha"/>
    <GlyphID id="188" name="beta"/>
    <GlyphID id="189" name="gamma"/>
    <GlyphID id="190" name="delta"/>
    <GlyphID id="191" name="epsilon"/>
    <GlyphID id="192" name="zeta"/>
    <GlyphID id="193" name="eta"/>
    <GlyphID id="194" name="theta"/>
    <GlyphID id="195" name="iota"/>
    <GlyphID id="196" name="lambda"/>
    <GlyphID id="197" name="xi"/>
    <GlyphID id="198" name="pi"/>
    <GlyphID id="199" name="rho"/>
    <GlyphID id="200" name="sigma1"/>
    <GlyphID id="201" name="sigma"/>
    <GlyphID id="202" name="tau"/>
    <GlyphID id="203" name="upsilon"/>
    <GlyphID id="204" name="phi"/>
    <GlyphID id="205" name="psi"/>
    <GlyphID id="206" name="omega"/>
    <GlyphID id="207" name="theta1"/>
    <GlyphID id="208" name="Upsilon1"/>
    <GlyphID id="209" name="omega1"/>
    <GlyphID id="210" name="uni0402"/>
    <GlyphID id="211" name="uni0404"/>
    <GlyphID id="212" name="uni0409"/>
    <GlyphID id="213" name="uni040A"/>
    <GlyphID id="214" name="uni040B"/>
    <GlyphID id="215" name="uni040F"/>
    <GlyphID id="216" name="uni0411"/>
    <GlyphID id="217" name="uni0414"/>
    <GlyphID id="218" name="uni0416"/>
    <GlyphID id="219" name="uni0417"/>
    <GlyphID id="220" name="uni0418"/>
    <GlyphID id="221" name="uni041B"/>
    <GlyphID id="222" name="uni0423"/>
    <GlyphID id="223" name="uni0424"/>
    <GlyphID id="224" name="uni0426"/>
    <GlyphID id="225" name="uni0427"/>
    <GlyphID id="226" name="uni0428"/>
    <GlyphID id="227" name="uni0429"/>
    <GlyphID id="228" name="uni042A"/>
    <GlyphID id="229" name="uni042B"/>
    <GlyphID id="230" name="uni042C"/>
    <GlyphID id="231" name="uni042D"/>
    <GlyphID id="232" name="uni042E"/>
    <GlyphID id="233" name="uni042F"/>
    <GlyphID id="234" name="uni0431"/>
    <GlyphID id="235" name="uni0432"/>
    <GlyphID id="236" name="uni0433"/>
    <GlyphID id="237" name="uni0434"/>
    <GlyphID id="238" name="uni0436"/>
    <GlyphID id="239" name="uni0437"/>
    <GlyphID id="240" name="uni0438"/>
    <GlyphID id="241" name="uni043A"/>
    <GlyphID id="242" name="uni043B"/>
    <GlyphID id="243" name="uni043C"/>
    <GlyphID id="244" name="uni043D"/>
    <GlyphID id="245" name="uni043F"/>
    <GlyphID id="246" name="uni0442"/>
    <GlyphID id="247" name="uni0444"/>
    <GlyphID id="248" name="uni0446"/>
    <GlyphID id="249" name="uni0447"/>
    <GlyphID id="250" name="uni0448"/>
    <GlyphID id="251" name="uni0449"/>
    <GlyphID id="252" name="uni044A"/>
    <GlyphID id="253" name="uni044B"/>
    <GlyphID id="254" name="uni044C"/>
    <GlyphID id="255" name="uni044D"/>
    <GlyphID id="256" name="uni044E"/>
    <GlyphID id="257" name="uni044F"/>
    <GlyphID id="258" name="uni0452"/>
    <GlyphID id="259" name="uni0454"/>
    <GlyphID id="260" name="uni0459"/>
    <GlyphID id="261" name="uni045A"/>
    <GlyphID id="262" name="uni045B"/>
    <GlyphID id="263" name="uni045F"/>
    <GlyphID id="264" name="uni0460"/>
    <GlyphID id="265" name="uni0461"/>
    <GlyphID id="266" name="uni0463"/>
    <GlyphID id="267" name="uni0464"/>
    <GlyphID id="268" name="uni0465"/>
    <GlyphID id="269" name="uni0466"/>
    <GlyphID id="270" name="uni0467"/>
    <GlyphID id="271" name="uni0468"/>
    <GlyphID id="272" name="uni0469"/>
    <GlyphID id="273" name="uni046A"/>
    <GlyphID id="274" name="uni046B"/>
    <GlyphID id="275" name="uni046C"/>
    <GlyphID id="276" name="uni046D"/>
    <GlyphID id="277" name="uni046E"/>
    <GlyphID id="278" name="uni046F"/>
    <GlyphID id="279" name="uni0472"/>
    <GlyphID id="280" name="uni0473"/>
    <GlyphID id="281" name="uni0474"/>
    <GlyphID id="282" name="uni0475"/>
    <GlyphID id="283" name="uni047A"/>
    <GlyphID id="284" name="uni047B"/>
    <GlyphID id="285" name="uni047C"/>
    <GlyphID id="286" name="uni047D"/>
    <GlyphID id="287" name="uni047E"/>
    <GlyphID id="288" name="uni047F"/>
    <GlyphID id="289" name="uni0480"/>
    <GlyphID id="290" name="uni0481"/>
    <GlyphID id="291" name="uni0482"/>
    <GlyphID id="292" name="uni0483"/>
    <GlyphID id="293" name="uni0484"/>
    <GlyphID id="294" name="uni0485"/>
    <GlyphID id="295" name="uni0486"/>
    <GlyphID id="296" name="uni0488"/>
    <GlyphID id="297" name="uni0489"/>
    <GlyphID id="298" name="uni048A"/>
    <GlyphID id="299" name="uni048B"/>
    <GlyphID id="300" name="uni048D"/>
    <GlyphID id="301" name="uni048E"/>
    <GlyphID id="302" name="uni048F"/>
    <GlyphID id="303" name="uni0490"/>
    <GlyphID id="304" name="uni0491"/>
    <GlyphID id="305" name="uni0494"/>
    <GlyphID id="306" name="uni0495"/>
    <GlyphID id="307" name="uni0496"/>
    <GlyphID id="308" name="uni0497"/>
    <GlyphID id="309" name="uni049A"/>
    <GlyphID id="310" name="uni049B"/>
    <GlyphID id="311" name="uni049C"/>
    <GlyphID id="312" name="uni049D"/>
    <GlyphID id="313" name="uni04A0"/>
    <GlyphID id="314" name="uni04A1"/>
    <GlyphID id="315" name="uni04A2"/>
    <GlyphID id="316" name="uni04A3"/>
    <GlyphID id="317" name="uni04A4"/>
    <GlyphID id="318" name="uni04A5"/>
    <GlyphID id="319" name="uni04A6"/>
    <GlyphID id="320" name="uni04A7"/>
    <GlyphID id="321" name="uni04A8"/>
    <GlyphID id="322" name="uni04A9"/>
    <GlyphID id="323" name="uni04B2"/>
    <GlyphID id="324" name="uni04B3"/>
    <GlyphID id="325" name="uni04B4"/>
    <GlyphID id="326" name="uni04B5"/>
    <GlyphID id="327" name="uni04B6"/>
    <GlyphID id="328" name="uni04B7"/>
    <GlyphID id="329" name="uni04B8"/>
    <GlyphID id="330" name="uni04B9"/>
    <GlyphID id="331" name="uni04BA"/>
    <GlyphID id="332" name="uni04BC"/>
    <GlyphID id="333" name="uni04BD"/>
    <GlyphID id="334" name="uni04C3"/>
    <GlyphID id="335" name="uni04C4"/>
    <GlyphID id="336" name="uni04C5"/>
    <GlyphID id="337" name="uni04C6"/>
    <GlyphID id="338" name="uni04C7"/>
    <GlyphID id="339" name="uni04C8"/>
    <GlyphID id="340" name="uni04C9"/>
    <GlyphID id="341" name="uni04CA"/>
    <GlyphID id="342" name="uni04CD"/>
    <GlyphID id="343" name="uni04CE"/>
    <GlyphID id="344" name="uni04D8"/>
    <GlyphID id="345" name="uni04E0"/>
    <GlyphID id="346" name="uni04E1"/>
    <GlyphID id="347" name="uni04FA"/>
    <GlyphID id="348" name="uni04FB"/>
    <GlyphID id="349" name="uni04FC"/>
    <GlyphID id="350" name="uni04FD"/>
    <GlyphID id="351" name="uni0500"/>
    <GlyphID id="352" name="uni0502"/>
    <GlyphID id="353" name="uni0503"/>
    <GlyphID id="354" name="uni0504"/>
    <GlyphID id="355" name="uni0505"/>
    <GlyphID id="356" name="uni0506"/>
    <GlyphID id="357" name="uni0507"/>
    <GlyphID id="358" name="uni0508"/>
    <GlyphID id="359" name="uni0509"/>
    <GlyphID id="360" name="uni050A"/>
    <GlyphID id="361" name="uni050B"/>
    <GlyphID id="362" name="uni050C"/>
    <GlyphID id="363" name="uni050D"/>
    <GlyphID id="364" name="uni050E"/>
    <GlyphID id="365" name="uni050F"/>
    <GlyphID id="366" name="uni0510"/>
    <GlyphID id="367" name="uni0512"/>
    <GlyphID id="368" name="uni0513"/>
    <GlyphID id="369" name="glyph00369"/>
    <GlyphID id="370" name="uni2000"/>
    <GlyphID id="371" name="uni2001"/>
    <GlyphID id="372" name="uni2002"/>
    <GlyphID id="373" name="uni2003"/>
    <GlyphID id="374" name="uni2004"/>
    <GlyphID id="375" name="uni2005"/>
    <GlyphID id="376" name="uni2006"/>
    <GlyphID id="377" name="uni2007"/>
    <GlyphID id="378" name="uni2008"/>
    <GlyphID id="379" name="uni2009"/>
    <GlyphID id="380" name="glyph00380"/>
    <GlyphID id="381" name="uni200A"/>
    <GlyphID id="382" name="uni200B"/>
    <GlyphID id="383" name="uni2010"/>
    <GlyphID id="384" name="uni2011"/>
    <GlyphID id="385" name="endash"/>
    <GlyphID id="386" name="emdash"/>
    <GlyphID id="387" name="underscoredbl"/>
    <GlyphID id="388" name="quoteleft"/>
    <GlyphID id="389" name="quoteright"/>
    <GlyphID id="390" name="quotesinglbase"/>
    <GlyphID id="391" name="quotereversed"/>
    <GlyphID id="392" name="quotedblleft"/>
    <GlyphID id="393" name="quotedblright"/>
    <GlyphID id="394" name="quotedblbase"/>
    <GlyphID id="395" name="dagger"/>
    <GlyphID id="396" name="daggerdbl"/>
    <GlyphID id="397" name="bullet"/>
    <GlyphID id="398" name="twodotenleader"/>
    <GlyphID id="399" name="ellipsis"/>
    <GlyphID id="400" name="uni2027"/>
    <GlyphID id="401" name="perthousand"/>
    <GlyphID id="402" name="guilsinglleft"/>
    <GlyphID id="403" name="guilsinglright"/>
    <GlyphID id="404" name="fraction"/>
    <GlyphID id="405" name="uni2074"/>
    <GlyphID id="406" name="uni207F"/>
    <GlyphID id="407" name="lira"/>
    <GlyphID id="408" name="uni20A6"/>
    <GlyphID id="409" name="peseta"/>
    <GlyphID id="410" name="uni20A8"/>
    <GlyphID id="411" name="uni20A9"/>
    <GlyphID id="412" name="uni20AA"/>
    <GlyphID id="413" name="Euro"/>
    <GlyphID id="414" name="uni20B1"/>
    <GlyphID id="415" name="uni20B9"/>
    <GlyphID id="416" name="uni20BA"/>
    <GlyphID id="417" name="uni20BC"/>
    <GlyphID id="418" name="uni20BD"/>
    <GlyphID id="419" name="uni2105"/>
    <GlyphID id="420" name="uni2113"/>
    <GlyphID id="421" name="uni2116"/>
    <GlyphID id="422" name="trademark"/>
    <GlyphID id="423" name="estimated"/>
    <GlyphID id="424" name="oneeighth"/>
    <GlyphID id="425" name="threeeighths"/>
    <GlyphID id="426" name="fiveeighths"/>
    <GlyphID id="427" name="seveneighths"/>
    <GlyphID id="428" name="partialdiff"/>
    <GlyphID id="429" name="product"/>
    <GlyphID id="430" name="summation"/>
    <GlyphID id="431" name="minus"/>
    <GlyphID id="432" name="radical"/>
    <GlyphID id="433" name="infinity"/>
    <GlyphID id="434" name="integral"/>
    <GlyphID id="435" name="approxequal"/>
    <GlyphID id="436" name="notequal"/>
    <GlyphID id="437" name="lessequal"/>
    <GlyphID id="438" name="greaterequal"/>
    <GlyphID id="439" name="lozenge"/>
    <GlyphID id="440" name="uniEE01"/>
    <GlyphID id="441" name="uniEE02"/>
    <GlyphID id="442" name="uniF6C3"/>
    <GlyphID id="443" name="glyph00443"/>
    <GlyphID id="444" name="uniFB01"/>
    <GlyphID id="445" name="uniFB02"/>
    <GlyphID id="446" name="uniFB03"/>
    <GlyphID id="447" name="uniFB04"/>
    <GlyphID id="448" name="glyph00448"/>
    <GlyphID id="449" name="glyph00449"/>
    <GlyphID id="450" name="uniFEFF"/>
    <GlyphID id="451" name="uniFFFC"/>
    <GlyphID id="452" name="uniFFFD"/>
    <GlyphID id="453" name="glyph00453"/>
    <GlyphID id="454" name="glyph00454"/>
    <GlyphID id="455" name="glyph00455"/>
    <GlyphID id="456" name="glyph00456"/>
    <GlyphID id="457" name="glyph00457"/>
    <GlyphID id="458" name="glyph00458"/>
    <GlyphID id="459" name="glyph00459"/>
    <GlyphID id="460" name="glyph00460"/>
    <GlyphID id="461" name="glyph00461"/>
    <GlyphID id="462" name="glyph00462"/>
    <GlyphID id="463" name="glyph00463"/>
    <GlyphID id="464" name="glyph00464"/>
    <GlyphID id="465" name="glyph00465"/>
    <GlyphID id="466" name="glyph00466"/>
    <GlyphID id="467" name="glyph00467"/>
    <GlyphID id="468" name="glyph00468"/>
    <GlyphID id="469" name="glyph00469"/>
    <GlyphID id="470" name="glyph00470"/>
    <GlyphID id="471" name="glyph00471"/>
    <GlyphID id="472" name="glyph00472"/>
    <GlyphID id="473" name="glyph00473"/>
    <GlyphID id="474" name="glyph00474"/>
    <GlyphID id="475" name="glyph00475"/>
    <GlyphID id="476" name="glyph00476"/>
    <GlyphID id="477" name="glyph00477"/>
    <GlyphID id="478" name="glyph00478"/>
    <GlyphID id="479" name="glyph00479"/>
    <GlyphID id="480" name="glyph00480"/>
    <GlyphID id="481" name="glyph00481"/>
    <GlyphID id="482" name="glyph00482"/>
    <GlyphID id="483" name="glyph00483"/>
    <GlyphID id="484" name="glyph00484"/>
    <GlyphID id="485" name="glyph00485"/>
    <GlyphID id="486" name="glyph00486"/>
    <GlyphID id="487" name="glyph00487"/>
    <GlyphID id="488" name="glyph00488"/>
    <GlyphID id="489" name="glyph00489"/>
    <GlyphID id="490" name="glyph00490"/>
    <GlyphID id="491" name="glyph00491"/>
    <GlyphID id="492" name="glyph00492"/>
    <GlyphID id="493" name="glyph00493"/>
    <GlyphID id="494" name="glyph00494"/>
    <GlyphID id="495" name="glyph00495"/>
    <GlyphID id="496" name="glyph00496"/>
    <GlyphID id="497" name="glyph00497"/>
    <GlyphID id="498" name="glyph00498"/>
    <GlyphID id="499" name="glyph00499"/>
    <GlyphID id="500" name="glyph00500"/>
    <GlyphID id="501" name="glyph00501"/>
    <GlyphID id="502" name="glyph00502"/>
    <GlyphID id="503" name="glyph00503"/>
    <GlyphID id="504" name="glyph00504"/>
    <GlyphID id="505" name="glyph00505"/>
    <GlyphID id="506" name="glyph00506"/>
    <GlyphID id="507" name="glyph00507"/>
    <GlyphID id="508" name="glyph00508"/>
    <GlyphID id="509" name="glyph00509"/>
    <GlyphID id="510" name="glyph00510"/>
    <GlyphID id="511" name="glyph00511"/>
    <GlyphID id="512" name="glyph00512"/>
    <GlyphID id="513" name="glyph00513"/>
    <GlyphID id="514" name="glyph00514"/>
    <GlyphID id="515" name="glyph00515"/>
    <GlyphID id="516" name="glyph00516"/>
    <GlyphID id="517" name="glyph00517"/>
    <GlyphID id="518" name="glyph00518"/>
    <GlyphID id="519" name="glyph00519"/>
    <GlyphID id="520" name="glyph00520"/>
    <GlyphID id="521" name="glyph00521"/>
    <GlyphID id="522" name="glyph00522"/>
    <GlyphID id="523" name="glyph00523"/>
    <GlyphID id="524" name="glyph00524"/>
    <GlyphID id="525" name="glyph00525"/>
    <GlyphID id="526" name="glyph00526"/>
    <GlyphID id="527" name="glyph00527"/>
    <GlyphID id="528" name="glyph00528"/>
    <GlyphID id="529" name="glyph00529"/>
    <GlyphID id="530" name="glyph00530"/>
    <GlyphID id="531" name="glyph00531"/>
    <GlyphID id="532" name="glyph00532"/>
    <GlyphID id="533" name="glyph00533"/>
    <GlyphID id="534" name="glyph00534"/>
    <GlyphID id="535" name="glyph00535"/>
    <GlyphID id="536" name="glyph00536"/>
    <GlyphID id="537" name="glyph00537"/>
    <GlyphID id="538" name="glyph00538"/>
    <GlyphID id="539" name="glyph00539"/>
    <GlyphID id="540" name="glyph00540"/>
    <GlyphID id="541" name="glyph00541"/>
    <GlyphID id="542" name="glyph00542"/>
    <GlyphID id="543" name="glyph00543"/>
    <GlyphID id="544" name="glyph00544"/>
    <GlyphID id="545" name="glyph00545"/>
    <GlyphID id="546" name="glyph00546"/>
    <GlyphID id="547" name="glyph00547"/>
    <GlyphID id="548" name="glyph00548"/>
    <GlyphID id="549" name="glyph00549"/>
    <GlyphID id="550" name="glyph00550"/>
    <GlyphID id="551" name="glyph00551"/>
    <GlyphID id="552" name="glyph00552"/>
    <GlyphID id="553" name="glyph00553"/>
    <GlyphID id="554" name="glyph00554"/>
    <GlyphID id="555" name="glyph00555"/>
    <GlyphID id="556" name="glyph00556"/>
    <GlyphID id="557" name="glyph00557"/>
    <GlyphID id="558" name="glyph00558"/>
    <GlyphID id="559" name="glyph00559"/>
    <GlyphID id="560" name="glyph00560"/>
    <GlyphID id="561" name="glyph00561"/>
    <GlyphID id="562" name="glyph00562"/>
    <GlyphID id="563" name="glyph00563"/>
    <GlyphID id="564" name="glyph00564"/>
    <GlyphID id="565" name="glyph00565"/>
    <GlyphID id="566" name="glyph00566"/>
    <GlyphID id="567" name="glyph00567"/>
    <GlyphID id="568" name="glyph00568"/>
    <GlyphID id="569" name="glyph00569"/>
    <GlyphID id="570" name="glyph00570"/>
    <GlyphID id="571" name="glyph00571"/>
    <GlyphID id="572" name="glyph00572"/>
    <GlyphID id="573" name="glyph00573"/>
    <GlyphID id="574" name="glyph00574"/>
    <GlyphID id="575" name="glyph00575"/>
    <GlyphID id="576" name="glyph00576"/>
    <GlyphID id="577" name="glyph00577"/>
    <GlyphID id="578" name="glyph00578"/>
    <GlyphID id="579" name="glyph00579"/>
    <GlyphID id="580" name="glyph00580"/>
    <GlyphID id="581" name="glyph00581"/>
    <GlyphID id="582" name="glyph00582"/>
    <GlyphID id="583" name="glyph00583"/>
    <GlyphID id="584" name="glyph00584"/>
    <GlyphID id="585" name="glyph00585"/>
    <GlyphID id="586" name="glyph00586"/>
    <GlyphID id="587" name="glyph00587"/>
    <GlyphID id="588" name="glyph00588"/>
    <GlyphID id="589" name="glyph00589"/>
    <GlyphID id="590" name="glyph00590"/>
    <GlyphID id="591" name="glyph00591"/>
    <GlyphID id="592" name="glyph00592"/>
    <GlyphID id="593" name="glyph00593"/>
    <GlyphID id="594" name="glyph00594"/>
    <GlyphID id="595" name="glyph00595"/>
    <GlyphID id="596" name="glyph00596"/>
    <GlyphID id="597" name="glyph00597"/>
    <GlyphID id="598" name="glyph00598"/>
    <GlyphID id="599" name="glyph00599"/>
    <GlyphID id="600" name="glyph00600"/>
    <GlyphID id="601" name="glyph00601"/>
    <GlyphID id="602" name="glyph00602"/>
    <GlyphID id="603" name="glyph00603"/>
    <GlyphID id="604" name="glyph00604"/>
    <GlyphID id="605" name="glyph00605"/>
    <GlyphID id="606" name="glyph00606"/>
    <GlyphID id="607" name="glyph00607"/>
    <GlyphID id="608" name="glyph00608"/>
    <GlyphID id="609" name="glyph00609"/>
    <GlyphID id="610" name="glyph00610"/>
    <GlyphID id="611" name="glyph00611"/>
    <GlyphID id="612" name="glyph00612"/>
    <GlyphID id="613" name="glyph00613"/>
    <GlyphID id="614" name="glyph00614"/>
    <GlyphID id="615" name="glyph00615"/>
    <GlyphID id="616" name="glyph00616"/>
    <GlyphID id="617" name="glyph00617"/>
    <GlyphID id="618" name="glyph00618"/>
    <GlyphID id="619" name="glyph00619"/>
    <GlyphID id="620" name="glyph00620"/>
    <GlyphID id="621" name="glyph00621"/>
    <GlyphID id="622" name="glyph00622"/>
    <GlyphID id="623" name="glyph00623"/>
    <GlyphID id="624" name="glyph00624"/>
    <GlyphID id="625" name="glyph00625"/>
    <GlyphID id="626" name="glyph00626"/>
    <GlyphID id="627" name="glyph00627"/>
    <GlyphID id="628" name="glyph00628"/>
    <GlyphID id="629" name="glyph00629"/>
    <GlyphID id="630" name="glyph00630"/>
    <GlyphID id="631" name="glyph00631"/>
    <GlyphID id="632" name="uni00A0"/>
    <GlyphID id="633" name="uni00AD"/>
    <GlyphID id="634" name="Dcroat"/>
    <GlyphID id="635" name="Eth"/>
    <GlyphID id="636" name="hbar"/>
    <GlyphID id="637" name="Tbar"/>
    <GlyphID id="638" name="tbar"/>
    <GlyphID id="639" name="Agrave"/>
    <GlyphID id="640" name="Aacute"/>
    <GlyphID id="641" name="Acircumflex"/>
    <GlyphID id="642" name="Atilde"/>
    <GlyphID id="643" name="Adieresis"/>
    <GlyphID id="644" name="Aring"/>
    <GlyphID id="645" name="Aringacute"/>
    <GlyphID id="646" name="Ccedilla"/>
    <GlyphID id="647" name="Egrave"/>
    <GlyphID id="648" name="Eacute"/>
    <GlyphID id="649" name="Ecircumflex"/>
    <GlyphID id="650" name="Edieresis"/>
    <GlyphID id="651" name="Igrave"/>
    <GlyphID id="652" name="Iacute"/>
    <GlyphID id="653" name="Icircumflex"/>
    <GlyphID id="654" name="Idieresis"/>
    <GlyphID id="655" name="Ntilde"/>
    <GlyphID id="656" name="Ograve"/>
    <GlyphID id="657" name="Oacute"/>
    <GlyphID id="658" name="Ocircumflex"/>
    <GlyphID id="659" name="Otilde"/>
    <GlyphID id="660" name="Odieresis"/>
    <GlyphID id="661" name="Ugrave"/>
    <GlyphID id="662" name="Uacute"/>
    <GlyphID id="663" name="Ucircumflex"/>
    <GlyphID id="664" name="Udieresis"/>
    <GlyphID id="665" name="Yacute"/>
    <GlyphID id="666" name="agrave"/>
    <GlyphID id="667" name="aacute"/>
    <GlyphID id="668" name="acircumflex"/>
    <GlyphID id="669" name="atilde"/>
    <GlyphID id="670" name="adieresis"/>
    <GlyphID id="671" name="aring"/>
    <GlyphID id="672" name="aringacute"/>
    <GlyphID id="673" name="ccedilla"/>
    <GlyphID id="674" name="egrave"/>
    <GlyphID id="675" name="eacute"/>
    <GlyphID id="676" name="ecircumflex"/>
    <GlyphID id="677" name="edieresis"/>
    <GlyphID id="678" name="igrave"/>
    <GlyphID id="679" name="iacute"/>
    <GlyphID id="680" name="icircumflex"/>
    <GlyphID id="681" name="idieresis"/>
    <GlyphID id="682" name="ntilde"/>
    <GlyphID id="683" name="ograve"/>
    <GlyphID id="684" name="oacute"/>
    <GlyphID id="685" name="ocircumflex"/>
    <GlyphID id="686" name="otilde"/>
    <GlyphID id="687" name="odieresis"/>
    <GlyphID id="688" name="ugrave"/>
    <GlyphID id="689" name="uacute"/>
    <GlyphID id="690" name="ucircumflex"/>
    <GlyphID id="691" name="udieresis"/>
    <GlyphID id="692" name="yacute"/>
    <GlyphID id="693" name="ydieresis"/>
    <GlyphID id="694" name="Amacron"/>
    <GlyphID id="695" name="amacron"/>
    <GlyphID id="696" name="Abreve"/>
    <GlyphID id="697" name="abreve"/>
    <GlyphID id="698" name="Aogonek"/>
    <GlyphID id="699" name="aogonek"/>
    <GlyphID id="700" name="Cacute"/>
    <GlyphID id="701" name="cacute"/>
    <GlyphID id="702" name="Ccircumflex"/>
    <GlyphID id="703" name="ccircumflex"/>
    <GlyphID id="704" name="Cdotaccent"/>
    <GlyphID id="705" name="cdotaccent"/>
    <GlyphID id="706" name="Ccaron"/>
    <GlyphID id="707" name="ccaron"/>
    <GlyphID id="708" name="Dcaron"/>
    <GlyphID id="709" name="dcaron"/>
    <GlyphID id="710" name="Emacron"/>
    <GlyphID id="711" name="emacron"/>
    <GlyphID id="712" name="Ebreve"/>
    <GlyphID id="713" name="ebreve"/>
    <GlyphID id="714" name="Edotaccent"/>
    <GlyphID id="715" name="edotaccent"/>
    <GlyphID id="716" name="Eogonek"/>
    <GlyphID id="717" name="eogonek"/>
    <GlyphID id="718" name="Ecaron"/>
    <GlyphID id="719" name="ecaron"/>
    <GlyphID id="720" name="Gcircumflex"/>
    <GlyphID id="721" name="gcircumflex"/>
    <GlyphID id="722" name="Gbreve"/>
    <GlyphID id="723" name="gbreve"/>
    <GlyphID id="724" name="Gdotaccent"/>
    <GlyphID id="725" name="gdotaccent"/>
    <GlyphID id="726" name="uni0122"/>
    <GlyphID id="727" name="uni0123"/>
    <GlyphID id="728" name="Hcircumflex"/>
    <GlyphID id="729" name="hcircumflex"/>
    <GlyphID id="730" name="Itilde"/>
    <GlyphID id="731" name="itilde"/>
    <GlyphID id="732" name="Imacron"/>
    <GlyphID id="733" name="imacron"/>
    <GlyphID id="734" name="Ibreve"/>
    <GlyphID id="735" name="ibreve"/>
    <GlyphID id="736" name="Iogonek"/>
    <GlyphID id="737" name="iogonek"/>
    <GlyphID id="738" name="Idotaccent"/>
    <GlyphID id="739" name="IJ"/>
    <GlyphID id="740" name="ij"/>
    <GlyphID id="741" name="Jcircumflex"/>
    <GlyphID id="742" name="jcircumflex"/>
    <GlyphID id="743" name="uni0136"/>
    <GlyphID id="744" name="uni0137"/>
    <GlyphID id="745" name="Lacute"/>
    <GlyphID id="746" name="lacute"/>
    <GlyphID id="747" name="uni013B"/>
    <GlyphID id="748" name="uni013C"/>
    <GlyphID id="749" name="Lcaron"/>
    <GlyphID id="750" name="lcaron"/>
    <GlyphID id="751" name="Ldot"/>
    <GlyphID id="752" name="ldot"/>
    <GlyphID id="753" name="Nacute"/>
    <GlyphID id="754" name="nacute"/>
    <GlyphID id="755" name="uni0145"/>
    <GlyphID id="756" name="uni0146"/>
    <GlyphID id="757" name="Ncaron"/>
    <GlyphID id="758" name="ncaron"/>
    <GlyphID id="759" name="napostrophe"/>
    <GlyphID id="760" name="Omacron"/>
    <GlyphID id="761" name="omacron"/>
    <GlyphID id="762" name="Obreve"/>
    <GlyphID id="763" name="obreve"/>
    <GlyphID id="764" name="Ohungarumlaut"/>
    <GlyphID id="765" name="ohungarumlaut"/>
    <GlyphID id="766" name="Racute"/>
    <GlyphID id="767" name="racute"/>
    <GlyphID id="768" name="uni0156"/>
    <GlyphID id="769" name="uni0157"/>
    <GlyphID id="770" name="Rcaron"/>
    <GlyphID id="771" name="rcaron"/>
    <GlyphID id="772" name="Sacute"/>
    <GlyphID id="773" name="sacute"/>
    <GlyphID id="774" name="Scircumflex"/>
    <GlyphID id="775" name="scircumflex"/>
    <GlyphID id="776" name="Scedilla"/>
    <GlyphID id="777" name="scedilla"/>
    <GlyphID id="778" name="uni0218"/>
    <GlyphID id="779" name="uni0219"/>
    <GlyphID id="780" name="Scaron"/>
    <GlyphID id="781" name="scaron"/>
    <GlyphID id="782" name="uni021A"/>
    <GlyphID id="783" name="uni021B"/>
    <GlyphID id="784" name="uni0162"/>
    <GlyphID id="785" name="uni0163"/>
    <GlyphID id="786" name="Tcaron"/>
    <GlyphID id="787" name="tcaron"/>
    <GlyphID id="788" name="Utilde"/>
    <GlyphID id="789" name="utilde"/>
    <GlyphID id="790" name="Umacron"/>
    <GlyphID id="791" name="umacron"/>
    <GlyphID id="792" name="Ubreve"/>
    <GlyphID id="793" name="ubreve"/>
    <GlyphID id="794" name="Uring"/>
    <GlyphID id="795" name="uring"/>
    <GlyphID id="796" name="Uhungarumlaut"/>
    <GlyphID id="797" name="uhungarumlaut"/>
    <GlyphID id="798" name="Uogonek"/>
    <GlyphID id="799" name="uogonek"/>
    <GlyphID id="800" name="Wcircumflex"/>
    <GlyphID id="801" name="wcircumflex"/>
    <GlyphID id="802" name="Ycircumflex"/>
    <GlyphID id="803" name="ycircumflex"/>
    <GlyphID id="804" name="Ydieresis"/>
    <GlyphID id="805" name="Zacute"/>
    <GlyphID id="806" name="zacute"/>
    <GlyphID id="807" name="Zdotaccent"/>
    <GlyphID id="808" name="zdotaccent"/>
    <GlyphID id="809" name="Zcaron"/>
    <GlyphID id="810" name="zcaron"/>
    <GlyphID id="811" name="AEacute"/>
    <GlyphID id="812" name="aeacute"/>
    <GlyphID id="813" name="Oslashacute"/>
    <GlyphID id="814" name="oslashacute"/>
    <GlyphID id="815" name="glyph00815"/>
    <GlyphID id="816" name="glyph00816"/>
    <GlyphID id="817" name="glyph00817"/>
    <GlyphID id="818" name="glyph00818"/>
    <GlyphID id="819" name="glyph00819"/>
    <GlyphID id="820" name="glyph00820"/>
    <GlyphID id="821" name="glyph00821"/>
    <GlyphID id="822" name="glyph00822"/>
    <GlyphID id="823" name="glyph00823"/>
    <GlyphID id="824" name="glyph00824"/>
    <GlyphID id="825" name="glyph00825"/>
    <GlyphID id="826" name="glyph00826"/>
    <GlyphID id="827" name="glyph00827"/>
    <GlyphID id="828" name="glyph00828"/>
    <GlyphID id="829" name="glyph00829"/>
    <GlyphID id="830" name="glyph00830"/>
    <GlyphID id="831" name="glyph00831"/>
    <GlyphID id="832" name="glyph00832"/>
    <GlyphID id="833" name="glyph00833"/>
    <GlyphID id="834" name="glyph00834"/>
    <GlyphID id="835" name="glyph00835"/>
    <GlyphID id="836" name="glyph00836"/>
    <GlyphID id="837" name="glyph00837"/>
    <GlyphID id="838" name="glyph00838"/>
    <GlyphID id="839" name="glyph00839"/>
    <GlyphID id="840" name="glyph00840"/>
    <GlyphID id="841" name="glyph00841"/>
    <GlyphID id="842" name="glyph00842"/>
    <GlyphID id="843" name="glyph00843"/>
    <GlyphID id="844" name="glyph00844"/>
    <GlyphID id="845" name="glyph00845"/>
    <GlyphID id="846" name="glyph00846"/>
    <GlyphID id="847" name="glyph00847"/>
    <GlyphID id="848" name="glyph00848"/>
    <GlyphID id="849" name="glyph00849"/>
    <GlyphID id="850" name="glyph00850"/>
    <GlyphID id="851" name="glyph00851"/>
    <GlyphID id="852" name="glyph00852"/>
    <GlyphID id="853" name="glyph00853"/>
    <GlyphID id="854" name="glyph00854"/>
    <GlyphID id="855" name="glyph00855"/>
    <GlyphID id="856" name="glyph00856"/>
    <GlyphID id="857" name="glyph00857"/>
    <GlyphID id="858" name="glyph00858"/>
    <GlyphID id="859" name="glyph00859"/>
    <GlyphID id="860" name="glyph00860"/>
    <GlyphID id="861" name="glyph00861"/>
    <GlyphID id="862" name="glyph00862"/>
    <GlyphID id="863" name="glyph00863"/>
    <GlyphID id="864" name="glyph00864"/>
    <GlyphID id="865" name="glyph00865"/>
    <GlyphID id="866" name="glyph00866"/>
    <GlyphID id="867" name="glyph00867"/>
    <GlyphID id="868" name="glyph00868"/>
    <GlyphID id="869" name="glyph00869"/>
    <GlyphID id="870" name="glyph00870"/>
    <GlyphID id="871" name="glyph00871"/>
    <GlyphID id="872" name="glyph00872"/>
    <GlyphID id="873" name="glyph00873"/>
    <GlyphID id="874" name="glyph00874"/>
    <GlyphID id="875" name="glyph00875"/>
    <GlyphID id="876" name="glyph00876"/>
    <GlyphID id="877" name="glyph00877"/>
    <GlyphID id="878" name="glyph00878"/>
    <GlyphID id="879" name="glyph00879"/>
    <GlyphID id="880" name="glyph00880"/>
    <GlyphID id="881" name="glyph00881"/>
    <GlyphID id="882" name="glyph00882"/>
    <GlyphID id="883" name="glyph00883"/>
    <GlyphID id="884" name="glyph00884"/>
    <GlyphID id="885" name="glyph00885"/>
    <GlyphID id="886" name="glyph00886"/>
    <GlyphID id="887" name="glyph00887"/>
    <GlyphID id="888" name="glyph00888"/>
    <GlyphID id="889" name="glyph00889"/>
    <GlyphID id="890" name="glyph00890"/>
    <GlyphID id="891" name="glyph00891"/>
    <GlyphID id="892" name="glyph00892"/>
    <GlyphID id="893" name="glyph00893"/>
    <GlyphID id="894" name="glyph00894"/>
    <GlyphID id="895" name="glyph00895"/>
    <GlyphID id="896" name="glyph00896"/>
    <GlyphID id="897" name="glyph00897"/>
    <GlyphID id="898" name="glyph00898"/>
    <GlyphID id="899" name="glyph00899"/>
    <GlyphID id="900" name="glyph00900"/>
    <GlyphID id="901" name="glyph00901"/>
    <GlyphID id="902" name="Alphatonos"/>
    <GlyphID id="903" name="Epsilontonos"/>
    <GlyphID id="904" name="Etatonos"/>
    <GlyphID id="905" name="Iotatonos"/>
    <GlyphID id="906" name="Omicrontonos"/>
    <GlyphID id="907" name="Upsilontonos"/>
    <GlyphID id="908" name="Omegatonos"/>
    <GlyphID id="909" name="iotadieresistonos"/>
    <GlyphID id="910" name="Alpha"/>
    <GlyphID id="911" name="Beta"/>
    <GlyphID id="912" name="Epsilon"/>
    <GlyphID id="913" name="Zeta"/>
    <GlyphID id="914" name="Eta"/>
    <GlyphID id="915" name="Iota"/>
    <GlyphID id="916" name="Kappa"/>
    <GlyphID id="917" name="Mu"/>
    <GlyphID id="918" name="Nu"/>
    <GlyphID id="919" name="Omicron"/>
    <GlyphID id="920" name="Rho"/>
    <GlyphID id="921" name="Tau"/>
    <GlyphID id="922" name="Upsilon"/>
    <GlyphID id="923" name="Chi"/>
    <GlyphID id="924" name="Iotadieresis"/>
    <GlyphID id="925" name="Upsilondieresis"/>
    <GlyphID id="926" name="alphatonos"/>
    <GlyphID id="927" name="epsilontonos"/>
    <GlyphID id="928" name="etatonos"/>
    <GlyphID id="929" name="iotatonos"/>
    <GlyphID id="930" name="upsilondieresistonos"/>
    <GlyphID id="931" name="kappa"/>
    <GlyphID id="932" name="omicron"/>
    <GlyphID id="933" name="uni03BC"/>
    <GlyphID id="934" name="nu"/>
    <GlyphID id="935" name="chi"/>
    <GlyphID id="936" name="iotadieresis"/>
    <GlyphID id="937" name="upsilondieresis"/>
    <GlyphID id="938" name="omicrontonos"/>
    <GlyphID id="939" name="upsilontonos"/>
    <GlyphID id="940" name="omegatonos"/>
    <GlyphID id="941" name="uni0401"/>
    <GlyphID id="942" name="uni0403"/>
    <GlyphID id="943" name="uni0405"/>
    <GlyphID id="944" name="uni0406"/>
    <GlyphID id="945" name="uni0407"/>
    <GlyphID id="946" name="uni0408"/>
    <GlyphID id="947" name="uni041A"/>
    <GlyphID id="948" name="uni040C"/>
    <GlyphID id="949" name="uni040E"/>
    <GlyphID id="950" name="uni0410"/>
    <GlyphID id="951" name="uni0412"/>
    <GlyphID id="952" name="uni0413"/>
    <GlyphID id="953" name="uni0415"/>
    <GlyphID id="954" name="uni0419"/>
    <GlyphID id="955" name="uni041C"/>
    <GlyphID id="956" name="uni041D"/>
    <GlyphID id="957" name="uni041E"/>
    <GlyphID id="958" name="uni041F"/>
    <GlyphID id="959" name="uni0420"/>
    <GlyphID id="960" name="uni0421"/>
    <GlyphID id="961" name="uni0422"/>
    <GlyphID id="962" name="uni0425"/>
    <GlyphID id="963" name="uni0430"/>
    <GlyphID id="964" name="uni0435"/>
    <GlyphID id="965" name="uni0439"/>
    <GlyphID id="966" name="uni043E"/>
    <GlyphID id="967" name="uni0440"/>
    <GlyphID id="968" name="uni0441"/>
    <GlyphID id="969" name="uni0443"/>
    <GlyphID id="970" name="uni0445"/>
    <GlyphID id="971" name="uni0451"/>
    <GlyphID id="972" name="uni0453"/>
    <GlyphID id="973" name="uni0455"/>
    <GlyphID id="974" name="uni0456"/>
    <GlyphID id="975" name="uni0457"/>
    <GlyphID id="976" name="uni0458"/>
    <GlyphID id="977" name="uni045C"/>
    <GlyphID id="978" name="uni045E"/>
    <GlyphID id="979" name="Wgrave"/>
    <GlyphID id="980" name="wgrave"/>
    <GlyphID id="981" name="Wacute"/>
    <GlyphID id="982" name="wacute"/>
    <GlyphID id="983" name="Wdieresis"/>
    <GlyphID id="984" name="wdieresis"/>
    <GlyphID id="985" name="Ygrave"/>
    <GlyphID id="986" name="ygrave"/>
    <GlyphID id="987" name="minute"/>
    <GlyphID id="988" name="second"/>
    <GlyphID id="989" name="exclamdbl"/>
    <GlyphID id="990" name="uni01F0"/>
    <GlyphID id="991" name="uni02BC"/>
    <GlyphID id="992" name="uni1E3E"/>
    <GlyphID id="993" name="uni1E3F"/>
    <GlyphID id="994" name="uni1E00"/>
    <GlyphID id="995" name="uni1E01"/>
    <GlyphID id="996" name="uni0400"/>
    <GlyphID id="997" name="uni040D"/>
    <GlyphID id="998" name="uni0450"/>
    <GlyphID id="999" name="uni045D"/>
    <GlyphID id="1000" name="uni0470"/>
    <GlyphID id="1001" name="uni0471"/>
    <GlyphID id="1002" name="uni0476"/>
    <GlyphID id="1003" name="uni0477"/>
    <GlyphID id="1004" name="uni0479"/>
    <GlyphID id="1005" name="uni0478"/>
    <GlyphID id="1006" name="uni0498"/>
    <GlyphID id="1007" name="uni0499"/>
    <GlyphID id="1008" name="uni04AA"/>
    <GlyphID id="1009" name="uni04AB"/>
    <GlyphID id="1010" name="uni04AE"/>
    <GlyphID id="1011" name="uni04AF"/>
    <GlyphID id="1012" name="uni04C0"/>
    <GlyphID id="1013" name="uni04C1"/>
    <GlyphID id="1014" name="uni04C2"/>
    <GlyphID id="1015" name="uni04CF"/>
    <GlyphID id="1016" name="uni04D0"/>
    <GlyphID id="1017" name="uni04D1"/>
    <GlyphID id="1018" name="uni04D2"/>
    <GlyphID id="1019" name="uni04D3"/>
    <GlyphID id="1020" name="uni04D4"/>
    <GlyphID id="1021" name="uni04D5"/>
    <GlyphID id="1022" name="uni04D6"/>
    <GlyphID id="1023" name="uni04D7"/>
    <GlyphID id="1024" name="uni04DA"/>
    <GlyphID id="1025" name="uni04D9"/>
    <GlyphID id="1026" name="uni04DB"/>
    <GlyphID id="1027" name="uni04DC"/>
    <GlyphID id="1028" name="uni04DD"/>
    <GlyphID id="1029" name="uni04DE"/>
    <GlyphID id="1030" name="uni04DF"/>
    <GlyphID id="1031" name="uni04E2"/>
    <GlyphID id="1032" name="uni04E3"/>
    <GlyphID id="1033" name="uni04E4"/>
    <GlyphID id="1034" name="uni04E5"/>
    <GlyphID id="1035" name="uni04E6"/>
    <GlyphID id="1036" name="uni04E7"/>
    <GlyphID id="1037" name="uni04E8"/>
    <GlyphID id="1038" name="uni04E9"/>
    <GlyphID id="1039" name="uni04EA"/>
    <GlyphID id="1040" name="uni04EB"/>
    <GlyphID id="1041" name="uni04EC"/>
    <GlyphID id="1042" name="uni04ED"/>
    <GlyphID id="1043" name="uni04EE"/>
    <GlyphID id="1044" name="uni04EF"/>
    <GlyphID id="1045" name="uni04F0"/>
    <GlyphID id="1046" name="uni04F1"/>
    <GlyphID id="1047" name="uni04F2"/>
    <GlyphID id="1048" name="uni04F3"/>
    <GlyphID id="1049" name="uni04F4"/>
    <GlyphID id="1050" name="uni04F5"/>
    <GlyphID id="1051" name="uni04F8"/>
    <GlyphID id="1052" name="uni04F9"/>
    <GlyphID id="1053" name="uni0501"/>
    <GlyphID id="1054" name="uni1EA0"/>
    <GlyphID id="1055" name="uni1EA1"/>
    <GlyphID id="1056" name="uni1EA2"/>
    <GlyphID id="1057" name="uni1EA3"/>
    <GlyphID id="1058" name="uni1EA4"/>
    <GlyphID id="1059" name="uni1EA5"/>
    <GlyphID id="1060" name="uni1EA6"/>
    <GlyphID id="1061" name="uni1EA7"/>
    <GlyphID id="1062" name="uni1EA8"/>
    <GlyphID id="1063" name="uni1EA9"/>
    <GlyphID id="1064" name="uni1EAA"/>
    <GlyphID id="1065" name="uni1EAB"/>
    <GlyphID id="1066" name="uni1EAC"/>
    <GlyphID id="1067" name="uni1EAD"/>
    <GlyphID id="1068" name="uni1EAE"/>
    <GlyphID id="1069" name="uni1EAF"/>
    <GlyphID id="1070" name="uni1EB0"/>
    <GlyphID id="1071" name="uni1EB1"/>
    <GlyphID id="1072" name="uni1EB2"/>
    <GlyphID id="1073" name="uni1EB3"/>
    <GlyphID id="1074" name="uni1EB4"/>
    <GlyphID id="1075" name="uni1EB5"/>
    <GlyphID id="1076" name="uni1EB6"/>
    <GlyphID id="1077" name="uni1EB7"/>
    <GlyphID id="1078" name="uni1EB8"/>
    <GlyphID id="1079" name="uni1EB9"/>
    <GlyphID id="1080" name="uni1EBA"/>
    <GlyphID id="1081" name="uni1EBB"/>
    <GlyphID id="1082" name="uni1EBC"/>
    <GlyphID id="1083" name="uni1EBD"/>
    <GlyphID id="1084" name="uni1EBE"/>
    <GlyphID id="1085" name="uni1EBF"/>
    <GlyphID id="1086" name="uni1EC0"/>
    <GlyphID id="1087" name="uni1EC1"/>
    <GlyphID id="1088" name="uni1EC2"/>
    <GlyphID id="1089" name="uni1EC3"/>
    <GlyphID id="1090" name="uni1EC4"/>
    <GlyphID id="1091" name="uni1EC5"/>
    <GlyphID id="1092" name="uni1EC6"/>
    <GlyphID id="1093" name="uni1EC7"/>
    <GlyphID id="1094" name="uni1EC8"/>
    <GlyphID id="1095" name="uni1EC9"/>
    <GlyphID id="1096" name="uni1ECA"/>
    <GlyphID id="1097" name="uni1ECB"/>
    <GlyphID id="1098" name="uni1ECC"/>
    <GlyphID id="1099" name="uni1ECD"/>
    <GlyphID id="1100" name="uni1ECE"/>
    <GlyphID id="1101" name="uni1ECF"/>
    <GlyphID id="1102" name="uni1ED0"/>
    <GlyphID id="1103" name="uni1ED1"/>
    <GlyphID id="1104" name="uni1ED2"/>
    <GlyphID id="1105" name="uni1ED3"/>
    <GlyphID id="1106" name="uni1ED4"/>
    <GlyphID id="1107" name="uni1ED5"/>
    <GlyphID id="1108" name="uni1ED6"/>
    <GlyphID id="1109" name="uni1ED7"/>
    <GlyphID id="1110" name="uni1ED8"/>
    <GlyphID id="1111" name="uni1ED9"/>
    <GlyphID id="1112" name="uni1EDA"/>
    <GlyphID id="1113" name="uni1EDB"/>
    <GlyphID id="1114" name="uni1EDC"/>
    <GlyphID id="1115" name="uni1EDD"/>
    <GlyphID id="1116" name="uni1EDE"/>
    <GlyphID id="1117" name="uni1EDF"/>
    <GlyphID id="1118" name="uni1EE0"/>
    <GlyphID id="1119" name="uni1EE1"/>
    <GlyphID id="1120" name="uni1EE2"/>
    <GlyphID id="1121" name="uni1EE3"/>
    <GlyphID id="1122" name="uni1EE4"/>
    <GlyphID id="1123" name="uni1EE5"/>
    <GlyphID id="1124" name="uni1EE6"/>
    <GlyphID id="1125" name="uni1EE7"/>
    <GlyphID id="1126" name="uni1EE8"/>
    <GlyphID id="1127" name="uni1EE9"/>
    <GlyphID id="1128" name="uni1EEA"/>
    <GlyphID id="1129" name="uni1EEB"/>
    <GlyphID id="1130" name="uni1EEC"/>
    <GlyphID id="1131" name="uni1EED"/>
    <GlyphID id="1132" name="uni1EEE"/>
    <GlyphID id="1133" name="uni1EEF"/>
    <GlyphID id="1134" name="uni1EF0"/>
    <GlyphID id="1135" name="uni1EF1"/>
    <GlyphID id="1136" name="uni1EF4"/>
    <GlyphID id="1137" name="uni1EF5"/>
    <GlyphID id="1138" name="uni1EF6"/>
    <GlyphID id="1139" name="uni1EF7"/>
    <GlyphID id="1140" name="uni1EF8"/>
    <GlyphID id="1141" name="uni1EF9"/>
    <GlyphID id="1142" name="dong"/>
    <GlyphID id="1143" name="uni04AC"/>
    <GlyphID id="1144" name="uni04AD"/>
    <GlyphID id="1145" name="uni04CB"/>
    <GlyphID id="1146" name="uni04CC"/>
    <GlyphID id="1147" name="uni04F6"/>
    <GlyphID id="1148" name="uni04F7"/>
    <GlyphID id="1149" name="uni04BE"/>
    <GlyphID id="1150" name="uni04BF"/>
    <GlyphID id="1151" name="uni04BB"/>
    <GlyphID id="1152" name="uni048C"/>
    <GlyphID id="1153" name="uni0462"/>
    <GlyphID id="1154" name="uni0492"/>
    <GlyphID id="1155" name="uni0493"/>
    <GlyphID id="1156" name="uni049E"/>
    <GlyphID id="1157" name="uni049F"/>
    <GlyphID id="1158" name="uni04B0"/>
    <GlyphID id="1159" name="uni04B1"/>
    <GlyphID id="1160" name="uni04FE"/>
    <GlyphID id="1161" name="uni04FF"/>
    <GlyphID id="1162" name="uni0511"/>
    <GlyphID id="1163" name="franc"/>
    <GlyphID id="1164" name="uni2015"/>
    <GlyphID id="1165" name="glyph01165"/>
    <GlyphID id="1166" name="glyph01166"/>
    <GlyphID id="1167" name="glyph01167"/>
    <GlyphID id="1168" name="glyph01168"/>
    <GlyphID id="1169" name="glyph01169"/>
    <GlyphID id="1170" name="glyph01170"/>
    <GlyphID id="1171" name="glyph01171"/>
    <GlyphID id="1172" name="glyph01172"/>
    <GlyphID id="1173" name="glyph01173"/>
    <GlyphID id="1174" name="glyph01174"/>
    <GlyphID id="1175" name="glyph01175"/>
    <GlyphID id="1176" name="glyph01176"/>
    <GlyphID id="1177" name="glyph01177"/>
    <GlyphID id="1178" name="glyph01178"/>
    <GlyphID id="1179" name="glyph01179"/>
    <GlyphID id="1180" name="glyph01180"/>
    <GlyphID id="1181" name="glyph01181"/>
    <GlyphID id="1182" name="glyph01182"/>
    <GlyphID id="1183" name="glyph01183"/>
    <GlyphID id="1184" name="glyph01184"/>
    <GlyphID id="1185" name="glyph01185"/>
    <GlyphID id="1186" name="glyph01186"/>
    <GlyphID id="1187" name="glyph01187"/>
    <GlyphID id="1188" name="glyph01188"/>
    <GlyphID id="1189" name="glyph01189"/>
    <GlyphID id="1190" name="glyph01190"/>
    <GlyphID id="1191" name="glyph01191"/>
    <GlyphID id="1192" name="glyph01192"/>
    <GlyphID id="1193" name="glyph01193"/>
    <GlyphID id="1194" name="glyph01194"/>
    <GlyphID id="1195" name="glyph01195"/>
    <GlyphID id="1196" name="glyph01196"/>
    <GlyphID id="1197" name="glyph01197"/>
    <GlyphID id="1198" name="glyph01198"/>
    <GlyphID id="1199" name="glyph01199"/>
    <GlyphID id="1200" name="glyph01200"/>
    <GlyphID id="1201" name="glyph01201"/>
    <GlyphID id="1202" name="glyph01202"/>
    <GlyphID id="1203" name="glyph01203"/>
    <GlyphID id="1204" name="glyph01204"/>
    <GlyphID id="1205" name="glyph01205"/>
    <GlyphID id="1206" name="glyph01206"/>
    <GlyphID id="1207" name="glyph01207"/>
    <GlyphID id="1208" name="glyph01208"/>
    <GlyphID id="1209" name="glyph01209"/>
    <GlyphID id="1210" name="glyph01210"/>
    <GlyphID id="1211" name="glyph01211"/>
    <GlyphID id="1212" name="glyph01212"/>
    <GlyphID id="1213" name="glyph01213"/>
    <GlyphID id="1214" name="glyph01214"/>
    <GlyphID id="1215" name="glyph01215"/>
    <GlyphID id="1216" name="glyph01216"/>
    <GlyphID id="1217" name="glyph01217"/>
    <GlyphID id="1218" name="glyph01218"/>
    <GlyphID id="1219" name="glyph01219"/>
    <GlyphID id="1220" name="glyph01220"/>
    <GlyphID id="1221" name="glyph01221"/>
    <GlyphID id="1222" name="glyph01222"/>
    <GlyphID id="1223" name="glyph01223"/>
    <GlyphID id="1224" name="glyph01224"/>
    <GlyphID id="1225" name="glyph01225"/>
    <GlyphID id="1226" name="uni1F4D"/>
    <GlyphID id="1227" name="glyph01227"/>
    <GlyphID id="1228" name="glyph01228"/>
    <GlyphID id="1229" name="glyph01229"/>
    <GlyphID id="1230" name="glyph01230"/>
    <GlyphID id="1231" name="glyph01231"/>
    <GlyphID id="1232" name="glyph01232"/>
    <GlyphID id="1233" name="glyph01233"/>
    <GlyphID id="1234" name="glyph01234"/>
    <GlyphID id="1235" name="glyph01235"/>
    <GlyphID id="1236" name="glyph01236"/>
    <GlyphID id="1237" name="glyph01237"/>
    <GlyphID id="1238" name="glyph01238"/>
    <GlyphID id="1239" name="glyph01239"/>
    <GlyphID id="1240" name="glyph01240"/>
    <GlyphID id="1241" name="glyph01241"/>
    <GlyphID id="1242" name="glyph01242"/>
    <GlyphID id="1243" name="glyph01243"/>
    <GlyphID id="1244" name="glyph01244"/>
    <GlyphID id="1245" name="glyph01245"/>
    <GlyphID id="1246" name="glyph01246"/>
    <GlyphID id="1247" name="glyph01247"/>
    <GlyphID id="1248" name="glyph01248"/>
    <GlyphID id="1249" name="glyph01249"/>
    <GlyphID id="1250" name="glyph01250"/>
    <GlyphID id="1251" name="glyph01251"/>
    <GlyphID id="1252" name="glyph01252"/>
    <GlyphID id="1253" name="glyph01253"/>
    <GlyphID id="1254" name="glyph01254"/>
    <GlyphID id="1255" name="glyph01255"/>
    <GlyphID id="1256" name="glyph01256"/>
    <GlyphID id="1257" name="glyph01257"/>
    <GlyphID id="1258" name="glyph01258"/>
    <GlyphID id="1259" name="glyph01259"/>
    <GlyphID id="1260" name="glyph01260"/>
    <GlyphID id="1261" name="glyph01261"/>
    <GlyphID id="1262" name="glyph01262"/>
    <GlyphID id="1263" name="glyph01263"/>
    <GlyphID id="1264" name="glyph01264"/>
    <GlyphID id="1265" name="glyph01265"/>
    <GlyphID id="1266" name="glyph01266"/>
    <GlyphID id="1267" name="glyph01267"/>
    <GlyphID id="1268" name="glyph01268"/>
    <GlyphID id="1269" name="glyph01269"/>
    <GlyphID id="1270" name="glyph01270"/>
    <GlyphID id="1271" name="glyph01271"/>
    <GlyphID id="1272" name="glyph01272"/>
    <GlyphID id="1273" name="glyph01273"/>
    <GlyphID id="1274" name="glyph01274"/>
    <GlyphID id="1275" name="glyph01275"/>
    <GlyphID id="1276" name="glyph01276"/>
    <GlyphID id="1277" name="glyph01277"/>
    <GlyphID id="1278" name="glyph01278"/>
    <GlyphID id="1279" name="glyph01279"/>
    <GlyphID id="1280" name="glyph01280"/>
    <GlyphID id="1281" name="glyph01281"/>
    <GlyphID id="1282" name="glyph01282"/>
    <GlyphID id="1283" name="glyph01283"/>
    <GlyphID id="1284" name="glyph01284"/>
    <GlyphID id="1285" name="glyph01285"/>
    <GlyphID id="1286" name="glyph01286"/>
    <GlyphID id="1287" name="glyph01287"/>
    <GlyphID id="1288" name="glyph01288"/>
    <GlyphID id="1289" name="glyph01289"/>
    <GlyphID id="1290" name="glyph01290"/>
    <GlyphID id="1291" name="glyph01291"/>
    <GlyphID id="1292" name="glyph01292"/>
    <GlyphID id="1293" name="glyph01293"/>
  </GlyphOrder>

  <head>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="1.0"/>
    <fontRevision value="2.137"/>
    <checkSumAdjustment value="0x8a7f7048"/>
    <magicNumber value="0x5f0f3cf5"/>
    <flags value="00000000 00011001"/>
    <unitsPerEm value="2048"/>
    <created value="Fri Sep 12 12:29:34 2008"/>
    <modified value="Wed Mar 29 12:03:00 2017"/>
    <xMin value="-1509"/>
    <yMin value="-555"/>
    <xMax value="2352"/>
    <yMax value="2163"/>
    <macStyle value="00000000 00000000"/>
    <lowestRecPPEM value="9"/>
    <fontDirectionHint value="2"/>
    <indexToLocFormat value="0"/>
    <glyphDataFormat value="0"/>
  </head>

  <hhea>
    <tableVersion value="1.0"/>
    <ascent value="1900"/>
    <descent value="-500"/>
    <lineGap value="0"/>
    <advanceWidthMax value="2377"/>
    <minLeftSideBearing value="-1509"/>
    <minRightSideBearing value="-438"/>
    <xMaxExtent value="2352"/>
    <caretSlopeRise value="1"/>
    <caretSlopeRun value="0"/>
    <caretOffset value="0"/>
    <reserved0 value="0"/>
    <reserved1 value="0"/>
    <reserved2 value="0"/>
    <reserved3 value="0"/>
    <metricDataFormat value="0"/>
    <numberOfHMetrics value="1294"/>
  </hhea>

  <maxp>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="0x10000"/>
    <numGlyphs value="1294"/>
    <maxPoints value="143"/>
    <maxContours value="22"/>
    <maxCompositePoints value="84"/>
    <maxCompositeContours value="5"/>
    <maxZones value="1"/>
    <maxTwilightPoints value="0"/>
    <maxStorage value="0"/>
    <maxFunctionDefs value="14"/>
    <maxInstructionDefs value="0"/>
    <maxStackElements value="512"/>
    <maxSizeOfInstructions value="548"/>
    <maxComponentElements value="6"/>
    <maxComponentDepth value="1"/>
  </maxp>

  <OS_2>
    <!-- The fields 'usFirstCharIndex' and 'usLastCharIndex'
         will be recalculated by the compiler -->
    <version value="3"/>
    <xAvgCharWidth value="1158"/>
    <usWeightClass value="400"/>
    <usWidthClass value="5"/>
    <fsType value="00000000 00000000"/>
    <ySubscriptXSize value="1434"/>
    <ySubscriptYSize value="1331"/>
    <ySubscriptXOffset value="0"/>
    <ySubscriptYOffset value="287"/>
    <ySuperscriptXSize value="1434"/>
    <ySuperscriptYSize value="1331"/>
    <ySuperscriptXOffset value="0"/>
    <ySuperscriptYOffset value="977"/>
    <yStrikeoutSize value="102"/>
    <yStrikeoutPosition value="512"/>
    <sFamilyClass value="0"/>
    <panose>
      <bFamilyType value="2"/>
      <bSerifStyle value="0"/>
      <bWeight value="0"/>
      <bProportion value="0"/>
      <bContrast value="0"/>
      <bStrokeVariation value="0"/>
      <bArmStyle value="0"/>
      <bLetterForm value="0"/>
      <bMidline value="0"/>
      <bXHeight value="0"/>
    </panose>
    <ulUnicodeRange1 value="11100000 00000000 00000010 11111111"/>
    <ulUnicodeRange2 value="01010000 00000000 00100000 01011011"/>
    <ulUnicodeRange3 value="00000000 00000000 00000000 00100000"/>
    <ulUnicodeRange4 value="00000000 00000000 00000000 00000000"/>
    <achVendID value="GOOG"/>
    <fsSelection value="00000000 01000000"/>
    <usFirstCharIndex value="0"/>
    <usLastCharIndex value="65533"/>
    <sTypoAscender value="1536"/>
    <sTypoDescender value="-512"/>
    <sTypoLineGap value="102"/>
    <usWinAscent value="1946"/>
    <usWinDescent value="512"/>
    <ulCodePageRange1 value="00100000 00000000 00000001 10011111"/>
    <ulCodePageRange2 value="00000000 00000000 00000000 00000000"/>
    <sxHeight value="1082"/>
    <sCapHeight value="1456"/>
    <usDefaultChar value="32"/>
    <usBreakChar value="32"/>
    <usMaxContext value="3"/>
  </OS_2>

  <hmtx>
    <mtx name=".notdef" width="908" lsb="100"/>
    <mtx name="A" width="1336" lsb="28"/>
    <mtx name="AE" width="1914" lsb="-14"/>
    <mtx name="AEacute" width="1914" lsb="-14"/>
    <mtx name="Aacute" width="1336" lsb="28"/>
    <mtx name="Abreve" width="1336" lsb="28"/>
    <mtx name="Acircumflex" width="1336" lsb="28"/>
    <mtx name="Adieresis" width="1336" lsb="28"/>
    <mtx name="Agrave" width="1336" lsb="28"/>
    <mtx name="Alpha" width="1336" lsb="28"/>
    <mtx name="Alphatonos" width="1336" lsb="28"/>
    <mtx name="Amacron" width="1336" lsb="28"/>
    <mtx name="Aogonek" width="1336" lsb="28"/>
    <mtx name="Aring" width="1336" lsb="28"/>
    <mtx name="Aringacute" width="1336" lsb="28"/>
    <mtx name="Atilde" width="1336" lsb="28"/>
    <mtx name="B" width="1275" lsb="169"/>
    <mtx name="Beta" width="1275" lsb="169"/>
    <mtx name="C" width="1333" lsb="119"/>
    <mtx name="Cacute" width="1333" lsb="119"/>
    <mtx name="Ccaron" width="1333" lsb="119"/>
    <mtx name="Ccedilla" width="1333" lsb="119"/>
    <mtx name="Ccircumflex" width="1333" lsb="119"/>
    <mtx name="Cdotaccent" width="1333" lsb="119"/>
    <mtx name="Chi" width="1284" lsb="57"/>
    <mtx name="D" width="1343" lsb="169"/>
    <mtx name="Dcaron" width="1343" lsb="169"/>
    <mtx name="Dcroat" width="1373" lsb="7"/>
    <mtx name="E" width="1164" lsb="169"/>
    <mtx name="Eacute" width="1164" lsb="169"/>
    <mtx name="Ebreve" width="1164" lsb="169"/>
    <mtx name="Ecaron" width="1164" lsb="169"/>
    <mtx name="Ecircumflex" width="1164" lsb="169"/>
    <mtx name="Edieresis" width="1164" lsb="169"/>
    <mtx name="Edotaccent" width="1164" lsb="169"/>
    <mtx name="Egrave" width="1164" lsb="169"/>
    <mtx name="Emacron" width="1164" lsb="169"/>
    <mtx name="Eng" width="1419" lsb="162"/>
    <mtx name="Eogonek" width="1164" lsb="169"/>
    <mtx name="Epsilon" width="1164" lsb="169"/>
    <mtx name="Epsilontonos" width="1164" lsb="-215"/>
    <mtx name="Eta" width="1460" lsb="169"/>
    <mtx name="Etatonos" width="1460" lsb="-201"/>
    <mtx name="Eth" width="1373" lsb="7"/>
    <mtx name="Euro" width="1150" lsb="95"/>
    <mtx name="F" width="1132" lsb="169"/>
    <mtx name="G" width="1395" lsb="122"/>
    <mtx name="Gamma" width="1139" lsb="177"/>
    <mtx name="Gbreve" width="1395" lsb="122"/>
    <mtx name="Gcircumflex" width="1395" lsb="122"/>
    <mtx name="Gdotaccent" width="1395" lsb="122"/>
    <mtx name="H" width="1460" lsb="169"/>
    <mtx name="Hbar" width="1434" lsb="29"/>
    <mtx name="Hcircumflex" width="1460" lsb="169"/>
    <mtx name="I" width="557" lsb="183"/>
    <mtx name="IJ" width="1687" lsb="183"/>
    <mtx name="Iacute" width="557" lsb="176"/>
    <mtx name="Ibreve" width="557" lsb="-20"/>
    <mtx name="Icircumflex" width="557" lsb="-23"/>
    <mtx name="Idieresis" width="557" lsb="-43"/>
    <mtx name="Idotaccent" width="557" lsb="169"/>
    <mtx name="Igrave" width="557" lsb="-32"/>
    <mtx name="Imacron" width="557" lsb="-52"/>
    <mtx name="Iogonek" width="557" lsb="24"/>
    <mtx name="Iota" width="557" lsb="183"/>
    <mtx name="Iotadieresis" width="557" lsb="-43"/>
    <mtx name="Iotatonos" width="557" lsb="-195"/>
    <mtx name="Itilde" width="557" lsb="-73"/>
    <mtx name="J" width="1130" lsb="53"/>
    <mtx name="Jcircumflex" width="1130" lsb="53"/>
    <mtx name="K" width="1284" lsb="169"/>
    <mtx name="Kappa" width="1284" lsb="169"/>
    <mtx name="L" width="1102" lsb="169"/>
    <mtx name="Lacute" width="1102" lsb="161"/>
    <mtx name="Lambda" width="1342" lsb="50"/>
    <mtx name="Lcaron" width="1102" lsb="169"/>
    <mtx name="Ldot" width="1102" lsb="169"/>
    <mtx name="Lslash" width="1103" lsb="34"/>
    <mtx name="M" width="1788" lsb="169"/>
    <mtx name="Mu" width="1788" lsb="169"/>
    <mtx name="N" width="1460" lsb="169"/>
    <mtx name="Nacute" width="1460" lsb="169"/>
    <mtx name="Ncaron" width="1460" lsb="169"/>
    <mtx name="Ntilde" width="1460" lsb="169"/>
    <mtx name="Nu" width="1460" lsb="169"/>
    <mtx name="O" width="1408" lsb="118"/>
    <mtx name="OE" width="1953" lsb="104"/>
    <mtx name="Oacute" width="1408" lsb="118"/>
    <mtx name="Obreve" width="1408" lsb="118"/>
    <mtx name="Ocircumflex" width="1408" lsb="118"/>
    <mtx name="Odieresis" width="1408" lsb="118"/>
    <mtx name="Ograve" width="1408" lsb="118"/>
    <mtx name="Ohorn" width="1406" lsb="101"/>
    <mtx name="Ohungarumlaut" width="1408" lsb="118"/>
    <mtx name="Omacron" width="1408" lsb="118"/>
    <mtx name="Omegatonos" width="1382" lsb="-23"/>
    <mtx name="Omicron" width="1408" lsb="118"/>
    <mtx name="Omicrontonos" width="1428" lsb="-26"/>
    <mtx name="Oslash" width="1408" lsb="118"/>
    <mtx name="Oslashacute" width="1408" lsb="118"/>
    <mtx name="Otilde" width="1408" lsb="118"/>
    <mtx name="P" width="1292" lsb="169"/>
    <mtx name="Phi" width="1467" lsb="77"/>
    <mtx name="Pi" width="1461" lsb="178"/>
    <mtx name="Psi" width="1417" lsb="90"/>
    <mtx name="Q" width="1408" lsb="109"/>
    <mtx name="R" width="1261" lsb="168"/>
    <mtx name="Racute" width="1261" lsb="168"/>
    <mtx name="Rcaron" width="1261" lsb="168"/>
    <mtx name="Rho" width="1292" lsb="169"/>
    <mtx name="S" width="1215" lsb="80"/>
    <mtx name="Sacute" width="1215" lsb="80"/>
    <mtx name="Scaron" width="1215" lsb="80"/>
    <mtx name="Scedilla" width="1215" lsb="80"/>
    <mtx name="Scircumflex" width="1215" lsb="80"/>
    <mtx name="Sigma" width="1169" lsb="69"/>
    <mtx name="T" width="1222" lsb="49"/>
    <mtx name="Tau" width="1222" lsb="49"/>
    <mtx name="Tbar" width="1222" lsb="49"/>
    <mtx name="Tcaron" width="1222" lsb="49"/>
    <mtx name="Theta" width="1393" lsb="103"/>
    <mtx name="Thorn" width="1210" lsb="166"/>
    <mtx name="U" width="1328" lsb="140"/>
    <mtx name="Uacute" width="1328" lsb="140"/>
    <mtx name="Ubreve" width="1328" lsb="140"/>
    <mtx name="Ucircumflex" width="1328" lsb="140"/>
    <mtx name="Udieresis" width="1328" lsb="140"/>
    <mtx name="Ugrave" width="1328" lsb="140"/>
    <mtx name="Uhorn" width="1424" lsb="140"/>
    <mtx name="Uhungarumlaut" width="1328" lsb="140"/>
    <mtx name="Umacron" width="1328" lsb="140"/>
    <mtx name="Uogonek" width="1328" lsb="140"/>
    <mtx name="Upsilon" width="1230" lsb="15"/>
    <mtx name="Upsilon1" width="1090" lsb="-38"/>
    <mtx name="Upsilondieresis" width="1230" lsb="15"/>
    <mtx name="Upsilontonos" width="1330" lsb="-236"/>
    <mtx name="Uring" width="1328" lsb="140"/>
    <mtx name="Utilde" width="1328" lsb="140"/>
    <mtx name="V" width="1303" lsb="28"/>
    <mtx name="W" width="1817" lsb="61"/>
    <mtx name="Wacute" width="1817" lsb="61"/>
    <mtx name="Wcircumflex" width="1817" lsb="61"/>
    <mtx name="Wdieresis" width="1817" lsb="61"/>
    <mtx name="Wgrave" width="1817" lsb="61"/>
    <mtx name="X" width="1284" lsb="57"/>
    <mtx name="Xi" width="1169" lsb="120"/>
    <mtx name="Y" width="1230" lsb="15"/>
    <mtx name="Yacute" width="1230" lsb="15"/>
    <mtx name="Ycircumflex" width="1230" lsb="15"/>
    <mtx name="Ydieresis" width="1230" lsb="15"/>
    <mtx name="Ygrave" width="1230" lsb="15"/>
    <mtx name="Z" width="1226" lsb="86"/>
    <mtx name="Zacute" width="1226" lsb="86"/>
    <mtx name="Zcaron" width="1226" lsb="86"/>
    <mtx name="Zdotaccent" width="1226" lsb="86"/>
    <mtx name="Zeta" width="1226" lsb="86"/>
    <mtx name="a" width="1114" lsb="109"/>
    <mtx name="aacute" width="1114" lsb="109"/>
    <mtx name="abreve" width="1114" lsb="109"/>
    <mtx name="acircumflex" width="1114" lsb="109"/>
    <mtx name="acute" width="642" lsb="123"/>
    <mtx name="acutecomb" width="0" lsb="-657"/>
    <mtx name="adieresis" width="1114" lsb="109"/>
    <mtx name="ae" width="1729" lsb="78"/>
    <mtx name="aeacute" width="1729" lsb="78"/>
    <mtx name="agrave" width="1114" lsb="109"/>
    <mtx name="alpha" width="1157" lsb="100"/>
    <mtx name="alphatonos" width="1157" lsb="100"/>
    <mtx name="amacron" width="1114" lsb="109"/>
    <mtx name="ampersand" width="1273" lsb="101"/>
    <mtx name="anoteleia" width="535" lsb="147"/>
    <mtx name="aogonek" width="1114" lsb="109"/>
    <mtx name="approxequal" width="1154" lsb="101"/>
    <mtx name="aring" width="1114" lsb="109"/>
    <mtx name="aringacute" width="1114" lsb="109"/>
    <mtx name="asciicircum" width="856" lsb="64"/>
    <mtx name="asciitilde" width="1393" lsb="131"/>
    <mtx name="asterisk" width="882" lsb="28"/>
    <mtx name="at" width="1839" lsb="106"/>
    <mtx name="atilde" width="1114" lsb="109"/>
    <mtx name="b" width="1149" lsb="140"/>
    <mtx name="backslash" width="840" lsb="40"/>
    <mtx name="bar" width="499" lsb="175"/>
    <mtx name="beta" width="1213" lsb="160"/>
    <mtx name="braceleft" width="693" lsb="64"/>
    <mtx name="braceright" width="693" lsb="19"/>
    <mtx name="bracketleft" width="543" lsb="146"/>
    <mtx name="bracketright" width="543" lsb="9"/>
    <mtx name="breve" width="874" lsb="129"/>
    <mtx name="brokenbar" width="491" lsb="147"/>
    <mtx name="bullet" width="690" lsb="138"/>
    <mtx name="c" width="1072" lsb="92"/>
    <mtx name="cacute" width="1072" lsb="92"/>
    <mtx name="caron" width="909" lsb="141"/>
    <mtx name="ccaron" width="1072" lsb="92"/>
    <mtx name="ccedilla" width="1072" lsb="92"/>
    <mtx name="ccircumflex" width="1072" lsb="92"/>
    <mtx name="cdotaccent" width="1072" lsb="92"/>
    <mtx name="cedilla" width="507" lsb="116"/>
    <mtx name="cent" width="1120" lsb="105"/>
    <mtx name="chi" width="1015" lsb="41"/>
    <mtx name="circumflex" width="964" lsb="169"/>
    <mtx name="colon" width="496" lsb="134"/>
    <mtx name="comma" width="402" lsb="29"/>
    <mtx name="copyright" width="1609" lsb="91"/>
    <mtx name="currency" width="1460" lsb="105"/>
    <mtx name="d" width="1155" lsb="95"/>
    <mtx name="dagger" width="1129" lsb="70"/>
    <mtx name="daggerdbl" width="1167" lsb="87"/>
    <mtx name="dcaron" width="1305" lsb="95"/>
    <mtx name="dcroat" width="1223" lsb="95"/>
    <mtx name="degree" width="765" lsb="130"/>
    <mtx name="delta" width="1160" lsb="96"/>
    <mtx name="dieresis" width="856" lsb="101"/>
    <mtx name="dieresistonos" width="1035" lsb="113"/>
    <mtx name="divide" width="1169" lsb="71"/>
    <mtx name="dollar" width="1150" lsb="110"/>
    <mtx name="dong" width="1185" lsb="95"/>
    <mtx name="dotaccent" width="497" lsb="141"/>
    <mtx name="dotbelowcomb" width="0" lsb="-712"/>
    <mtx name="dotlessi" width="506" lsb="155"/>
    <mtx name="e" width="1085" lsb="93"/>
    <mtx name="eacute" width="1085" lsb="93"/>
    <mtx name="ebreve" width="1085" lsb="93"/>
    <mtx name="ecaron" width="1085" lsb="93"/>
    <mtx name="ecircumflex" width="1085" lsb="93"/>
    <mtx name="edieresis" width="1085" lsb="93"/>
    <mtx name="edotaccent" width="1085" lsb="93"/>
    <mtx name="egrave" width="1085" lsb="93"/>
    <mtx name="eight" width="1150" lsb="112"/>
    <mtx name="ellipsis" width="1370" lsb="148"/>
    <mtx name="emacron" width="1085" lsb="93"/>
    <mtx name="emdash" width="1599" lsb="144"/>
    <mtx name="endash" width="1344" lsb="162"/>
    <mtx name="eng" width="1160" lsb="145"/>
    <mtx name="eogonek" width="1085" lsb="93"/>
    <mtx name="epsilon" width="1104" lsb="99"/>
    <mtx name="epsilontonos" width="1104" lsb="99"/>
    <mtx name="equal" width="1124" lsb="152"/>
    <mtx name="estimated" width="1303" lsb="152"/>
    <mtx name="eta" width="1160" lsb="145"/>
    <mtx name="etatonos" width="1160" lsb="145"/>
    <mtx name="eth" width="1200" lsb="126"/>
    <mtx name="exclam" width="527" lsb="160"/>
    <mtx name="exclamdbl" width="1054" lsb="160"/>
    <mtx name="exclamdown" width="499" lsb="139"/>
    <mtx name="f" width="711" lsb="60"/>
    <mtx name="five" width="1150" lsb="154"/>
    <mtx name="fiveeighths" width="1743" lsb="99"/>
    <mtx name="florin" width="697" lsb="-28"/>
    <mtx name="four" width="1150" lsb="53"/>
    <mtx name="fraction" width="931" lsb="59"/>
    <mtx name="franc" width="1132" lsb="18"/>
    <mtx name="g" width="1149" lsb="96"/>
    <mtx name="gamma" width="1026" lsb="46"/>
    <mtx name="gbreve" width="1149" lsb="96"/>
    <mtx name="gcircumflex" width="1149" lsb="96"/>
    <mtx name="gdotaccent" width="1149" lsb="96"/>
    <mtx name="germandbls" width="1218" lsb="139"/>
    <mtx name="glyph00369" width="800" lsb="111"/>
    <mtx name="glyph00380" width="256" lsb="0"/>
    <mtx name="glyph00443" width="1267" lsb="60"/>
    <mtx name="glyph00448" width="1262" lsb="60"/>
    <mtx name="glyph00449" width="1691" lsb="95"/>
    <mtx name="glyph00453" width="751" lsb="66"/>
    <mtx name="glyph00454" width="751" lsb="122"/>
    <mtx name="glyph00455" width="751" lsb="80"/>
    <mtx name="glyph00456" width="1039" lsb="85"/>
    <mtx name="glyph00457" width="1039" lsb="96"/>
    <mtx name="glyph00458" width="1039" lsb="66"/>
    <mtx name="glyph00459" width="1038" lsb="114"/>
    <mtx name="glyph00460" width="1039" lsb="128"/>
    <mtx name="glyph00461" width="1039" lsb="48"/>
    <mtx name="glyph00462" width="1039" lsb="78"/>
    <mtx name="glyph00463" width="1039" lsb="78"/>
    <mtx name="glyph00464" width="1039" lsb="152"/>
    <mtx name="glyph00465" width="1039" lsb="99"/>
    <mtx name="glyph00466" width="1059" lsb="71"/>
    <mtx name="glyph00467" width="1067" lsb="13"/>
    <mtx name="glyph00468" width="1108" lsb="38"/>
    <mtx name="glyph00469" width="1557" lsb="49"/>
    <mtx name="glyph00470" width="1127" lsb="20"/>
    <mtx name="glyph00471" width="1148" lsb="116"/>
    <mtx name="glyph00472" width="1062" lsb="40"/>
    <mtx name="glyph00473" width="1056" lsb="67"/>
    <mtx name="glyph00474" width="1098" lsb="138"/>
    <mtx name="glyph00475" width="1211" lsb="89"/>
    <mtx name="glyph00476" width="1116" lsb="138"/>
    <mtx name="glyph00477" width="1211" lsb="96"/>
    <mtx name="glyph00478" width="1251" lsb="138"/>
    <mtx name="glyph00479" width="1538" lsb="138"/>
    <mtx name="glyph00480" width="948" lsb="138"/>
    <mtx name="glyph00481" width="1108" lsb="138"/>
    <mtx name="glyph00482" width="975" lsb="43"/>
    <mtx name="glyph00483" width="488" lsb="151"/>
    <mtx name="glyph00484" width="1251" lsb="138"/>
    <mtx name="glyph00485" width="1196" lsb="99"/>
    <mtx name="glyph00486" width="971" lsb="138"/>
    <mtx name="glyph00487" width="1056" lsb="67"/>
    <mtx name="glyph00488" width="1075" lsb="48"/>
    <mtx name="glyph00489" width="929" lsb="13"/>
    <mtx name="glyph00490" width="943" lsb="138"/>
    <mtx name="glyph00491" width="1127" lsb="20"/>
    <mtx name="glyph00492" width="1211" lsb="96"/>
    <mtx name="glyph00493" width="1127" lsb="20"/>
    <mtx name="glyph00494" width="905" lsb="62"/>
    <mtx name="glyph00495" width="1230" lsb="138"/>
    <mtx name="glyph00496" width="1007" lsb="63"/>
    <mtx name="glyph00497" width="1383" lsb="96"/>
    <mtx name="glyph00498" width="1303" lsb="96"/>
    <mtx name="glyph00499" width="1266" lsb="117"/>
    <mtx name="glyph00500" width="1394" lsb="38"/>
    <mtx name="glyph00501" width="1148" lsb="96"/>
    <mtx name="glyph00502" width="1857" lsb="39"/>
    <mtx name="glyph00503" width="1871" lsb="138"/>
    <mtx name="glyph00504" width="1396" lsb="40"/>
    <mtx name="glyph00505" width="1229" lsb="138"/>
    <mtx name="glyph00506" width="1113" lsb="138"/>
    <mtx name="glyph00507" width="1316" lsb="46"/>
    <mtx name="glyph00508" width="1547" lsb="31"/>
    <mtx name="glyph00509" width="1087" lsb="71"/>
    <mtx name="glyph00510" width="1260" lsb="138"/>
    <mtx name="glyph00511" width="1102" lsb="139"/>
    <mtx name="glyph00512" width="1217" lsb="39"/>
    <mtx name="glyph00513" width="1055" lsb="34"/>
    <mtx name="glyph00514" width="1320" lsb="138"/>
    <mtx name="glyph00515" width="1130" lsb="61"/>
    <mtx name="glyph00516" width="1617" lsb="138"/>
    <mtx name="glyph00517" width="1708" lsb="138"/>
    <mtx name="glyph00518" width="1309" lsb="8"/>
    <mtx name="glyph00519" width="1521" lsb="138"/>
    <mtx name="glyph00520" width="1102" lsb="138"/>
    <mtx name="glyph00521" width="1147" lsb="75"/>
    <mtx name="glyph00522" width="1654" lsb="138"/>
    <mtx name="glyph00523" width="1159" lsb="80"/>
    <mtx name="glyph00524" width="1041" lsb="11"/>
    <mtx name="glyph00525" width="1607" lsb="31"/>
    <mtx name="glyph00526" width="1145" lsb="139"/>
    <mtx name="glyph00527" width="1289" lsb="139"/>
    <mtx name="glyph00528" width="1335" lsb="35"/>
    <mtx name="glyph00529" width="1474" lsb="96"/>
    <mtx name="glyph00530" width="1119" lsb="13"/>
    <mtx name="glyph00531" width="1192" lsb="38"/>
    <mtx name="glyph00532" width="1633" lsb="38"/>
    <mtx name="glyph00533" width="1130" lsb="61"/>
    <mtx name="glyph00534" width="1130" lsb="138"/>
    <mtx name="glyph00535" width="1475" lsb="2"/>
    <mtx name="glyph00536" width="1226" lsb="94"/>
    <mtx name="glyph00537" width="1087" lsb="71"/>
    <mtx name="glyph00538" width="1211" lsb="96"/>
    <mtx name="glyph00539" width="1075" lsb="48"/>
    <mtx name="glyph00540" width="995" lsb="66"/>
    <mtx name="glyph00541" width="2082" lsb="138"/>
    <mtx name="glyph00542" width="1195" lsb="40"/>
    <mtx name="glyph00543" width="751" lsb="62"/>
    <mtx name="glyph00544" width="751" lsb="54"/>
    <mtx name="glyph00545" width="751" lsb="91"/>
    <mtx name="glyph00546" width="751" lsb="86"/>
    <mtx name="glyph00547" width="751" lsb="58"/>
    <mtx name="glyph00548" width="751" lsb="79"/>
    <mtx name="glyph00549" width="751" lsb="73"/>
    <mtx name="glyph00550" width="918" lsb="143"/>
    <mtx name="glyph00551" width="693" lsb="158"/>
    <mtx name="glyph00552" width="998" lsb="138"/>
    <mtx name="glyph00553" width="1082" lsb="30"/>
    <mtx name="glyph00554" width="1219" lsb="100"/>
    <mtx name="glyph00555" width="1356" lsb="177"/>
    <mtx name="glyph00556" width="1316" lsb="178"/>
    <mtx name="glyph00557" width="1043" lsb="146"/>
    <mtx name="glyph00558" width="1341" lsb="178"/>
    <mtx name="glyph00559" width="1039" lsb="146"/>
    <mtx name="glyph00560" width="1152" lsb="138"/>
    <mtx name="glyph00561" width="1148" lsb="96"/>
    <mtx name="glyph00562" width="1104" lsb="138"/>
    <mtx name="glyph00563" width="1157" lsb="19"/>
    <mtx name="glyph00564" width="509" lsb="159"/>
    <mtx name="glyph00565" width="932" lsb="129"/>
    <mtx name="glyph00566" width="0" lsb="-860"/>
    <mtx name="glyph00567" width="1007" lsb="110"/>
    <mtx name="glyph00568" width="1011" lsb="-162"/>
    <mtx name="glyph00569" width="1038" lsb="105"/>
    <mtx name="glyph00570" width="1012" lsb="105"/>
    <mtx name="glyph00571" width="943" lsb="138"/>
    <mtx name="glyph00572" width="927" lsb="129"/>
    <mtx name="glyph00573" width="926" lsb="129"/>
    <mtx name="glyph00574" width="751" lsb="80"/>
    <mtx name="glyph00575" width="751" lsb="54"/>
    <mtx name="glyph00576" width="751" lsb="91"/>
    <mtx name="glyph00577" width="751" lsb="86"/>
    <mtx name="glyph00578" width="751" lsb="58"/>
    <mtx name="glyph00579" width="751" lsb="79"/>
    <mtx name="glyph00580" width="751" lsb="73"/>
    <mtx name="glyph00581" width="1409" lsb="126"/>
    <mtx name="glyph00582" width="1454" lsb="126"/>
    <mtx name="glyph00583" width="1427" lsb="178"/>
    <mtx name="glyph00584" width="1504" lsb="126"/>
    <mtx name="glyph00585" width="1507" lsb="126"/>
    <mtx name="glyph00586" width="981" lsb="160"/>
    <mtx name="glyph00587" width="1154" lsb="131"/>
    <mtx name="glyph00588" width="1112" lsb="15"/>
    <mtx name="glyph00589" width="1231" lsb="62"/>
    <mtx name="glyph00590" width="1131" lsb="101"/>
    <mtx name="glyph00591" width="1070" lsb="74"/>
    <mtx name="glyph00592" width="932" lsb="131"/>
    <mtx name="glyph00593" width="401" lsb="103"/>
    <mtx name="glyph00594" width="1700" lsb="96"/>
    <mtx name="glyph00595" width="1209" lsb="130"/>
    <mtx name="glyph00596" width="508" lsb="-74"/>
    <mtx name="glyph00597" width="1151" lsb="59"/>
    <mtx name="glyph00598" width="1151" lsb="115"/>
    <mtx name="glyph00599" width="1151" lsb="35"/>
    <mtx name="glyph00600" width="1151" lsb="119"/>
    <mtx name="glyph00601" width="1151" lsb="118"/>
    <mtx name="glyph00602" width="1151" lsb="55"/>
    <mtx name="glyph00603" width="1151" lsb="126"/>
    <mtx name="glyph00604" width="1151" lsb="95"/>
    <mtx name="glyph00605" width="1151" lsb="112"/>
    <mtx name="glyph00606" width="1151" lsb="244"/>
    <mtx name="glyph00607" width="518" lsb="-76"/>
    <mtx name="glyph00608" width="516" lsb="-76"/>
    <mtx name="glyph00609" width="507" lsb="155"/>
    <mtx name="glyph00610" width="507" lsb="-6"/>
    <mtx name="glyph00611" width="507" lsb="155"/>
    <mtx name="glyph00612" width="1104" lsb="138"/>
    <mtx name="glyph00613" width="1280" lsb="120"/>
    <mtx name="glyph00614" width="1056" lsb="59"/>
    <mtx name="glyph00615" width="1149" lsb="140"/>
    <mtx name="glyph00616" width="1074" lsb="92"/>
    <mtx name="glyph00617" width="1171" lsb="91"/>
    <mtx name="glyph00618" width="1164" lsb="91"/>
    <mtx name="glyph00619" width="1182" lsb="90"/>
    <mtx name="glyph00620" width="1165" lsb="140"/>
    <mtx name="glyph00621" width="1180" lsb="91"/>
    <mtx name="glyph00622" width="1085" lsb="93"/>
    <mtx name="glyph00623" width="1149" lsb="96"/>
    <mtx name="glyph00624" width="889" lsb="87"/>
    <mtx name="glyph00625" width="1238" lsb="103"/>
    <mtx name="glyph00626" width="948" lsb="0"/>
    <mtx name="glyph00627" width="1593" lsb="9"/>
    <mtx name="glyph00628" width="1016" lsb="138"/>
    <mtx name="glyph00629" width="1211" lsb="96"/>
    <mtx name="glyph00630" width="1251" lsb="48"/>
    <mtx name="glyph00631" width="1251" lsb="138"/>
    <mtx name="glyph00815" width="1152" lsb="-66"/>
    <mtx name="glyph00816" width="1152" lsb="-66"/>
    <mtx name="glyph00817" width="1062" lsb="40"/>
    <mtx name="glyph00818" width="1157" lsb="19"/>
    <mtx name="glyph00819" width="1157" lsb="19"/>
    <mtx name="glyph00820" width="1157" lsb="19"/>
    <mtx name="glyph00821" width="1157" lsb="19"/>
    <mtx name="glyph00822" width="1157" lsb="19"/>
    <mtx name="glyph00823" width="1157" lsb="19"/>
    <mtx name="glyph00824" width="1157" lsb="19"/>
    <mtx name="glyph00825" width="1148" lsb="96"/>
    <mtx name="glyph00826" width="998" lsb="138"/>
    <mtx name="glyph00827" width="998" lsb="138"/>
    <mtx name="glyph00828" width="998" lsb="138"/>
    <mtx name="glyph00829" width="998" lsb="138"/>
    <mtx name="glyph00830" width="488" lsb="-66"/>
    <mtx name="glyph00831" width="488" lsb="142"/>
    <mtx name="glyph00832" width="488" lsb="-57"/>
    <mtx name="glyph00833" width="488" lsb="-77"/>
    <mtx name="glyph00834" width="1251" lsb="138"/>
    <mtx name="glyph00835" width="1211" lsb="96"/>
    <mtx name="glyph00836" width="1211" lsb="96"/>
    <mtx name="glyph00837" width="1211" lsb="96"/>
    <mtx name="glyph00838" width="1211" lsb="96"/>
    <mtx name="glyph00839" width="1211" lsb="96"/>
    <mtx name="glyph00840" width="1148" lsb="116"/>
    <mtx name="glyph00841" width="1148" lsb="116"/>
    <mtx name="glyph00842" width="1148" lsb="116"/>
    <mtx name="glyph00843" width="1148" lsb="116"/>
    <mtx name="glyph00844" width="1067" lsb="13"/>
    <mtx name="glyph00845" width="1157" lsb="19"/>
    <mtx name="glyph00846" width="1157" lsb="19"/>
    <mtx name="glyph00847" width="1157" lsb="19"/>
    <mtx name="glyph00848" width="1148" lsb="96"/>
    <mtx name="glyph00849" width="1148" lsb="96"/>
    <mtx name="glyph00850" width="1148" lsb="96"/>
    <mtx name="glyph00851" width="1148" lsb="96"/>
    <mtx name="glyph00852" width="1152" lsb="138"/>
    <mtx name="glyph00853" width="998" lsb="138"/>
    <mtx name="glyph00854" width="998" lsb="138"/>
    <mtx name="glyph00855" width="998" lsb="138"/>
    <mtx name="glyph00856" width="998" lsb="138"/>
    <mtx name="glyph00857" width="998" lsb="138"/>
    <mtx name="glyph00858" width="1196" lsb="99"/>
    <mtx name="glyph00859" width="1196" lsb="99"/>
    <mtx name="glyph00860" width="1196" lsb="99"/>
    <mtx name="glyph00861" width="1196" lsb="99"/>
    <mtx name="glyph00862" width="1251" lsb="138"/>
    <mtx name="glyph00863" width="488" lsb="-107"/>
    <mtx name="glyph00864" width="488" lsb="-86"/>
    <mtx name="glyph00865" width="488" lsb="-54"/>
    <mtx name="glyph00866" width="488" lsb="6"/>
    <mtx name="glyph00867" width="488" lsb="136"/>
    <mtx name="glyph00868" width="975" lsb="43"/>
    <mtx name="glyph00869" width="1108" lsb="138"/>
    <mtx name="glyph00870" width="948" lsb="130"/>
    <mtx name="glyph00871" width="948" lsb="138"/>
    <mtx name="glyph00872" width="948" lsb="138"/>
    <mtx name="glyph00873" width="948" lsb="138"/>
    <mtx name="glyph00874" width="1251" lsb="138"/>
    <mtx name="glyph00875" width="1251" lsb="138"/>
    <mtx name="glyph00876" width="1251" lsb="138"/>
    <mtx name="glyph00877" width="1211" lsb="96"/>
    <mtx name="glyph00878" width="1211" lsb="96"/>
    <mtx name="glyph00879" width="1211" lsb="96"/>
    <mtx name="glyph00880" width="1098" lsb="138"/>
    <mtx name="glyph00881" width="1098" lsb="138"/>
    <mtx name="glyph00882" width="1098" lsb="138"/>
    <mtx name="glyph00883" width="1056" lsb="67"/>
    <mtx name="glyph00884" width="1056" lsb="67"/>
    <mtx name="glyph00885" width="1056" lsb="67"/>
    <mtx name="glyph00886" width="1056" lsb="67"/>
    <mtx name="glyph00887" width="1062" lsb="40"/>
    <mtx name="glyph00888" width="1062" lsb="40"/>
    <mtx name="glyph00889" width="1062" lsb="40"/>
    <mtx name="glyph00890" width="1148" lsb="116"/>
    <mtx name="glyph00891" width="1148" lsb="116"/>
    <mtx name="glyph00892" width="1148" lsb="116"/>
    <mtx name="glyph00893" width="1148" lsb="116"/>
    <mtx name="glyph00894" width="1148" lsb="116"/>
    <mtx name="glyph00895" width="1148" lsb="116"/>
    <mtx name="glyph00896" width="1557" lsb="49"/>
    <mtx name="glyph00897" width="1067" lsb="13"/>
    <mtx name="glyph00898" width="1067" lsb="13"/>
    <mtx name="glyph00899" width="1059" lsb="71"/>
    <mtx name="glyph00900" width="1059" lsb="71"/>
    <mtx name="glyph00901" width="1059" lsb="71"/>
    <mtx name="glyph01165" width="1150" lsb="93"/>
    <mtx name="glyph01166" width="1150" lsb="94"/>
    <mtx name="glyph01167" width="1150" lsb="53"/>
    <mtx name="glyph01168" width="1150" lsb="154"/>
    <mtx name="glyph01169" width="1170" lsb="152"/>
    <mtx name="glyph01170" width="1190" lsb="132"/>
    <mtx name="glyph01171" width="1170" lsb="100"/>
    <mtx name="glyph01172" width="1190" lsb="135"/>
    <mtx name="glyph01173" width="1395" lsb="122"/>
    <mtx name="glyph01174" width="1149" lsb="96"/>
    <mtx name="glyph01175" width="1460" lsb="169"/>
    <mtx name="glyph01176" width="1130" lsb="140"/>
    <mtx name="glyph01177" width="1336" lsb="28"/>
    <mtx name="glyph01178" width="1114" lsb="57"/>
    <mtx name="glyph01179" width="1164" lsb="95"/>
    <mtx name="glyph01180" width="1085" lsb="41"/>
    <mtx name="glyph01181" width="557" lsb="-246"/>
    <mtx name="glyph01182" width="506" lsb="-272"/>
    <mtx name="glyph01183" width="1408" lsb="118"/>
    <mtx name="glyph01184" width="1168" lsb="51"/>
    <mtx name="glyph01185" width="1261" lsb="85"/>
    <mtx name="glyph01186" width="693" lsb="-117"/>
    <mtx name="glyph01187" width="1328" lsb="140"/>
    <mtx name="glyph01188" width="1129" lsb="43"/>
    <mtx name="glyph01189" width="1190" lsb="-298"/>
    <mtx name="glyph01190" width="1275" lsb="169"/>
    <mtx name="glyph01191" width="1149" lsb="140"/>
    <mtx name="glyph01192" width="1343" lsb="169"/>
    <mtx name="glyph01193" width="1155" lsb="95"/>
    <mtx name="glyph01194" width="1343" lsb="169"/>
    <mtx name="glyph01195" width="1155" lsb="95"/>
    <mtx name="glyph01196" width="1460" lsb="169"/>
    <mtx name="glyph01197" width="1128" lsb="140"/>
    <mtx name="glyph01198" width="1284" lsb="169"/>
    <mtx name="glyph01199" width="1038" lsb="141"/>
    <mtx name="glyph01200" width="1284" lsb="169"/>
    <mtx name="glyph01201" width="1038" lsb="141"/>
    <mtx name="glyph01202" width="1102" lsb="169"/>
    <mtx name="glyph01203" width="497" lsb="134"/>
    <mtx name="glyph01204" width="1788" lsb="169"/>
    <mtx name="glyph01205" width="1795" lsb="139"/>
    <mtx name="glyph01206" width="1460" lsb="169"/>
    <mtx name="glyph01207" width="1130" lsb="140"/>
    <mtx name="glyph01208" width="1408" lsb="118"/>
    <mtx name="glyph01209" width="1292" lsb="169"/>
    <mtx name="glyph01210" width="1149" lsb="140"/>
    <mtx name="glyph01211" width="1261" lsb="168"/>
    <mtx name="glyph01212" width="693" lsb="130"/>
    <mtx name="glyph01213" width="1215" lsb="80"/>
    <mtx name="glyph01214" width="1056" lsb="95"/>
    <mtx name="glyph01215" width="1222" lsb="49"/>
    <mtx name="glyph01216" width="669" lsb="9"/>
    <mtx name="glyph01217" width="1328" lsb="140"/>
    <mtx name="glyph01218" width="1303" lsb="28"/>
    <mtx name="glyph01219" width="992" lsb="33"/>
    <mtx name="glyph01220" width="1303" lsb="28"/>
    <mtx name="glyph01221" width="992" lsb="33"/>
    <mtx name="glyph01222" width="1817" lsb="61"/>
    <mtx name="glyph01223" width="1539" lsb="43"/>
    <mtx name="glyph01224" width="1226" lsb="86"/>
    <mtx name="glyph01225" width="1015" lsb="88"/>
    <mtx name="glyph01227" width="1157" lsb="19"/>
    <mtx name="glyph01228" width="1058" lsb="-157"/>
    <mtx name="glyph01229" width="1311" lsb="-128"/>
    <mtx name="glyph01230" width="548" lsb="-124"/>
    <mtx name="glyph01231" width="1221" lsb="-43"/>
    <mtx name="glyph01232" width="1127" lsb="-229"/>
    <mtx name="glyph01233" width="1276" lsb="-18"/>
    <mtx name="glyph01234" width="1157" lsb="19"/>
    <mtx name="glyph01235" width="1104" lsb="138"/>
    <mtx name="glyph01236" width="998" lsb="138"/>
    <mtx name="glyph01237" width="1059" lsb="71"/>
    <mtx name="glyph01238" width="1251" lsb="138"/>
    <mtx name="glyph01239" width="488" lsb="151"/>
    <mtx name="glyph01240" width="1108" lsb="138"/>
    <mtx name="glyph01241" width="1538" lsb="138"/>
    <mtx name="glyph01242" width="1251" lsb="138"/>
    <mtx name="glyph01243" width="1211" lsb="96"/>
    <mtx name="glyph01244" width="1116" lsb="138"/>
    <mtx name="glyph01245" width="1062" lsb="40"/>
    <mtx name="glyph01246" width="1067" lsb="13"/>
    <mtx name="glyph01247" width="1108" lsb="38"/>
    <mtx name="glyph01248" width="488" lsb="-77"/>
    <mtx name="glyph01249" width="1067" lsb="13"/>
    <mtx name="glyph01250" width="998" lsb="138"/>
    <mtx name="glyph01251" width="943" lsb="138"/>
    <mtx name="glyph01252" width="1056" lsb="67"/>
    <mtx name="glyph01253" width="488" lsb="151"/>
    <mtx name="glyph01254" width="488" lsb="-77"/>
    <mtx name="glyph01255" width="975" lsb="43"/>
    <mtx name="glyph01256" width="1108" lsb="138"/>
    <mtx name="glyph01257" width="1055" lsb="34"/>
    <mtx name="glyph01258" width="1157" lsb="19"/>
    <mtx name="glyph01259" width="1104" lsb="138"/>
    <mtx name="glyph01260" width="943" lsb="138"/>
    <mtx name="glyph01261" width="998" lsb="138"/>
    <mtx name="glyph01262" width="1260" lsb="138"/>
    <mtx name="glyph01263" width="1538" lsb="138"/>
    <mtx name="glyph01264" width="1251" lsb="138"/>
    <mtx name="glyph01265" width="1211" lsb="96"/>
    <mtx name="glyph01266" width="1230" lsb="138"/>
    <mtx name="glyph01267" width="1116" lsb="138"/>
    <mtx name="glyph01268" width="1148" lsb="96"/>
    <mtx name="glyph01269" width="1062" lsb="40"/>
    <mtx name="glyph01270" width="1108" lsb="38"/>
    <mtx name="glyph01271" width="1087" lsb="71"/>
    <mtx name="glyph01272" width="1251" lsb="138"/>
    <mtx name="glyph01273" width="1148" lsb="96"/>
    <mtx name="glyph01274" width="1067" lsb="13"/>
    <mtx name="glyph01275" width="1475" lsb="2"/>
    <mtx name="glyph01276" width="1260" lsb="138"/>
    <mtx name="glyph01277" width="1055" lsb="34"/>
    <mtx name="glyph01278" width="1383" lsb="96"/>
    <mtx name="glyph01279" width="1463" lsb="151"/>
    <mtx name="glyph01280" width="1593" lsb="9"/>
    <mtx name="glyph01281" width="1211" lsb="96"/>
    <mtx name="glyph01282" width="1056" lsb="67"/>
    <mtx name="glyph01283" width="1557" lsb="49"/>
    <mtx name="glyph01284" width="1557" lsb="49"/>
    <mtx name="glyph01285" width="1557" lsb="49"/>
    <mtx name="glyph01286" width="1067" lsb="13"/>
    <mtx name="glyph01287" width="1336" lsb="28"/>
    <mtx name="glyph01288" width="1114" lsb="109"/>
    <mtx name="glyph01289" width="1164" lsb="169"/>
    <mtx name="glyph01290" width="1085" lsb="93"/>
    <mtx name="glyph01291" width="1157" lsb="19"/>
    <mtx name="glyph01292" width="998" lsb="138"/>
    <mtx name="glyph01293" width="506" lsb="133"/>
    <mtx name="grave" width="633" lsb="57"/>
    <mtx name="gravecomb" width="0" lsb="-857"/>
    <mtx name="greater" width="1070" lsb="134"/>
    <mtx name="greaterequal" width="1071" lsb="133"/>
    <mtx name="guillemotleft" width="961" lsb="102"/>
    <mtx name="guillemotright" width="960" lsb="102"/>
    <mtx name="guilsinglleft" width="614" lsb="108"/>
    <mtx name="guilsinglright" width="614" lsb="89"/>
    <mtx name="h" width="1128" lsb="140"/>
    <mtx name="hbar" width="1158" lsb="-30"/>
    <mtx name="hcircumflex" width="1128" lsb="140"/>
    <mtx name="hookabovecomb" width="0" lsb="-674"/>
    <mtx name="hungarumlaut" width="764" lsb="94"/>
    <mtx name="hyphen" width="565" lsb="37"/>
    <mtx name="i" width="497" lsb="141"/>
    <mtx name="iacute" width="506" lsb="150"/>
    <mtx name="ibreve" width="506" lsb="-46"/>
    <mtx name="icircumflex" width="506" lsb="-49"/>
    <mtx name="idieresis" width="506" lsb="-69"/>
    <mtx name="igrave" width="506" lsb="-58"/>
    <mtx name="ij" width="986" lsb="141"/>
    <mtx name="imacron" width="506" lsb="-78"/>
    <mtx name="infinity" width="2106" lsb="98"/>
    <mtx name="integral" width="524" lsb="-80"/>
    <mtx name="iogonek" width="497" lsb="-5"/>
    <mtx name="iota" width="663" lsb="195"/>
    <mtx name="iotadieresis" width="663" lsb="-27"/>
    <mtx name="iotadieresistonos" width="663" lsb="-101"/>
    <mtx name="iotatonos" width="663" lsb="195"/>
    <mtx name="itilde" width="506" lsb="-99"/>
    <mtx name="j" width="489" lsb="-65"/>
    <mtx name="jcircumflex" width="515" lsb="-76"/>
    <mtx name="k" width="1038" lsb="141"/>
    <mtx name="kappa" width="1139" lsb="154"/>
    <mtx name="kgreenlandic" width="1139" lsb="154"/>
    <mtx name="l" width="497" lsb="156"/>
    <mtx name="lacute" width="497" lsb="147"/>
    <mtx name="lambda" width="1134" lsb="37"/>
    <mtx name="lcaron" width="647" lsb="156"/>
    <mtx name="ldot" width="717" lsb="156"/>
    <mtx name="less" width="1041" lsb="72"/>
    <mtx name="lessequal" width="1041" lsb="62"/>
    <mtx name="lira" width="1190" lsb="91"/>
    <mtx name="logicalnot" width="1134" lsb="127"/>
    <mtx name="longs" width="508" lsb="160"/>
    <mtx name="lozenge" width="1032" lsb="43"/>
    <mtx name="lslash" width="553" lsb="34"/>
    <mtx name="m" width="1795" lsb="139"/>
    <mtx name="macron" width="938" lsb="142"/>
    <mtx name="minus" width="1170" lsb="168"/>
    <mtx name="minute" width="357" lsb="103"/>
    <mtx name="mu" width="1160" lsb="154"/>
    <mtx name="multiply" width="1092" lsb="89"/>
    <mtx name="n" width="1130" lsb="140"/>
    <mtx name="nacute" width="1130" lsb="140"/>
    <mtx name="napostrophe" width="1130" lsb="-68"/>
    <mtx name="ncaron" width="1130" lsb="140"/>
    <mtx name="nine" width="1150" lsb="100"/>
    <mtx name="notequal" width="1124" lsb="152"/>
    <mtx name="ntilde" width="1130" lsb="140"/>
    <mtx name="nu" width="992" lsb="33"/>
    <mtx name="numbersign" width="1261" lsb="119"/>
    <mtx name="o" width="1168" lsb="91"/>
    <mtx name="oacute" width="1168" lsb="91"/>
    <mtx name="obreve" width="1168" lsb="91"/>
    <mtx name="ocircumflex" width="1168" lsb="91"/>
    <mtx name="odieresis" width="1168" lsb="91"/>
    <mtx name="oe" width="1860" lsb="97"/>
    <mtx name="ogonek" width="554" lsb="50"/>
    <mtx name="ograve" width="1168" lsb="91"/>
    <mtx name="ohorn" width="1170" lsb="91"/>
    <mtx name="ohungarumlaut" width="1168" lsb="91"/>
    <mtx name="omacron" width="1168" lsb="91"/>
    <mtx name="omega" width="1687" lsb="122"/>
    <mtx name="omega1" width="1608" lsb="74"/>
    <mtx name="omegatonos" width="1687" lsb="122"/>
    <mtx name="omicron" width="1168" lsb="91"/>
    <mtx name="omicrontonos" width="1168" lsb="91"/>
    <mtx name="one" width="1150" lsb="170"/>
    <mtx name="oneeighth" width="1574" lsb="84"/>
    <mtx name="onehalf" width="1589" lsb="80"/>
    <mtx name="onequarter" width="1500" lsb="85"/>
    <mtx name="ordfeminine" width="915" lsb="147"/>
    <mtx name="ordmasculine" width="931" lsb="122"/>
    <mtx name="oslash" width="1160" lsb="91"/>
    <mtx name="oslashacute" width="1160" lsb="91"/>
    <mtx name="otilde" width="1168" lsb="91"/>
    <mtx name="p" width="1149" lsb="140"/>
    <mtx name="paragraph" width="1001" lsb="67"/>
    <mtx name="parenleft" width="700" lsb="133"/>
    <mtx name="parenright" width="712" lsb="38"/>
    <mtx name="partialdiff" width="1167" lsb="106"/>
    <mtx name="percent" width="1500" lsb="105"/>
    <mtx name="period" width="539" lsb="144"/>
    <mtx name="periodcentered" width="534" lsb="147"/>
    <mtx name="perthousand" width="1962" lsb="68"/>
    <mtx name="peseta" width="1680" lsb="167"/>
    <mtx name="phi" width="1443" lsb="87"/>
    <mtx name="pi" width="1220" lsb="41"/>
    <mtx name="plus" width="1161" lsb="78"/>
    <mtx name="plusminus" width="1094" lsb="97"/>
    <mtx name="product" width="1422" lsb="169"/>
    <mtx name="psi" width="1434" lsb="95"/>
    <mtx name="q" width="1164" lsb="95"/>
    <mtx name="question" width="967" lsb="75"/>
    <mtx name="questiondown" width="969" lsb="68"/>
    <mtx name="quotedbl" width="655" lsb="136"/>
    <mtx name="quotedblbase" width="705" lsb="36"/>
    <mtx name="quotedblleft" width="724" lsb="104"/>
    <mtx name="quotedblright" width="731" lsb="60"/>
    <mtx name="quoteleft" width="409" lsb="96"/>
    <mtx name="quotereversed" width="409" lsb="79"/>
    <mtx name="quoteright" width="409" lsb="48"/>
    <mtx name="quotesinglbase" width="407" lsb="36"/>
    <mtx name="quotesingle" width="357" lsb="103"/>
    <mtx name="r" width="693" lsb="140"/>
    <mtx name="racute" width="693" lsb="140"/>
    <mtx name="radical" width="1221" lsb="63"/>
    <mtx name="rcaron" width="693" lsb="99"/>
    <mtx name="registered" width="1610" lsb="90"/>
    <mtx name="rho" width="1160" lsb="145"/>
    <mtx name="ring" width="685" lsb="121"/>
    <mtx name="s" width="1056" lsb="95"/>
    <mtx name="sacute" width="1056" lsb="95"/>
    <mtx name="scaron" width="1056" lsb="95"/>
    <mtx name="scedilla" width="1056" lsb="95"/>
    <mtx name="scircumflex" width="1056" lsb="95"/>
    <mtx name="second" width="655" lsb="136"/>
    <mtx name="section" width="1256" lsb="90"/>
    <mtx name="semicolon" width="433" lsb="41"/>
    <mtx name="seven" width="1150" lsb="77"/>
    <mtx name="seveneighths" width="1642" lsb="89"/>
    <mtx name="sigma" width="1160" lsb="96"/>
    <mtx name="sigma1" width="1101" lsb="101"/>
    <mtx name="six" width="1150" lsb="132"/>
    <mtx name="slash" width="844" lsb="18"/>
    <mtx name="space" width="507" lsb="0"/>
    <mtx name="sterling" width="1190" lsb="91"/>
    <mtx name="summation" width="1199" lsb="69"/>
    <mtx name="t" width="669" lsb="9"/>
    <mtx name="tau" width="1068" lsb="81"/>
    <mtx name="tbar" width="669" lsb="-12"/>
    <mtx name="tcaron" width="709" lsb="9"/>
    <mtx name="theta" width="1166" lsb="122"/>
    <mtx name="theta1" width="1185" lsb="121"/>
    <mtx name="thorn" width="1180" lsb="149"/>
    <mtx name="three" width="1150" lsb="94"/>
    <mtx name="threeeighths" width="1751" lsb="100"/>
    <mtx name="threequarters" width="1593" lsb="111"/>
    <mtx name="tilde" width="966" lsb="123"/>
    <mtx name="tildecomb" width="0" lsb="-885"/>
    <mtx name="tonos" width="525" lsb="183"/>
    <mtx name="trademark" width="1281" lsb="103"/>
    <mtx name="two" width="1150" lsb="93"/>
    <mtx name="twodotenleader" width="964" lsb="148"/>
    <mtx name="u" width="1129" lsb="136"/>
    <mtx name="uacute" width="1129" lsb="136"/>
    <mtx name="ubreve" width="1129" lsb="136"/>
    <mtx name="ucircumflex" width="1129" lsb="136"/>
    <mtx name="udieresis" width="1129" lsb="136"/>
    <mtx name="ugrave" width="1129" lsb="136"/>
    <mtx name="uhorn" width="1267" lsb="136"/>
    <mtx name="uhungarumlaut" width="1129" lsb="136"/>
    <mtx name="umacron" width="1129" lsb="136"/>
    <mtx name="underscore" width="924" lsb="4"/>
    <mtx name="underscoredbl" width="933" lsb="13"/>
    <mtx name="uni0000" width="0" lsb="0"/>
    <mtx name="uni0002" width="0" lsb="0"/>
    <mtx name="uni000D" width="507" lsb="0"/>
    <mtx name="uni00A0" width="507" lsb="0"/>
    <mtx name="uni00AD" width="565" lsb="37"/>
    <mtx name="uni00B2" width="751" lsb="66"/>
    <mtx name="uni00B3" width="751" lsb="62"/>
    <mtx name="uni00B9" width="751" lsb="122"/>
    <mtx name="uni0122" width="1395" lsb="122"/>
    <mtx name="uni0123" width="1149" lsb="96"/>
    <mtx name="uni0136" width="1284" lsb="169"/>
    <mtx name="uni0137" width="1038" lsb="141"/>
    <mtx name="uni013B" width="1102" lsb="169"/>
    <mtx name="uni013C" width="497" lsb="87"/>
    <mtx name="uni0145" width="1460" lsb="169"/>
    <mtx name="uni0146" width="1130" lsb="140"/>
    <mtx name="uni0156" width="1261" lsb="168"/>
    <mtx name="uni0157" width="693" lsb="83"/>
    <mtx name="uni0162" width="1222" lsb="49"/>
    <mtx name="uni0163" width="669" lsb="9"/>
    <mtx name="uni018F" width="1415" lsb="93"/>
    <mtx name="uni01F0" width="515" lsb="-76"/>
    <mtx name="uni0218" width="1215" lsb="80"/>
    <mtx name="uni0219" width="1056" lsb="95"/>
    <mtx name="uni021A" width="1222" lsb="49"/>
    <mtx name="uni021B" width="669" lsb="9"/>
    <mtx name="uni0237" width="515" lsb="-76"/>
    <mtx name="uni0259" width="1079" lsb="98"/>
    <mtx name="uni02BC" width="409" lsb="48"/>
    <mtx name="uni02C9" width="939" lsb="142"/>
    <mtx name="uni02F3" width="602" lsb="126"/>
    <mtx name="uni030F" width="0" lsb="-985"/>
    <mtx name="uni0394" width="1444" lsb="31"/>
    <mtx name="uni03A9" width="1362" lsb="113"/>
    <mtx name="uni03BC" width="1160" lsb="154"/>
    <mtx name="uni0400" width="1164" lsb="169"/>
    <mtx name="uni0401" width="1164" lsb="169"/>
    <mtx name="uni0402" width="1535" lsb="42"/>
    <mtx name="uni0403" width="1139" lsb="177"/>
    <mtx name="uni0404" width="1380" lsb="123"/>
    <mtx name="uni0405" width="1215" lsb="80"/>
    <mtx name="uni0406" width="557" lsb="183"/>
    <mtx name="uni0407" width="557" lsb="-43"/>
    <mtx name="uni0408" width="1130" lsb="53"/>
    <mtx name="uni0409" width="2193" lsb="49"/>
    <mtx name="uni040A" width="2212" lsb="177"/>
    <mtx name="uni040B" width="1666" lsb="62"/>
    <mtx name="uni040C" width="1284" lsb="169"/>
    <mtx name="uni040D" width="1460" lsb="177"/>
    <mtx name="uni040E" width="1287" lsb="77"/>
    <mtx name="uni040F" width="1460" lsb="176"/>
    <mtx name="uni0410" width="1336" lsb="28"/>
    <mtx name="uni0411" width="1291" lsb="162"/>
    <mtx name="uni0412" width="1275" lsb="169"/>
    <mtx name="uni0413" width="1139" lsb="177"/>
    <mtx name="uni0414" width="1540" lsb="50"/>
    <mtx name="uni0415" width="1164" lsb="169"/>
    <mtx name="uni0416" width="1859" lsb="27"/>
    <mtx name="uni0417" width="1215" lsb="80"/>
    <mtx name="uni0418" width="1460" lsb="177"/>
    <mtx name="uni0419" width="1460" lsb="177"/>
    <mtx name="uni041A" width="1316" lsb="178"/>
    <mtx name="uni041B" width="1449" lsb="47"/>
    <mtx name="uni041C" width="1788" lsb="169"/>
    <mtx name="uni041D" width="1460" lsb="169"/>
    <mtx name="uni041E" width="1408" lsb="118"/>
    <mtx name="uni041F" width="1461" lsb="178"/>
    <mtx name="uni0420" width="1292" lsb="169"/>
    <mtx name="uni0421" width="1333" lsb="119"/>
    <mtx name="uni0422" width="1222" lsb="49"/>
    <mtx name="uni0423" width="1287" lsb="77"/>
    <mtx name="uni0424" width="1580" lsb="83"/>
    <mtx name="uni0425" width="1284" lsb="57"/>
    <mtx name="uni0426" width="1497" lsb="175"/>
    <mtx name="uni0427" width="1402" lsb="150"/>
    <mtx name="uni0428" width="1927" lsb="176"/>
    <mtx name="uni0429" width="1984" lsb="176"/>
    <mtx name="uni042A" width="1554" lsb="16"/>
    <mtx name="uni042B" width="1771" lsb="178"/>
    <mtx name="uni042C" width="1285" lsb="163"/>
    <mtx name="uni042D" width="1380" lsb="147"/>
    <mtx name="uni042E" width="1831" lsb="183"/>
    <mtx name="uni042F" width="1304" lsb="89"/>
    <mtx name="uni0430" width="1114" lsb="109"/>
    <mtx name="uni0431" width="1132" lsb="97"/>
    <mtx name="uni0432" width="1170" lsb="157"/>
    <mtx name="uni0433" width="859" lsb="154"/>
    <mtx name="uni0434" width="1236" lsb="46"/>
    <mtx name="uni0435" width="1085" lsb="93"/>
    <mtx name="uni0436" width="1568" lsb="21"/>
    <mtx name="uni0437" width="1040" lsb="88"/>
    <mtx name="uni0438" width="1182" lsb="156"/>
    <mtx name="uni0439" width="1182" lsb="156"/>
    <mtx name="uni043A" width="1106" lsb="156"/>
    <mtx name="uni043B" width="1184" lsb="44"/>
    <mtx name="uni043C" width="1519" lsb="157"/>
    <mtx name="uni043D" width="1181" lsb="156"/>
    <mtx name="uni043E" width="1168" lsb="91"/>
    <mtx name="uni043F" width="1182" lsb="156"/>
    <mtx name="uni0440" width="1149" lsb="140"/>
    <mtx name="uni0441" width="1072" lsb="92"/>
    <mtx name="uni0442" width="984" lsb="40"/>
    <mtx name="uni0443" width="969" lsb="22"/>
    <mtx name="uni0444" width="1485" lsb="100"/>
    <mtx name="uni0445" width="1015" lsb="41"/>
    <mtx name="uni0446" width="1213" lsb="156"/>
    <mtx name="uni0447" width="1113" lsb="103"/>
    <mtx name="uni0448" width="1656" lsb="156"/>
    <mtx name="uni0449" width="1694" lsb="145"/>
    <mtx name="uni044A" width="1271" lsb="30"/>
    <mtx name="uni044B" width="1590" lsb="157"/>
    <mtx name="uni044C" width="1112" lsb="157"/>
    <mtx name="uni044D" width="1101" lsb="100"/>
    <mtx name="uni044E" width="1671" lsb="157"/>
    <mtx name="uni044F" width="1124" lsb="47"/>
    <mtx name="uni0450" width="1085" lsb="93"/>
    <mtx name="uni0451" width="1085" lsb="93"/>
    <mtx name="uni0452" width="1128" lsb="-24"/>
    <mtx name="uni0453" width="859" lsb="154"/>
    <mtx name="uni0454" width="1101" lsb="103"/>
    <mtx name="uni0455" width="1056" lsb="95"/>
    <mtx name="uni0456" width="497" lsb="141"/>
    <mtx name="uni0457" width="506" lsb="-69"/>
    <mtx name="uni0458" width="489" lsb="-65"/>
    <mtx name="uni0459" width="1737" lsb="39"/>
    <mtx name="uni045A" width="1764" lsb="156"/>
    <mtx name="uni045B" width="1161" lsb="-3"/>
    <mtx name="uni045C" width="1106" lsb="156"/>
    <mtx name="uni045D" width="1182" lsb="156"/>
    <mtx name="uni045E" width="969" lsb="22"/>
    <mtx name="uni045F" width="1182" lsb="156"/>
    <mtx name="uni0460" width="1800" lsb="156"/>
    <mtx name="uni0461" width="1579" lsb="129"/>
    <mtx name="uni0462" width="1285" lsb="-44"/>
    <mtx name="uni0463" width="1110" lsb="-36"/>
    <mtx name="uni0464" width="1835" lsb="183"/>
    <mtx name="uni0465" width="1528" lsb="153"/>
    <mtx name="uni0466" width="1234" lsb="40"/>
    <mtx name="uni0467" width="1094" lsb="15"/>
    <mtx name="uni0468" width="1803" lsb="201"/>
    <mtx name="uni0469" width="1547" lsb="188"/>
    <mtx name="uni046A" width="1745" lsb="147"/>
    <mtx name="uni046B" width="1505" lsb="150"/>
    <mtx name="uni046C" width="2308" lsb="182"/>
    <mtx name="uni046D" width="2001" lsb="155"/>
    <mtx name="uni046E" width="1059" lsb="80"/>
    <mtx name="uni046F" width="987" lsb="76"/>
    <mtx name="uni0470" width="1417" lsb="90"/>
    <mtx name="uni0471" width="1434" lsb="95"/>
    <mtx name="uni0472" width="1393" lsb="103"/>
    <mtx name="uni0473" width="1163" lsb="91"/>
    <mtx name="uni0474" width="1290" lsb="22"/>
    <mtx name="uni0475" width="1027" lsb="46"/>
    <mtx name="uni0476" width="1290" lsb="22"/>
    <mtx name="uni0477" width="1027" lsb="-5"/>
    <mtx name="uni0478" width="2377" lsb="118"/>
    <mtx name="uni0479" width="2137" lsb="91"/>
    <mtx name="uni047A" width="1393" lsb="103"/>
    <mtx name="uni047B" width="1160" lsb="91"/>
    <mtx name="uni047C" width="1793" lsb="156"/>
    <mtx name="uni047D" width="1572" lsb="126"/>
    <mtx name="uni047E" width="1800" lsb="156"/>
    <mtx name="uni047F" width="1579" lsb="129"/>
    <mtx name="uni0480" width="1330" lsb="117"/>
    <mtx name="uni0481" width="1095" lsb="100"/>
    <mtx name="uni0482" width="1277" lsb="116"/>
    <mtx name="uni0483" width="0" lsb="-921"/>
    <mtx name="uni0484" width="0" lsb="-911"/>
    <mtx name="uni0485" width="0" lsb="-666"/>
    <mtx name="uni0486" width="0" lsb="-604"/>
    <mtx name="uni0488" width="0" lsb="-1509"/>
    <mtx name="uni0489" width="0" lsb="-1492"/>
    <mtx name="uni048A" width="1545" lsb="177"/>
    <mtx name="uni048B" width="1261" lsb="156"/>
    <mtx name="uni048C" width="1285" lsb="-44"/>
    <mtx name="uni048D" width="1110" lsb="-36"/>
    <mtx name="uni048E" width="1307" lsb="168"/>
    <mtx name="uni048F" width="1161" lsb="140"/>
    <mtx name="uni0490" width="1123" lsb="162"/>
    <mtx name="uni0491" width="912" lsb="145"/>
    <mtx name="uni0492" width="1139" lsb="3"/>
    <mtx name="uni0493" width="859" lsb="-4"/>
    <mtx name="uni0494" width="1243" lsb="177"/>
    <mtx name="uni0495" width="1029" lsb="145"/>
    <mtx name="uni0496" width="1954" lsb="27"/>
    <mtx name="uni0497" width="1633" lsb="21"/>
    <mtx name="uni0498" width="1215" lsb="80"/>
    <mtx name="uni0499" width="1040" lsb="88"/>
    <mtx name="uni049A" width="1434" lsb="178"/>
    <mtx name="uni049B" width="1208" lsb="156"/>
    <mtx name="uni049C" width="1289" lsb="163"/>
    <mtx name="uni049D" width="1150" lsb="154"/>
    <mtx name="uni049E" width="1336" lsb="-9"/>
    <mtx name="uni049F" width="1063" lsb="-65"/>
    <mtx name="uni04A0" width="1676" lsb="68"/>
    <mtx name="uni04A1" width="1411" lsb="62"/>
    <mtx name="uni04A2" width="1535" lsb="169"/>
    <mtx name="uni04A3" width="1241" lsb="156"/>
    <mtx name="uni04A4" width="1999" lsb="168"/>
    <mtx name="uni04A5" width="1460" lsb="145"/>
    <mtx name="uni04A6" width="2097" lsb="176"/>
    <mtx name="uni04A7" width="1780" lsb="145"/>
    <mtx name="uni04A8" width="1518" lsb="113"/>
    <mtx name="uni04A9" width="1235" lsb="109"/>
    <mtx name="uni04AA" width="1333" lsb="119"/>
    <mtx name="uni04AB" width="1072" lsb="92"/>
    <mtx name="uni04AC" width="1222" lsb="49"/>
    <mtx name="uni04AD" width="984" lsb="40"/>
    <mtx name="uni04AE" width="1230" lsb="15"/>
    <mtx name="uni04AF" width="1026" lsb="46"/>
    <mtx name="uni04B0" width="1230" lsb="15"/>
    <mtx name="uni04B1" width="1026" lsb="46"/>
    <mtx name="uni04B2" width="1304" lsb="57"/>
    <mtx name="uni04B3" width="1066" lsb="41"/>
    <mtx name="uni04B4" width="1836" lsb="52"/>
    <mtx name="uni04B5" width="1372" lsb="31"/>
    <mtx name="uni04B6" width="1468" lsb="150"/>
    <mtx name="uni04B7" width="1174" lsb="103"/>
    <mtx name="uni04B8" width="1391" lsb="150"/>
    <mtx name="uni04B9" width="1130" lsb="131"/>
    <mtx name="uni04BA" width="1391" lsb="137"/>
    <mtx name="uni04BB" width="1128" lsb="140"/>
    <mtx name="uni04BC" width="1583" lsb="63"/>
    <mtx name="uni04BD" width="1213" lsb="-34"/>
    <mtx name="uni04BE" width="1583" lsb="63"/>
    <mtx name="uni04BF" width="1213" lsb="-34"/>
    <mtx name="uni04C0" width="557" lsb="183"/>
    <mtx name="uni04C1" width="1859" lsb="27"/>
    <mtx name="uni04C2" width="1568" lsb="21"/>
    <mtx name="uni04C3" width="1289" lsb="163"/>
    <mtx name="uni04C4" width="1114" lsb="154"/>
    <mtx name="uni04C5" width="1534" lsb="47"/>
    <mtx name="uni04C6" width="1263" lsb="44"/>
    <mtx name="uni04C7" width="1458" lsb="177"/>
    <mtx name="uni04C8" width="1160" lsb="145"/>
    <mtx name="uni04C9" width="1554" lsb="169"/>
    <mtx name="uni04CA" width="1260" lsb="156"/>
    <mtx name="uni04CB" width="1402" lsb="150"/>
    <mtx name="uni04CC" width="1113" lsb="103"/>
    <mtx name="uni04CD" width="1871" lsb="169"/>
    <mtx name="uni04CE" width="1598" lsb="157"/>
    <mtx name="uni04CF" width="557" lsb="183"/>
    <mtx name="uni04D0" width="1336" lsb="28"/>
    <mtx name="uni04D1" width="1114" lsb="109"/>
    <mtx name="uni04D2" width="1336" lsb="28"/>
    <mtx name="uni04D3" width="1114" lsb="109"/>
    <mtx name="uni04D4" width="1914" lsb="-14"/>
    <mtx name="uni04D5" width="1729" lsb="78"/>
    <mtx name="uni04D6" width="1164" lsb="169"/>
    <mtx name="uni04D7" width="1085" lsb="93"/>
    <mtx name="uni04D8" width="1415" lsb="93"/>
    <mtx name="uni04D9" width="1079" lsb="98"/>
    <mtx name="uni04DA" width="1415" lsb="93"/>
    <mtx name="uni04DB" width="1079" lsb="98"/>
    <mtx name="uni04DC" width="1859" lsb="27"/>
    <mtx name="uni04DD" width="1568" lsb="21"/>
    <mtx name="uni04DE" width="1215" lsb="80"/>
    <mtx name="uni04DF" width="1040" lsb="88"/>
    <mtx name="uni04E0" width="1192" lsb="104"/>
    <mtx name="uni04E1" width="1192" lsb="105"/>
    <mtx name="uni04E2" width="1460" lsb="177"/>
    <mtx name="uni04E3" width="1182" lsb="156"/>
    <mtx name="uni04E4" width="1460" lsb="177"/>
    <mtx name="uni04E5" width="1182" lsb="156"/>
    <mtx name="uni04E6" width="1408" lsb="118"/>
    <mtx name="uni04E7" width="1168" lsb="91"/>
    <mtx name="uni04E8" width="1393" lsb="103"/>
    <mtx name="uni04E9" width="1163" lsb="91"/>
    <mtx name="uni04EA" width="1393" lsb="103"/>
    <mtx name="uni04EB" width="1163" lsb="91"/>
    <mtx name="uni04EC" width="1380" lsb="147"/>
    <mtx name="uni04ED" width="1101" lsb="100"/>
    <mtx name="uni04EE" width="1287" lsb="77"/>
    <mtx name="uni04EF" width="969" lsb="22"/>
    <mtx name="uni04F0" width="1287" lsb="77"/>
    <mtx name="uni04F1" width="969" lsb="22"/>
    <mtx name="uni04F2" width="1287" lsb="77"/>
    <mtx name="uni04F3" width="969" lsb="22"/>
    <mtx name="uni04F4" width="1402" lsb="150"/>
    <mtx name="uni04F5" width="1113" lsb="103"/>
    <mtx name="uni04F6" width="1139" lsb="177"/>
    <mtx name="uni04F7" width="859" lsb="154"/>
    <mtx name="uni04F8" width="1771" lsb="178"/>
    <mtx name="uni04F9" width="1590" lsb="157"/>
    <mtx name="uni04FA" width="1207" lsb="58"/>
    <mtx name="uni04FB" width="939" lsb="59"/>
    <mtx name="uni04FC" width="1326" lsb="57"/>
    <mtx name="uni04FD" width="1088" lsb="41"/>
    <mtx name="uni04FE" width="1284" lsb="57"/>
    <mtx name="uni04FF" width="1015" lsb="41"/>
    <mtx name="uni0500" width="1270" lsb="87"/>
    <mtx name="uni0501" width="1155" lsb="95"/>
    <mtx name="uni0502" width="1684" lsb="89"/>
    <mtx name="uni0503" width="1764" lsb="100"/>
    <mtx name="uni0504" width="1622" lsb="54"/>
    <mtx name="uni0505" width="1323" lsb="49"/>
    <mtx name="uni0506" width="1097" lsb="82"/>
    <mtx name="uni0507" width="1031" lsb="121"/>
    <mtx name="uni0508" width="1985" lsb="68"/>
    <mtx name="uni0509" width="1653" lsb="63"/>
    <mtx name="uni050A" width="2043" lsb="169"/>
    <mtx name="uni050B" width="1697" lsb="144"/>
    <mtx name="uni050C" width="1270" lsb="118"/>
    <mtx name="uni050D" width="1053" lsb="101"/>
    <mtx name="uni050E" width="1453" lsb="35"/>
    <mtx name="uni050F" width="1312" lsb="70"/>
    <mtx name="uni0510" width="1380" lsb="150"/>
    <mtx name="uni0511" width="1104" lsb="99"/>
    <mtx name="uni0512" width="1538" lsb="47"/>
    <mtx name="uni0513" width="1266" lsb="44"/>
    <mtx name="uni1E00" width="1336" lsb="28"/>
    <mtx name="uni1E01" width="1114" lsb="109"/>
    <mtx name="uni1E3E" width="1788" lsb="169"/>
    <mtx name="uni1E3F" width="1795" lsb="139"/>
    <mtx name="uni1EA0" width="1336" lsb="28"/>
    <mtx name="uni1EA1" width="1114" lsb="109"/>
    <mtx name="uni1EA2" width="1336" lsb="28"/>
    <mtx name="uni1EA3" width="1114" lsb="109"/>
    <mtx name="uni1EA4" width="1336" lsb="28"/>
    <mtx name="uni1EA5" width="1114" lsb="109"/>
    <mtx name="uni1EA6" width="1336" lsb="28"/>
    <mtx name="uni1EA7" width="1114" lsb="-54"/>
    <mtx name="uni1EA8" width="1336" lsb="28"/>
    <mtx name="uni1EA9" width="1114" lsb="109"/>
    <mtx name="uni1EAA" width="1336" lsb="28"/>
    <mtx name="uni1EAB" width="1114" lsb="109"/>
    <mtx name="uni1EAC" width="1336" lsb="28"/>
    <mtx name="uni1EAD" width="1114" lsb="109"/>
    <mtx name="uni1EAE" width="1336" lsb="28"/>
    <mtx name="uni1EAF" width="1114" lsb="109"/>
    <mtx name="uni1EB0" width="1336" lsb="28"/>
    <mtx name="uni1EB1" width="1114" lsb="109"/>
    <mtx name="uni1EB2" width="1336" lsb="28"/>
    <mtx name="uni1EB3" width="1114" lsb="109"/>
    <mtx name="uni1EB4" width="1336" lsb="28"/>
    <mtx name="uni1EB5" width="1114" lsb="109"/>
    <mtx name="uni1EB6" width="1336" lsb="28"/>
    <mtx name="uni1EB7" width="1114" lsb="109"/>
    <mtx name="uni1EB8" width="1164" lsb="169"/>
    <mtx name="uni1EB9" width="1085" lsb="93"/>
    <mtx name="uni1EBA" width="1164" lsb="169"/>
    <mtx name="uni1EBB" width="1085" lsb="93"/>
    <mtx name="uni1EBC" width="1164" lsb="169"/>
    <mtx name="uni1EBD" width="1085" lsb="93"/>
    <mtx name="uni1EBE" width="1164" lsb="169"/>
    <mtx name="uni1EBF" width="1085" lsb="93"/>
    <mtx name="uni1EC0" width="1164" lsb="-16"/>
    <mtx name="uni1EC1" width="1085" lsb="-70"/>
    <mtx name="uni1EC2" width="1164" lsb="169"/>
    <mtx name="uni1EC3" width="1085" lsb="93"/>
    <mtx name="uni1EC4" width="1164" lsb="169"/>
    <mtx name="uni1EC5" width="1085" lsb="93"/>
    <mtx name="uni1EC6" width="1164" lsb="169"/>
    <mtx name="uni1EC7" width="1085" lsb="93"/>
    <mtx name="uni1EC8" width="557" lsb="183"/>
    <mtx name="uni1EC9" width="506" lsb="155"/>
    <mtx name="uni1ECA" width="557" lsb="163"/>
    <mtx name="uni1ECB" width="497" lsb="133"/>
    <mtx name="uni1ECC" width="1408" lsb="118"/>
    <mtx name="uni1ECD" width="1168" lsb="91"/>
    <mtx name="uni1ECE" width="1408" lsb="118"/>
    <mtx name="uni1ECF" width="1168" lsb="91"/>
    <mtx name="uni1ED0" width="1408" lsb="118"/>
    <mtx name="uni1ED1" width="1168" lsb="91"/>
    <mtx name="uni1ED2" width="1408" lsb="71"/>
    <mtx name="uni1ED3" width="1168" lsb="-60"/>
    <mtx name="uni1ED4" width="1408" lsb="118"/>
    <mtx name="uni1ED5" width="1168" lsb="91"/>
    <mtx name="uni1ED6" width="1408" lsb="118"/>
    <mtx name="uni1ED7" width="1168" lsb="91"/>
    <mtx name="uni1ED8" width="1408" lsb="118"/>
    <mtx name="uni1ED9" width="1168" lsb="91"/>
    <mtx name="uni1EDA" width="1406" lsb="101"/>
    <mtx name="uni1EDB" width="1170" lsb="91"/>
    <mtx name="uni1EDC" width="1406" lsb="101"/>
    <mtx name="uni1EDD" width="1170" lsb="91"/>
    <mtx name="uni1EDE" width="1406" lsb="101"/>
    <mtx name="uni1EDF" width="1170" lsb="91"/>
    <mtx name="uni1EE0" width="1406" lsb="101"/>
    <mtx name="uni1EE1" width="1170" lsb="91"/>
    <mtx name="uni1EE2" width="1406" lsb="101"/>
    <mtx name="uni1EE3" width="1170" lsb="91"/>
    <mtx name="uni1EE4" width="1328" lsb="140"/>
    <mtx name="uni1EE5" width="1129" lsb="136"/>
    <mtx name="uni1EE6" width="1328" lsb="140"/>
    <mtx name="uni1EE7" width="1129" lsb="136"/>
    <mtx name="uni1EE8" width="1424" lsb="140"/>
    <mtx name="uni1EE9" width="1267" lsb="136"/>
    <mtx name="uni1EEA" width="1424" lsb="140"/>
    <mtx name="uni1EEB" width="1267" lsb="136"/>
    <mtx name="uni1EEC" width="1424" lsb="140"/>
    <mtx name="uni1EED" width="1267" lsb="136"/>
    <mtx name="uni1EEE" width="1424" lsb="140"/>
    <mtx name="uni1EEF" width="1267" lsb="136"/>
    <mtx name="uni1EF0" width="1424" lsb="140"/>
    <mtx name="uni1EF1" width="1267" lsb="136"/>
    <mtx name="uni1EF4" width="1230" lsb="15"/>
    <mtx name="uni1EF5" width="969" lsb="22"/>
    <mtx name="uni1EF6" width="1230" lsb="15"/>
    <mtx name="uni1EF7" width="969" lsb="22"/>
    <mtx name="uni1EF8" width="1230" lsb="15"/>
    <mtx name="uni1EF9" width="969" lsb="22"/>
    <mtx name="uni1F4D" width="1478" lsb="-462"/>
    <mtx name="uni2000" width="1044" lsb="0"/>
    <mtx name="uni2001" width="2089" lsb="0"/>
    <mtx name="uni2002" width="1044" lsb="0"/>
    <mtx name="uni2003" width="2089" lsb="0"/>
    <mtx name="uni2004" width="697" lsb="0"/>
    <mtx name="uni2005" width="522" lsb="0"/>
    <mtx name="uni2006" width="348" lsb="0"/>
    <mtx name="uni2007" width="1151" lsb="0"/>
    <mtx name="uni2008" width="560" lsb="0"/>
    <mtx name="uni2009" width="418" lsb="0"/>
    <mtx name="uni200A" width="209" lsb="0"/>
    <mtx name="uni200B" width="0" lsb="0"/>
    <mtx name="uni2010" width="564" lsb="37"/>
    <mtx name="uni2011" width="564" lsb="37"/>
    <mtx name="uni2015" width="1599" lsb="144"/>
    <mtx name="uni2027" width="382" lsb="82"/>
    <mtx name="uni2074" width="751" lsb="54"/>
    <mtx name="uni207F" width="864" lsb="122"/>
    <mtx name="uni20A6" width="1621" lsb="31"/>
    <mtx name="uni20A8" width="2166" lsb="168"/>
    <mtx name="uni20A9" width="1515" lsb="31"/>
    <mtx name="uni20AA" width="1579" lsb="140"/>
    <mtx name="uni20B1" width="1498" lsb="31"/>
    <mtx name="uni20B9" width="1058" lsb="42"/>
    <mtx name="uni20BA" width="1140" lsb="32"/>
    <mtx name="uni20BC" width="1352" lsb="93"/>
    <mtx name="uni20BD" width="1359" lsb="31"/>
    <mtx name="uni2105" width="1511" lsb="122"/>
    <mtx name="uni2113" width="974" lsb="104"/>
    <mtx name="uni2116" width="2106" lsb="162"/>
    <mtx name="uniEE01" width="588" lsb="181"/>
    <mtx name="uniEE02" width="655" lsb="110"/>
    <mtx name="uniF6C3" width="515" lsb="92"/>
    <mtx name="uniFB01" width="1134" lsb="31"/>
    <mtx name="uniFB02" width="1163" lsb="60"/>
    <mtx name="uniFB03" width="1748" lsb="60"/>
    <mtx name="uniFB04" width="1748" lsb="60"/>
    <mtx name="uniFEFF" width="0" lsb="0"/>
    <mtx name="uniFFFC" width="2099" lsb="91"/>
    <mtx name="uniFFFD" width="2101" lsb="92"/>
    <mtx name="uogonek" width="1129" lsb="136"/>
    <mtx name="upsilon" width="1117" lsb="143"/>
    <mtx name="upsilondieresis" width="1117" lsb="143"/>
    <mtx name="upsilondieresistonos" width="1117" lsb="143"/>
    <mtx name="upsilontonos" width="1117" lsb="143"/>
    <mtx name="uring" width="1129" lsb="136"/>
    <mtx name="utilde" width="1129" lsb="136"/>
    <mtx name="v" width="992" lsb="33"/>
    <mtx name="w" width="1539" lsb="43"/>
    <mtx name="wacute" width="1539" lsb="43"/>
    <mtx name="wcircumflex" width="1539" lsb="43"/>
    <mtx name="wdieresis" width="1539" lsb="43"/>
    <mtx name="wgrave" width="1539" lsb="43"/>
    <mtx name="x" width="1015" lsb="41"/>
    <mtx name="xi" width="1004" lsb="101"/>
    <mtx name="y" width="969" lsb="22"/>
    <mtx name="yacute" width="969" lsb="22"/>
    <mtx name="ycircumflex" width="969" lsb="22"/>
    <mtx name="ydieresis" width="969" lsb="22"/>
    <mtx name="yen" width="1075" lsb="15"/>
    <mtx name="ygrave" width="969" lsb="22"/>
    <mtx name="z" width="1015" lsb="88"/>
    <mtx name="zacute" width="1015" lsb="88"/>
    <mtx name="zcaron" width="1015" lsb="88"/>
    <mtx name="zdotaccent" width="1015" lsb="88"/>
    <mtx name="zero" width="1150" lsb="115"/>
    <mtx name="zeta" width="1061" lsb="109"/>
  </hmtx>

  <hdmx>
    <hdmxData>
                      ppem:   9 ;

                   .notdef:   4 ;
                         A:   6 ;
                        AE:   8 ;
                   AEacute:   8 ;
                    Aacute:   6 ;
                    Abreve:   6 ;
               Acircumflex:   6 ;
                 Adieresis:   6 ;
                    Agrave:   6 ;
                     Alpha:   6 ;
                Alphatonos:   6 ;
                   Amacron:   6 ;
                   Aogonek:   6 ;
                     Aring:   6 ;
                Aringacute:   6 ;
                    Atilde:   6 ;
                         B:   6 ;
                      Beta:   6 ;
                         C:   6 ;
                    Cacute:   6 ;
                    Ccaron:   6 ;
                  Ccedilla:   6 ;
               Ccircumflex:   6 ;
                Cdotaccent:   6 ;
                       Chi:   6 ;
                         D:   6 ;
                    Dcaron:   6 ;
                    Dcroat:   6 ;
                         E:   5 ;
                    Eacute:   5 ;
                    Ebreve:   5 ;
                    Ecaron:   5 ;
               Ecircumflex:   5 ;
                 Edieresis:   5 ;
                Edotaccent:   5 ;
                    Egrave:   5 ;
                   Emacron:   5 ;
                       Eng:   6 ;
                   Eogonek:   5 ;
                   Epsilon:   5 ;
              Epsilontonos:   5 ;
                       Eta:   6 ;
                  Etatonos:   6 ;
                       Eth:   6 ;
                      Euro:   5 ;
                         F:   5 ;
                         G:   6 ;
                     Gamma:   5 ;
                    Gbreve:   6 ;
               Gcircumflex:   6 ;
                Gdotaccent:   6 ;
                         H:   6 ;
                      Hbar:   6 ;
               Hcircumflex:   6 ;
                         I:   2 ;
                        IJ:   7 ;
                    Iacute:   2 ;
                    Ibreve:   2 ;
               Icircumflex:   2 ;
                 Idieresis:   2 ;
                Idotaccent:   2 ;
                    Igrave:   2 ;
                   Imacron:   2 ;
                   Iogonek:   2 ;
                      Iota:   2 ;
              Iotadieresis:   2 ;
                 Iotatonos:   2 ;
                    Itilde:   2 ;
                         J:   5 ;
               Jcircumflex:   5 ;
                         K:   6 ;
                     Kappa:   6 ;
                         L:   5 ;
                    Lacute:   5 ;
                    Lambda:   6 ;
                    Lcaron:   5 ;
                      Ldot:   5 ;
                    Lslash:   5 ;
                         M:   8 ;
                        Mu:   8 ;
                         N:   6 ;
                    Nacute:   6 ;
                    Ncaron:   6 ;
                    Ntilde:   6 ;
                        Nu:   6 ;
                         O:   6 ;
                        OE:   9 ;
                    Oacute:   6 ;
                    Obreve:   6 ;
               Ocircumflex:   6 ;
                 Odieresis:   6 ;
                    Ograve:   6 ;
                     Ohorn:   6 ;
             Ohungarumlaut:   6 ;
                   Omacron:   6 ;
                Omegatonos:   6 ;
                   Omicron:   6 ;
              Omicrontonos:   6 ;
                    Oslash:   6 ;
               Oslashacute:   6 ;
                    Otilde:   6 ;
                         P:   6 ;
                       Phi:   6 ;
                        Pi:   6 ;
                       Psi:   6 ;
                         Q:   6 ;
                         R:   6 ;
                    Racute:   6 ;
                    Rcaron:   6 ;
                       Rho:   6 ;
                         S:   5 ;
                    Sacute:   5 ;
                    Scaron:   5 ;
                  Scedilla:   5 ;
               Scircumflex:   5 ;
                     Sigma:   5 ;
                         T:   5 ;
                       Tau:   5 ;
                      Tbar:   5 ;
                    Tcaron:   5 ;
                     Theta:   6 ;
                     Thorn:   5 ;
                         U:   6 ;
                    Uacute:   6 ;
                    Ubreve:   6 ;
               Ucircumflex:   6 ;
                 Udieresis:   6 ;
                    Ugrave:   6 ;
                     Uhorn:   6 ;
             Uhungarumlaut:   6 ;
                   Umacron:   6 ;
                   Uogonek:   6 ;
                   Upsilon:   5 ;
                  Upsilon1:   5 ;
           Upsilondieresis:   5 ;
              Upsilontonos:   6 ;
                     Uring:   6 ;
                    Utilde:   6 ;
                         V:   6 ;
                         W:   8 ;
                    Wacute:   8 ;
               Wcircumflex:   8 ;
                 Wdieresis:   8 ;
                    Wgrave:   8 ;
                         X:   6 ;
                        Xi:   5 ;
                         Y:   5 ;
                    Yacute:   5 ;
               Ycircumflex:   5 ;
                 Ydieresis:   5 ;
                    Ygrave:   5 ;
                         Z:   5 ;
                    Zacute:   5 ;
                    Zcaron:   5 ;
                Zdotaccent:   5 ;
                      Zeta:   5 ;
                         a:   5 ;
                    aacute:   5 ;
                    abreve:   5 ;
               acircumflex:   5 ;
                     acute:   3 ;
                 acutecomb:   0 ;
                 adieresis:   5 ;
                        ae:   8 ;
                   aeacute:   8 ;
                    agrave:   5 ;
                     alpha:   5 ;
                alphatonos:   5 ;
                   amacron:   5 ;
                 ampersand:   6 ;
                 anoteleia:   2 ;
                   aogonek:   5 ;
               approxequal:   5 ;
                     aring:   5 ;
                aringacute:   5 ;
               asciicircum:   4 ;
                asciitilde:   6 ;
                  asterisk:   4 ;
                        at:   8 ;
                    atilde:   5 ;
                         b:   5 ;
                 backslash:   4 ;
                       bar:   2 ;
                      beta:   5 ;
                 braceleft:   3 ;
                braceright:   3 ;
               bracketleft:   2 ;
              bracketright:   2 ;
                     breve:   4 ;
                 brokenbar:   2 ;
                    bullet:   3 ;
                         c:   5 ;
                    cacute:   5 ;
                     caron:   4 ;
                    ccaron:   5 ;
                  ccedilla:   5 ;
               ccircumflex:   5 ;
                cdotaccent:   5 ;
                   cedilla:   2 ;
                      cent:   5 ;
                       chi:   4 ;
                circumflex:   4 ;
                     colon:   2 ;
                     comma:   2 ;
                 copyright:   7 ;
                  currency:   6 ;
                         d:   5 ;
                    dagger:   5 ;
                 daggerdbl:   5 ;
                    dcaron:   6 ;
                    dcroat:   5 ;
                    degree:   3 ;
                     delta:   5 ;
                  dieresis:   4 ;
             dieresistonos:   5 ;
                    divide:   5 ;
                    dollar:   5 ;
                      dong:   5 ;
                 dotaccent:   2 ;
              dotbelowcomb:   0 ;
                  dotlessi:   2 ;
                         e:   5 ;
                    eacute:   5 ;
                    ebreve:   5 ;
                    ecaron:   5 ;
               ecircumflex:   5 ;
                 edieresis:   5 ;
                edotaccent:   5 ;
                    egrave:   5 ;
                     eight:   5 ;
                  ellipsis:   6 ;
                   emacron:   5 ;
                    emdash:   7 ;
                    endash:   6 ;
                       eng:   5 ;
                   eogonek:   5 ;
                   epsilon:   5 ;
              epsilontonos:   5 ;
                     equal:   5 ;
                 estimated:   6 ;
                       eta:   5 ;
                  etatonos:   5 ;
                       eth:   5 ;
                    exclam:   2 ;
                 exclamdbl:   5 ;
                exclamdown:   2 ;
                         f:   3 ;
                      five:   5 ;
               fiveeighths:   8 ;
                    florin:   3 ;
                      four:   5 ;
                  fraction:   4 ;
                     franc:   5 ;
                         g:   5 ;
                     gamma:   5 ;
                    gbreve:   5 ;
               gcircumflex:   5 ;
                gdotaccent:   5 ;
                germandbls:   5 ;
                glyph00369:   4 ;
                glyph00380:   1 ;
                glyph00443:   6 ;
                glyph00448:   6 ;
                glyph00449:   7 ;
                glyph00453:   3 ;
                glyph00454:   3 ;
                glyph00455:   3 ;
                glyph00456:   5 ;
                glyph00457:   5 ;
                glyph00458:   5 ;
                glyph00459:   5 ;
                glyph00460:   5 ;
                glyph00461:   5 ;
                glyph00462:   5 ;
                glyph00463:   5 ;
                glyph00464:   5 ;
                glyph00465:   5 ;
                glyph00466:   5 ;
                glyph00467:   5 ;
                glyph00468:   5 ;
                glyph00469:   7 ;
                glyph00470:   5 ;
                glyph00471:   5 ;
                glyph00472:   5 ;
                glyph00473:   5 ;
                glyph00474:   5 ;
                glyph00475:   5 ;
                glyph00476:   5 ;
                glyph00477:   5 ;
                glyph00478:   6 ;
                glyph00479:   7 ;
                glyph00480:   4 ;
                glyph00481:   5 ;
                glyph00482:   4 ;
                glyph00483:   2 ;
                glyph00484:   6 ;
                glyph00485:   5 ;
                glyph00486:   4 ;
                glyph00487:   5 ;
                glyph00488:   5 ;
                glyph00489:   4 ;
                glyph00490:   4 ;
                glyph00491:   5 ;
                glyph00492:   5 ;
                glyph00493:   5 ;
                glyph00494:   4 ;
                glyph00495:   5 ;
                glyph00496:   4 ;
                glyph00497:   6 ;
                glyph00498:   6 ;
                glyph00499:   6 ;
                glyph00500:   6 ;
                glyph00501:   5 ;
                glyph00502:   8 ;
                glyph00503:   8 ;
                glyph00504:   6 ;
                glyph00505:   5 ;
                glyph00506:   5 ;
                glyph00507:   6 ;
                glyph00508:   7 ;
                glyph00509:   5 ;
                glyph00510:   6 ;
                glyph00511:   5 ;
                glyph00512:   5 ;
                glyph00513:   5 ;
                glyph00514:   6 ;
                glyph00515:   5 ;
                glyph00516:   7 ;
                glyph00517:   8 ;
                glyph00518:   6 ;
                glyph00519:   7 ;
                glyph00520:   5 ;
                glyph00521:   5 ;
                glyph00522:   7 ;
                glyph00523:   5 ;
                glyph00524:   5 ;
                glyph00525:   7 ;
                glyph00526:   5 ;
                glyph00527:   6 ;
                glyph00528:   6 ;
                glyph00529:   6 ;
                glyph00530:   5 ;
                glyph00531:   5 ;
                glyph00532:   7 ;
                glyph00533:   5 ;
                glyph00534:   5 ;
                glyph00535:   6 ;
                glyph00536:   5 ;
                glyph00537:   5 ;
                glyph00538:   5 ;
                glyph00539:   5 ;
                glyph00540:   4 ;
                glyph00541:   9 ;
                glyph00542:   5 ;
                glyph00543:   3 ;
                glyph00544:   3 ;
                glyph00545:   3 ;
                glyph00546:   3 ;
                glyph00547:   3 ;
                glyph00548:   3 ;
                glyph00549:   3 ;
                glyph00550:   4 ;
                glyph00551:   3 ;
                glyph00552:   4 ;
                glyph00553:   5 ;
                glyph00554:   5 ;
                glyph00555:   6 ;
                glyph00556:   6 ;
                glyph00557:   5 ;
                glyph00558:   6 ;
                glyph00559:   5 ;
                glyph00560:   5 ;
                glyph00561:   5 ;
                glyph00562:   5 ;
                glyph00563:   5 ;
                glyph00564:   2 ;
                glyph00565:   4 ;
                glyph00566:   0 ;
                glyph00567:   4 ;
                glyph00568:   4 ;
                glyph00569:   5 ;
                glyph00570:   4 ;
                glyph00571:   4 ;
                glyph00572:   4 ;
                glyph00573:   4 ;
                glyph00574:   3 ;
                glyph00575:   3 ;
                glyph00576:   3 ;
                glyph00577:   3 ;
                glyph00578:   3 ;
                glyph00579:   3 ;
                glyph00580:   3 ;
                glyph00581:   6 ;
                glyph00582:   6 ;
                glyph00583:   6 ;
                glyph00584:   7 ;
                glyph00585:   7 ;
                glyph00586:   4 ;
                glyph00587:   5 ;
                glyph00588:   5 ;
                glyph00589:   5 ;
                glyph00590:   5 ;
                glyph00591:   5 ;
                glyph00592:   4 ;
                glyph00593:   2 ;
                glyph00594:   7 ;
                glyph00595:   5 ;
                glyph00596:   2 ;
                glyph00597:   5 ;
                glyph00598:   5 ;
                glyph00599:   5 ;
                glyph00600:   5 ;
                glyph00601:   5 ;
                glyph00602:   5 ;
                glyph00603:   5 ;
                glyph00604:   5 ;
                glyph00605:   5 ;
                glyph00606:   5 ;
                glyph00607:   2 ;
                glyph00608:   2 ;
                glyph00609:   2 ;
                glyph00610:   2 ;
                glyph00611:   2 ;
                glyph00612:   5 ;
                glyph00613:   6 ;
                glyph00614:   5 ;
                glyph00615:   5 ;
                glyph00616:   5 ;
                glyph00617:   5 ;
                glyph00618:   5 ;
                glyph00619:   5 ;
                glyph00620:   5 ;
                glyph00621:   5 ;
                glyph00622:   5 ;
                glyph00623:   5 ;
                glyph00624:   4 ;
                glyph00625:   5 ;
                glyph00626:   4 ;
                glyph00627:   7 ;
                glyph00628:   4 ;
                glyph00629:   5 ;
                glyph00630:   6 ;
                glyph00631:   6 ;
                glyph00815:   5 ;
                glyph00816:   5 ;
                glyph00817:   5 ;
                glyph00818:   5 ;
                glyph00819:   5 ;
                glyph00820:   5 ;
                glyph00821:   5 ;
                glyph00822:   5 ;
                glyph00823:   5 ;
                glyph00824:   5 ;
                glyph00825:   5 ;
                glyph00826:   4 ;
                glyph00827:   4 ;
                glyph00828:   4 ;
                glyph00829:   4 ;
                glyph00830:   2 ;
                glyph00831:   2 ;
                glyph00832:   2 ;
                glyph00833:   2 ;
                glyph00834:   6 ;
                glyph00835:   5 ;
                glyph00836:   5 ;
                glyph00837:   5 ;
                glyph00838:   5 ;
                glyph00839:   5 ;
                glyph00840:   5 ;
                glyph00841:   5 ;
                glyph00842:   5 ;
                glyph00843:   5 ;
                glyph00844:   5 ;
                glyph00845:   5 ;
                glyph00846:   5 ;
                glyph00847:   5 ;
                glyph00848:   5 ;
                glyph00849:   5 ;
                glyph00850:   5 ;
                glyph00851:   5 ;
                glyph00852:   5 ;
                glyph00853:   4 ;
                glyph00854:   4 ;
                glyph00855:   4 ;
                glyph00856:   4 ;
                glyph00857:   4 ;
                glyph00858:   5 ;
                glyph00859:   5 ;
                glyph00860:   5 ;
                glyph00861:   5 ;
                glyph00862:   6 ;
                glyph00863:   2 ;
                glyph00864:   2 ;
                glyph00865:   2 ;
                glyph00866:   2 ;
                glyph00867:   2 ;
                glyph00868:   4 ;
                glyph00869:   5 ;
                glyph00870:   4 ;
                glyph00871:   4 ;
                glyph00872:   4 ;
                glyph00873:   4 ;
                glyph00874:   6 ;
                glyph00875:   6 ;
                glyph00876:   6 ;
                glyph00877:   5 ;
                glyph00878:   5 ;
                glyph00879:   5 ;
                glyph00880:   5 ;
                glyph00881:   5 ;
                glyph00882:   5 ;
                glyph00883:   5 ;
                glyph00884:   5 ;
                glyph00885:   5 ;
                glyph00886:   5 ;
                glyph00887:   5 ;
                glyph00888:   5 ;
                glyph00889:   5 ;
                glyph00890:   5 ;
                glyph00891:   5 ;
                glyph00892:   5 ;
                glyph00893:   5 ;
                glyph00894:   5 ;
                glyph00895:   5 ;
                glyph00896:   7 ;
                glyph00897:   5 ;
                glyph00898:   5 ;
                glyph00899:   5 ;
                glyph00900:   5 ;
                glyph00901:   5 ;
                glyph01165:   5 ;
                glyph01166:   5 ;
                glyph01167:   5 ;
                glyph01168:   5 ;
                glyph01169:   5 ;
                glyph01170:   5 ;
                glyph01171:   5 ;
                glyph01172:   5 ;
                glyph01173:   6 ;
                glyph01174:   5 ;
                glyph01175:   6 ;
                glyph01176:   5 ;
                glyph01177:   6 ;
                glyph01178:   5 ;
                glyph01179:   5 ;
                glyph01180:   5 ;
                glyph01181:   2 ;
                glyph01182:   2 ;
                glyph01183:   6 ;
                glyph01184:   5 ;
                glyph01185:   6 ;
                glyph01186:   3 ;
                glyph01187:   6 ;
                glyph01188:   5 ;
                glyph01189:   5 ;
                glyph01190:   6 ;
                glyph01191:   5 ;
                glyph01192:   6 ;
                glyph01193:   5 ;
                glyph01194:   6 ;
                glyph01195:   5 ;
                glyph01196:   6 ;
                glyph01197:   5 ;
                glyph01198:   6 ;
                glyph01199:   5 ;
                glyph01200:   6 ;
                glyph01201:   5 ;
                glyph01202:   5 ;
                glyph01203:   2 ;
                glyph01204:   8 ;
                glyph01205:   8 ;
                glyph01206:   6 ;
                glyph01207:   5 ;
                glyph01208:   6 ;
                glyph01209:   6 ;
                glyph01210:   5 ;
                glyph01211:   6 ;
                glyph01212:   3 ;
                glyph01213:   5 ;
                glyph01214:   5 ;
                glyph01215:   5 ;
                glyph01216:   3 ;
                glyph01217:   6 ;
                glyph01218:   6 ;
                glyph01219:   4 ;
                glyph01220:   6 ;
                glyph01221:   4 ;
                glyph01222:   8 ;
                glyph01223:   7 ;
                glyph01224:   5 ;
                glyph01225:   4 ;
                glyph01227:   5 ;
                glyph01228:   5 ;
                glyph01229:   6 ;
                glyph01230:   2 ;
                glyph01231:   5 ;
                glyph01232:   5 ;
                glyph01233:   6 ;
                glyph01234:   5 ;
                glyph01235:   5 ;
                glyph01236:   4 ;
                glyph01237:   5 ;
                glyph01238:   6 ;
                glyph01239:   2 ;
                glyph01240:   5 ;
                glyph01241:   7 ;
                glyph01242:   6 ;
                glyph01243:   5 ;
                glyph01244:   5 ;
                glyph01245:   5 ;
                glyph01246:   5 ;
                glyph01247:   5 ;
                glyph01248:   2 ;
                glyph01249:   5 ;
                glyph01250:   4 ;
                glyph01251:   4 ;
                glyph01252:   5 ;
                glyph01253:   2 ;
                glyph01254:   2 ;
                glyph01255:   4 ;
                glyph01256:   5 ;
                glyph01257:   5 ;
                glyph01258:   5 ;
                glyph01259:   5 ;
                glyph01260:   4 ;
                glyph01261:   4 ;
                glyph01262:   6 ;
                glyph01263:   7 ;
                glyph01264:   6 ;
                glyph01265:   5 ;
                glyph01266:   5 ;
                glyph01267:   5 ;
                glyph01268:   5 ;
                glyph01269:   5 ;
                glyph01270:   5 ;
                glyph01271:   5 ;
                glyph01272:   6 ;
                glyph01273:   5 ;
                glyph01274:   5 ;
                glyph01275:   6 ;
                glyph01276:   6 ;
                glyph01277:   5 ;
                glyph01278:   6 ;
                glyph01279:   6 ;
                glyph01280:   7 ;
                glyph01281:   5 ;
                glyph01282:   5 ;
                glyph01283:   7 ;
                glyph01284:   7 ;
                glyph01285:   7 ;
                glyph01286:   5 ;
                glyph01287:   6 ;
                glyph01288:   5 ;
                glyph01289:   5 ;
                glyph01290:   5 ;
                glyph01291:   5 ;
                glyph01292:   4 ;
                glyph01293:   2 ;
                     grave:   3 ;
                 gravecomb:   0 ;
                   greater:   5 ;
              greaterequal:   5 ;
             guillemotleft:   4 ;
            guillemotright:   4 ;
             guilsinglleft:   3 ;
            guilsinglright:   3 ;
                         h:   5 ;
                      hbar:   5 ;
               hcircumflex:   5 ;
             hookabovecomb:   0 ;
              hungarumlaut:   3 ;
                    hyphen:   2 ;
                         i:   2 ;
                    iacute:   2 ;
                    ibreve:   2 ;
               icircumflex:   2 ;
                 idieresis:   2 ;
                    igrave:   2 ;
                        ij:   4 ;
                   imacron:   2 ;
                  infinity:   9 ;
                  integral:   2 ;
                   iogonek:   2 ;
                      iota:   3 ;
              iotadieresis:   3 ;
         iotadieresistonos:   3 ;
                 iotatonos:   3 ;
                    itilde:   2 ;
                         j:   2 ;
               jcircumflex:   2 ;
                         k:   5 ;
                     kappa:   5 ;
              kgreenlandic:   5 ;
                         l:   2 ;
                    lacute:   2 ;
                    lambda:   5 ;
                    lcaron:   3 ;
                      ldot:   3 ;
                      less:   5 ;
                 lessequal:   5 ;
                      lira:   5 ;
                logicalnot:   5 ;
                     longs:   2 ;
                   lozenge:   5 ;
                    lslash:   2 ;
                         m:   8 ;
                    macron:   4 ;
                     minus:   5 ;
                    minute:   2 ;
                        mu:   5 ;
                  multiply:   5 ;
                         n:   5 ;
                    nacute:   5 ;
               napostrophe:   5 ;
                    ncaron:   5 ;
                      nine:   5 ;
                  notequal:   5 ;
                    ntilde:   5 ;
                        nu:   4 ;
                numbersign:   6 ;
                         o:   5 ;
                    oacute:   5 ;
                    obreve:   5 ;
               ocircumflex:   5 ;
                 odieresis:   5 ;
                        oe:   8 ;
                    ogonek:   2 ;
                    ograve:   5 ;
                     ohorn:   5 ;
             ohungarumlaut:   5 ;
                   omacron:   5 ;
                     omega:   7 ;
                    omega1:   7 ;
                omegatonos:   7 ;
                   omicron:   5 ;
              omicrontonos:   5 ;
                       one:   5 ;
                 oneeighth:   7 ;
                   onehalf:   7 ;
                onequarter:   7 ;
               ordfeminine:   4 ;
              ordmasculine:   4 ;
                    oslash:   5 ;
               oslashacute:   5 ;
                    otilde:   5 ;
                         p:   5 ;
                 paragraph:   4 ;
                 parenleft:   3 ;
                parenright:   3 ;
               partialdiff:   5 ;
                   percent:   7 ;
                    period:   2 ;
            periodcentered:   2 ;
               perthousand:   9 ;
                    peseta:   7 ;
                       phi:   6 ;
                        pi:   5 ;
                      plus:   5 ;
                 plusminus:   5 ;
                   product:   6 ;
                       psi:   6 ;
                         q:   5 ;
                  question:   4 ;
              questiondown:   4 ;
                  quotedbl:   3 ;
              quotedblbase:   3 ;
              quotedblleft:   3 ;
             quotedblright:   3 ;
                 quoteleft:   2 ;
             quotereversed:   2 ;
                quoteright:   2 ;
            quotesinglbase:   2 ;
               quotesingle:   2 ;
                         r:   3 ;
                    racute:   3 ;
                   radical:   5 ;
                    rcaron:   3 ;
                registered:   7 ;
                       rho:   5 ;
                      ring:   3 ;
                         s:   5 ;
                    sacute:   5 ;
                    scaron:   5 ;
                  scedilla:   5 ;
               scircumflex:   5 ;
                    second:   3 ;
                   section:   6 ;
                 semicolon:   2 ;
                     seven:   5 ;
              seveneighths:   7 ;
                     sigma:   5 ;
                    sigma1:   5 ;
                       six:   5 ;
                     slash:   4 ;
                     space:   2 ;
                  sterling:   5 ;
                 summation:   5 ;
                         t:   3 ;
                       tau:   5 ;
                      tbar:   3 ;
                    tcaron:   3 ;
                     theta:   5 ;
                    theta1:   5 ;
                     thorn:   5 ;
                     three:   5 ;
              threeeighths:   8 ;
             threequarters:   7 ;
                     tilde:   4 ;
                 tildecomb:   0 ;
                     tonos:   2 ;
                 trademark:   6 ;
                       two:   5 ;
            twodotenleader:   4 ;
                         u:   5 ;
                    uacute:   5 ;
                    ubreve:   5 ;
               ucircumflex:   5 ;
                 udieresis:   5 ;
                    ugrave:   5 ;
                     uhorn:   6 ;
             uhungarumlaut:   5 ;
                   umacron:   5 ;
                underscore:   4 ;
             underscoredbl:   4 ;
                   uni0000:   0 ;
                   uni0002:   0 ;
                   uni000D:   2 ;
                   uni00A0:   2 ;
                   uni00AD:   2 ;
                   uni00B2:   3 ;
                   uni00B3:   3 ;
                   uni00B9:   3 ;
                   uni0122:   6 ;
                   uni0123:   5 ;
                   uni0136:   6 ;
                   uni0137:   5 ;
                   uni013B:   5 ;
                   uni013C:   2 ;
                   uni0145:   6 ;
                   uni0146:   5 ;
                   uni0156:   6 ;
                   uni0157:   3 ;
                   uni0162:   5 ;
                   uni0163:   3 ;
                   uni018F:   6 ;
                   uni01F0:   2 ;
                   uni0218:   5 ;
                   uni0219:   5 ;
                   uni021A:   5 ;
                   uni021B:   3 ;
                   uni0237:   2 ;
                   uni0259:   5 ;
                   uni02BC:   2 ;
                   uni02C9:   4 ;
                   uni02F3:   3 ;
                   uni030F:   0 ;
                   uni0394:   6 ;
                   uni03A9:   6 ;
                   uni03BC:   5 ;
                   uni0400:   5 ;
                   uni0401:   5 ;
                   uni0402:   7 ;
                   uni0403:   5 ;
                   uni0404:   6 ;
                   uni0405:   5 ;
                   uni0406:   2 ;
                   uni0407:   2 ;
                   uni0408:   5 ;
                   uni0409:  10 ;
                   uni040A:  10 ;
                   uni040B:   7 ;
                   uni040C:   6 ;
                   uni040D:   6 ;
                   uni040E:   6 ;
                   uni040F:   6 ;
                   uni0410:   6 ;
                   uni0411:   6 ;
                   uni0412:   6 ;
                   uni0413:   5 ;
                   uni0414:   7 ;
                   uni0415:   5 ;
                   uni0416:   8 ;
                   uni0417:   5 ;
                   uni0418:   6 ;
                   uni0419:   6 ;
                   uni041A:   6 ;
                   uni041B:   6 ;
                   uni041C:   8 ;
                   uni041D:   6 ;
                   uni041E:   6 ;
                   uni041F:   6 ;
                   uni0420:   6 ;
                   uni0421:   6 ;
                   uni0422:   5 ;
                   uni0423:   6 ;
                   uni0424:   7 ;
                   uni0425:   6 ;
                   uni0426:   7 ;
                   uni0427:   6 ;
                   uni0428:   8 ;
                   uni0429:   9 ;
                   uni042A:   7 ;
                   uni042B:   8 ;
                   uni042C:   6 ;
                   uni042D:   6 ;
                   uni042E:   8 ;
                   uni042F:   6 ;
                   uni0430:   5 ;
                   uni0431:   5 ;
                   uni0432:   5 ;
                   uni0433:   4 ;
                   uni0434:   5 ;
                   uni0435:   5 ;
                   uni0436:   7 ;
                   uni0437:   5 ;
                   uni0438:   5 ;
                   uni0439:   5 ;
                   uni043A:   5 ;
                   uni043B:   5 ;
                   uni043C:   7 ;
                   uni043D:   5 ;
                   uni043E:   5 ;
                   uni043F:   5 ;
                   uni0440:   5 ;
                   uni0441:   5 ;
                   uni0442:   4 ;
                   uni0443:   4 ;
                   uni0444:   7 ;
                   uni0445:   4 ;
                   uni0446:   5 ;
                   uni0447:   5 ;
                   uni0448:   7 ;
                   uni0449:   7 ;
                   uni044A:   6 ;
                   uni044B:   7 ;
                   uni044C:   5 ;
                   uni044D:   5 ;
                   uni044E:   7 ;
                   uni044F:   5 ;
                   uni0450:   5 ;
                   uni0451:   5 ;
                   uni0452:   5 ;
                   uni0453:   4 ;
                   uni0454:   5 ;
                   uni0455:   5 ;
                   uni0456:   2 ;
                   uni0457:   2 ;
                   uni0458:   2 ;
                   uni0459:   8 ;
                   uni045A:   8 ;
                   uni045B:   5 ;
                   uni045C:   5 ;
                   uni045D:   5 ;
                   uni045E:   4 ;
                   uni045F:   5 ;
                   uni0460:   8 ;
                   uni0461:   7 ;
                   uni0462:   6 ;
                   uni0463:   5 ;
                   uni0464:   8 ;
                   uni0465:   7 ;
                   uni0466:   5 ;
                   uni0467:   5 ;
                   uni0468:   8 ;
                   uni0469:   7 ;
                   uni046A:   8 ;
                   uni046B:   7 ;
                   uni046C:  10 ;
                   uni046D:   9 ;
                   uni046E:   5 ;
                   uni046F:   4 ;
                   uni0470:   6 ;
                   uni0471:   6 ;
                   uni0472:   6 ;
                   uni0473:   5 ;
                   uni0474:   6 ;
                   uni0475:   5 ;
                   uni0476:   6 ;
                   uni0477:   5 ;
                   uni0478:  10 ;
                   uni0479:   9 ;
                   uni047A:   6 ;
                   uni047B:   5 ;
                   uni047C:   8 ;
                   uni047D:   7 ;
                   uni047E:   8 ;
                   uni047F:   7 ;
                   uni0480:   6 ;
                   uni0481:   5 ;
                   uni0482:   6 ;
                   uni0483:   0 ;
                   uni0484:   0 ;
                   uni0485:   0 ;
                   uni0486:   0 ;
                   uni0488:   0 ;
                   uni0489:   0 ;
                   uni048A:   7 ;
                   uni048B:   6 ;
                   uni048C:   6 ;
                   uni048D:   5 ;
                   uni048E:   6 ;
                   uni048F:   5 ;
                   uni0490:   5 ;
                   uni0491:   4 ;
                   uni0492:   5 ;
                   uni0493:   4 ;
                   uni0494:   5 ;
                   uni0495:   5 ;
                   uni0496:   9 ;
                   uni0497:   7 ;
                   uni0498:   5 ;
                   uni0499:   5 ;
                   uni049A:   6 ;
                   uni049B:   5 ;
                   uni049C:   6 ;
                   uni049D:   5 ;
                   uni049E:   6 ;
                   uni049F:   5 ;
                   uni04A0:   7 ;
                   uni04A1:   6 ;
                   uni04A2:   7 ;
                   uni04A3:   5 ;
                   uni04A4:   9 ;
                   uni04A5:   6 ;
                   uni04A6:   9 ;
                   uni04A7:   8 ;
                   uni04A8:   7 ;
                   uni04A9:   5 ;
                   uni04AA:   6 ;
                   uni04AB:   5 ;
                   uni04AC:   5 ;
                   uni04AD:   4 ;
                   uni04AE:   5 ;
                   uni04AF:   5 ;
                   uni04B0:   5 ;
                   uni04B1:   5 ;
                   uni04B2:   6 ;
                   uni04B3:   5 ;
                   uni04B4:   8 ;
                   uni04B5:   6 ;
                   uni04B6:   6 ;
                   uni04B7:   5 ;
                   uni04B8:   6 ;
                   uni04B9:   5 ;
                   uni04BA:   6 ;
                   uni04BB:   5 ;
                   uni04BC:   7 ;
                   uni04BD:   5 ;
                   uni04BE:   7 ;
                   uni04BF:   5 ;
                   uni04C0:   2 ;
                   uni04C1:   8 ;
                   uni04C2:   7 ;
                   uni04C3:   6 ;
                   uni04C4:   5 ;
                   uni04C5:   7 ;
                   uni04C6:   6 ;
                   uni04C7:   6 ;
                   uni04C8:   5 ;
                   uni04C9:   7 ;
                   uni04CA:   6 ;
                   uni04CB:   6 ;
                   uni04CC:   5 ;
                   uni04CD:   8 ;
                   uni04CE:   7 ;
                   uni04CF:   2 ;
                   uni04D0:   6 ;
                   uni04D1:   5 ;
                   uni04D2:   6 ;
                   uni04D3:   5 ;
                   uni04D4:   8 ;
                   uni04D5:   8 ;
                   uni04D6:   5 ;
                   uni04D7:   5 ;
                   uni04D8:   6 ;
                   uni04D9:   5 ;
                   uni04DA:   6 ;
                   uni04DB:   5 ;
                   uni04DC:   8 ;
                   uni04DD:   7 ;
                   uni04DE:   5 ;
                   uni04DF:   5 ;
                   uni04E0:   5 ;
                   uni04E1:   5 ;
                   uni04E2:   6 ;
                   uni04E3:   5 ;
                   uni04E4:   6 ;
                   uni04E5:   5 ;
                   uni04E6:   6 ;
                   uni04E7:   5 ;
                   uni04E8:   6 ;
                   uni04E9:   5 ;
                   uni04EA:   6 ;
                   uni04EB:   5 ;
                   uni04EC:   6 ;
                   uni04ED:   5 ;
                   uni04EE:   6 ;
                   uni04EF:   4 ;
                   uni04F0:   6 ;
                   uni04F1:   4 ;
                   uni04F2:   6 ;
                   uni04F3:   4 ;
                   uni04F4:   6 ;
                   uni04F5:   5 ;
                   uni04F6:   5 ;
                   uni04F7:   4 ;
                   uni04F8:   8 ;
                   uni04F9:   7 ;
                   uni04FA:   5 ;
                   uni04FB:   4 ;
                   uni04FC:   6 ;
                   uni04FD:   5 ;
                   uni04FE:   6 ;
                   uni04FF:   4 ;
                   uni0500:   6 ;
                   uni0501:   5 ;
                   uni0502:   7 ;
                   uni0503:   8 ;
                   uni0504:   7 ;
                   uni0505:   6 ;
                   uni0506:   5 ;
                   uni0507:   5 ;
                   uni0508:   9 ;
                   uni0509:   7 ;
                   uni050A:   9 ;
                   uni050B:   7 ;
                   uni050C:   6 ;
                   uni050D:   5 ;
                   uni050E:   6 ;
                   uni050F:   6 ;
                   uni0510:   6 ;
                   uni0511:   5 ;
                   uni0512:   7 ;
                   uni0513:   6 ;
                   uni1E00:   6 ;
                   uni1E01:   5 ;
                   uni1E3E:   8 ;
                   uni1E3F:   8 ;
                   uni1EA0:   6 ;
                   uni1EA1:   5 ;
                   uni1EA2:   6 ;
                   uni1EA3:   5 ;
                   uni1EA4:   6 ;
                   uni1EA5:   5 ;
                   uni1EA6:   6 ;
                   uni1EA7:   5 ;
                   uni1EA8:   6 ;
                   uni1EA9:   5 ;
                   uni1EAA:   6 ;
                   uni1EAB:   5 ;
                   uni1EAC:   6 ;
                   uni1EAD:   5 ;
                   uni1EAE:   6 ;
                   uni1EAF:   5 ;
                   uni1EB0:   6 ;
                   uni1EB1:   5 ;
                   uni1EB2:   6 ;
                   uni1EB3:   5 ;
                   uni1EB4:   6 ;
                   uni1EB5:   5 ;
                   uni1EB6:   6 ;
                   uni1EB7:   5 ;
                   uni1EB8:   5 ;
                   uni1EB9:   5 ;
                   uni1EBA:   5 ;
                   uni1EBB:   5 ;
                   uni1EBC:   5 ;
                   uni1EBD:   5 ;
                   uni1EBE:   5 ;
                   uni1EBF:   5 ;
                   uni1EC0:   5 ;
                   uni1EC1:   5 ;
                   uni1EC2:   5 ;
                   uni1EC3:   5 ;
                   uni1EC4:   5 ;
                   uni1EC5:   5 ;
                   uni1EC6:   5 ;
                   uni1EC7:   5 ;
                   uni1EC8:   2 ;
                   uni1EC9:   2 ;
                   uni1ECA:   2 ;
                   uni1ECB:   2 ;
                   uni1ECC:   6 ;
                   uni1ECD:   5 ;
                   uni1ECE:   6 ;
                   uni1ECF:   5 ;
                   uni1ED0:   6 ;
                   uni1ED1:   5 ;
                   uni1ED2:   6 ;
                   uni1ED3:   5 ;
                   uni1ED4:   6 ;
                   uni1ED5:   5 ;
                   uni1ED6:   6 ;
                   uni1ED7:   5 ;
                   uni1ED8:   6 ;
                   uni1ED9:   5 ;
                   uni1EDA:   6 ;
                   uni1EDB:   5 ;
                   uni1EDC:   6 ;
                   uni1EDD:   5 ;
                   uni1EDE:   6 ;
                   uni1EDF:   5 ;
                   uni1EE0:   6 ;
                   uni1EE1:   5 ;
                   uni1EE2:   6 ;
                   uni1EE3:   5 ;
                   uni1EE4:   6 ;
                   uni1EE5:   5 ;
                   uni1EE6:   6 ;
                   uni1EE7:   5 ;
                   uni1EE8:   6 ;
                   uni1EE9:   6 ;
                   uni1EEA:   6 ;
                   uni1EEB:   6 ;
                   uni1EEC:   6 ;
                   uni1EED:   6 ;
                   uni1EEE:   6 ;
                   uni1EEF:   6 ;
                   uni1EF0:   6 ;
                   uni1EF1:   6 ;
                   uni1EF4:   5 ;
                   uni1EF5:   4 ;
                   uni1EF6:   5 ;
                   uni1EF7:   4 ;
                   uni1EF8:   5 ;
                   uni1EF9:   4 ;
                   uni1F4D:   7 ;
                   uni2000:   5 ;
                   uni2001:   9 ;
                   uni2002:   5 ;
                   uni2003:   9 ;
                   uni2004:   3 ;
                   uni2005:   2 ;
                   uni2006:   2 ;
                   uni2007:   5 ;
                   uni2008:   2 ;
                   uni2009:   2 ;
                   uni200A:   1 ;
                   uni200B:   0 ;
                   uni2010:   2 ;
                   uni2011:   2 ;
                   uni2015:   7 ;
                   uni2027:   2 ;
                   uni2074:   3 ;
                   uni207F:   4 ;
                   uni20A6:   7 ;
                   uni20A8:  10 ;
                   uni20A9:   7 ;
                   uni20AA:   7 ;
                   uni20B1:   7 ;
                   uni20B9:   5 ;
                   uni20BA:   5 ;
                   uni20BC:   6 ;
                   uni20BD:   6 ;
                   uni2105:   7 ;
                   uni2113:   4 ;
                   uni2116:   9 ;
                   uniEE01:   3 ;
                   uniEE02:   3 ;
                   uniF6C3:   2 ;
                   uniFB01:   5 ;
                   uniFB02:   5 ;
                   uniFB03:   8 ;
                   uniFB04:   8 ;
                   uniFEFF:   0 ;
                   uniFFFC:   9 ;
                   uniFFFD:   9 ;
                   uogonek:   5 ;
                   upsilon:   5 ;
           upsilondieresis:   5 ;
      upsilondieresistonos:   5 ;
              upsilontonos:   5 ;
                     uring:   5 ;
                    utilde:   5 ;
                         v:   4 ;
                         w:   7 ;
                    wacute:   7 ;
               wcircumflex:   7 ;
                 wdieresis:   7 ;
                    wgrave:   7 ;
                         x:   4 ;
                        xi:   4 ;
                         y:   4 ;
                    yacute:   4 ;
               ycircumflex:   4 ;
                 ydieresis:   4 ;
                       yen:   5 ;
                    ygrave:   4 ;
                         z:   4 ;
                    zacute:   4 ;
                    zcaron:   4 ;
                zdotaccent:   4 ;
                      zero:   5 ;
                      zeta:   5 ;
    </hdmxData>
  </hdmx>

  <cmap>
    <tableVersion version="0"/>
    <cmap_format_4 platformID="0" platEncID="3" language="0">
      <map code="0x0" name="uni0000"/><!-- ???? -->
      <map code="0x2" name="uni0002"/><!-- ???? -->
      <map code="0xd" name="uni000D"/><!-- ???? -->
      <map code="0x20" name="space"/><!-- SPACE -->
      <map code="0x21" name="exclam"/><!-- EXCLAMATION MARK -->
      <map code="0x22" name="quotedbl"/><!-- QUOTATION MARK -->
      <map code="0x23" name="numbersign"/><!-- NUMBER SIGN -->
      <map code="0x24" name="dollar"/><!-- DOLLAR SIGN -->
      <map code="0x25" name="percent"/><!-- PERCENT SIGN -->
      <map code="0x26" name="ampersand"/><!-- AMPERSAND -->
      <map code="0x27" name="quotesingle"/><!-- APOSTROPHE -->
      <map code="0x28" name="parenleft"/><!-- LEFT PARENTHESIS -->
      <map code="0x29" name="parenright"/><!-- RIGHT PARENTHESIS -->
      <map code="0x2a" name="asterisk"/><!-- ASTERISK -->
      <map code="0x2b" name="plus"/><!-- PLUS SIGN -->
      <map code="0x2c" name="comma"/><!-- COMMA -->
      <map code="0x2d" name="hyphen"/><!-- HYPHEN-MINUS -->
      <map code="0x2e" name="period"/><!-- FULL STOP -->
      <map code="0x2f" name="slash"/><!-- SOLIDUS -->
      <map code="0x30" name="zero"/><!-- DIGIT ZERO -->
      <map code="0x31" name="one"/><!-- DIGIT ONE -->
      <map code="0x32" name="two"/><!-- DIGIT TWO -->
      <map code="0x33" name="three"/><!-- DIGIT THREE -->
      <map code="0x34" name="four"/><!-- DIGIT FOUR -->
      <map code="0x35" name="five"/><!-- DIGIT FIVE -->
      <map code="0x36" name="six"/><!-- DIGIT SIX -->
      <map code="0x37" name="seven"/><!-- DIGIT SEVEN -->
      <map code="0x38" name="eight"/><!-- DIGIT EIGHT -->
      <map code="0x39" name="nine"/><!-- DIGIT NINE -->
      <map code="0x3a" name="colon"/><!-- COLON -->
      <map code="0x3b" name="semicolon"/><!-- SEMICOLON -->
      <map code="0x3c" name="less"/><!-- LESS-THAN SIGN -->
      <map code="0x3d" name="equal"/><!-- EQUALS SIGN -->
      <map code="0x3e" name="greater"/><!-- GREATER-THAN SIGN -->
      <map code="0x3f" name="question"/><!-- QUESTION MARK -->
      <map code="0x40" name="at"/><!-- COMMERCIAL AT -->
      <map code="0x41" name="A"/><!-- LATIN CAPITAL LETTER A -->
      <map code="0x42" name="B"/><!-- LATIN CAPITAL LETTER B -->
      <map code="0x43" name="C"/><!-- LATIN CAPITAL LETTER C -->
      <map code="0x44" name="D"/><!-- LATIN CAPITAL LETTER D -->
      <map code="0x45" name="E"/><!-- LATIN CAPITAL LETTER E -->
      <map code="0x46" name="F"/><!-- LATIN CAPITAL LETTER F -->
      <map code="0x47" name="G"/><!-- LATIN CAPITAL LETTER G -->
      <map code="0x48" name="H"/><!-- LATIN CAPITAL LETTER H -->
      <map code="0x49" name="I"/><!-- LATIN CAPITAL LETTER I -->
      <map code="0x4a" name="J"/><!-- LATIN CAPITAL LETTER J -->
      <map code="0x4b" name="K"/><!-- LATIN CAPITAL LETTER K -->
      <map code="0x4c" name="L"/><!-- LATIN CAPITAL LETTER L -->
      <map code="0x4d" name="M"/><!-- LATIN CAPITAL LETTER M -->
      <map code="0x4e" name="N"/><!-- LATIN CAPITAL LETTER N -->
      <map code="0x4f" name="O"/><!-- LATIN CAPITAL LETTER O -->
      <map code="0x50" name="P"/><!-- LATIN CAPITAL LETTER P -->
      <map code="0x51" name="Q"/><!-- LATIN CAPITAL LETTER Q -->
      <map code="0x52" name="R"/><!-- LATIN CAPITAL LETTER R -->
      <map code="0x53" name="S"/><!-- LATIN CAPITAL LETTER S -->
      <map code="0x54" name="T"/><!-- LATIN CAPITAL LETTER T -->
      <map code="0x55" name="U"/><!-- LATIN CAPITAL LETTER U -->
      <map code="0x56" name="V"/><!-- LATIN CAPITAL LETTER V -->
      <map code="0x57" name="W"/><!-- LATIN CAPITAL LETTER W -->
      <map code="0x58" name="X"/><!-- LATIN CAPITAL LETTER X -->
      <map code="0x59" name="Y"/><!-- LATIN CAPITAL LETTER Y -->
      <map code="0x5a" name="Z"/><!-- LATIN CAPITAL LETTER Z -->
      <map code="0x5b" name="bracketleft"/><!-- LEFT SQUARE BRACKET -->
      <map code="0x5c" name="backslash"/><!-- REVERSE SOLIDUS -->
      <map code="0x5d" name="bracketright"/><!-- RIGHT SQUARE BRACKET -->
      <map code="0x5e" name="asciicircum"/><!-- CIRCUMFLEX ACCENT -->
      <map code="0x5f" name="underscore"/><!-- LOW LINE -->
      <map code="0x60" name="grave"/><!-- GRAVE ACCENT -->
      <map code="0x61" name="a"/><!-- LATIN SMALL LETTER A -->
      <map code="0x62" name="b"/><!-- LATIN SMALL LETTER B -->
      <map code="0x63" name="c"/><!-- LATIN SMALL LETTER C -->
      <map code="0x64" name="d"/><!-- LATIN SMALL LETTER D -->
      <map code="0x65" name="e"/><!-- LATIN SMALL LETTER E -->
      <map code="0x66" name="f"/><!-- LATIN SMALL LETTER F -->
      <map code="0x67" name="g"/><!-- LATIN SMALL LETTER G -->
      <map code="0x68" name="h"/><!-- LATIN SMALL LETTER H -->
      <map code="0x69" name="i"/><!-- LATIN SMALL LETTER I -->
      <map code="0x6a" name="j"/><!-- LATIN SMALL LETTER J -->
      <map code="0x6b" name="k"/><!-- LATIN SMALL LETTER K -->
      <map code="0x6c" name="l"/><!-- LATIN SMALL LETTER L -->
      <map code="0x6d" name="m"/><!-- LATIN SMALL LETTER M -->
      <map code="0x6e" name="n"/><!-- LATIN SMALL LETTER N -->
      <map code="0x6f" name="o"/><!-- LATIN SMALL LETTER O -->
      <map code="0x70" name="p"/><!-- LATIN SMALL LETTER P -->
      <map code="0x71" name="q"/><!-- LATIN SMALL LETTER Q -->
      <map code="0x72" name="r"/><!-- LATIN SMALL LETTER R -->
      <map code="0x73" name="s"/><!-- LATIN SMALL LETTER S -->
      <map code="0x74" name="t"/><!-- LATIN SMALL LETTER T -->
      <map code="0x75" name="u"/><!-- LATIN SMALL LETTER U -->
      <map code="0x76" name="v"/><!-- LATIN SMALL LETTER V -->
      <map code="0x77" name="w"/><!-- LATIN SMALL LETTER W -->
      <map code="0x78" name="x"/><!-- LATIN SMALL LETTER X -->
      <map code="0x79" name="y"/><!-- LATIN SMALL LETTER Y -->
      <map code="0x7a" name="z"/><!-- LATIN SMALL LETTER Z -->
      <map code="0x7b" name="braceleft"/><!-- LEFT CURLY BRACKET -->
      <map code="0x7c" name="bar"/><!-- VERTICAL LINE -->
      <map code="0x7d" name="braceright"/><!-- RIGHT CURLY BRACKET -->
      <map code="0x7e" name="asciitilde"/><!-- TILDE -->
      <map code="0xa0" name="uni00A0"/><!-- NO-BREAK SPACE -->
      <map code="0xa1" name="exclamdown"/><!-- INVERTED EXCLAMATION MARK -->
      <map code="0xa2" name="cent"/><!-- CENT SIGN -->
      <map code="0xa3" name="sterling"/><!-- POUND SIGN -->
      <map code="0xa4" name="currency"/><!-- CURRENCY SIGN -->
      <map code="0xa5" name="yen"/><!-- YEN SIGN -->
      <map code="0xa6" name="brokenbar"/><!-- BROKEN BAR -->
      <map code="0xa7" name="section"/><!-- SECTION SIGN -->
      <map code="0xa8" name="dieresis"/><!-- DIAERESIS -->
      <map code="0xa9" name="copyright"/><!-- COPYRIGHT SIGN -->
      <map code="0xaa" name="ordfeminine"/><!-- FEMININE ORDINAL INDICATOR -->
      <map code="0xab" name="guillemotleft"/><!-- LEFT-POINTING DOUBLE ANGLE QUOTATION MARK -->
      <map code="0xac" name="logicalnot"/><!-- NOT SIGN -->
      <map code="0xad" name="uni00AD"/><!-- SOFT HYPHEN -->
      <map code="0xae" name="registered"/><!-- REGISTERED SIGN -->
      <map code="0xaf" name="macron"/><!-- MACRON -->
      <map code="0xb0" name="degree"/><!-- DEGREE SIGN -->
      <map code="0xb1" name="plusminus"/><!-- PLUS-MINUS SIGN -->
      <map code="0xb2" name="uni00B2"/><!-- SUPERSCRIPT TWO -->
      <map code="0xb3" name="uni00B3"/><!-- SUPERSCRIPT THREE -->
      <map code="0xb4" name="acute"/><!-- ACUTE ACCENT -->
      <map code="0xb5" name="mu"/><!-- MICRO SIGN -->
      <map code="0xb6" name="paragraph"/><!-- PILCROW SIGN -->
      <map code="0xb7" name="periodcentered"/><!-- MIDDLE DOT -->
      <map code="0xb8" name="cedilla"/><!-- CEDILLA -->
      <map code="0xb9" name="uni00B9"/><!-- SUPERSCRIPT ONE -->
      <map code="0xba" name="ordmasculine"/><!-- MASCULINE ORDINAL INDICATOR -->
      <map code="0xbb" name="guillemotright"/><!-- RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK -->
      <map code="0xbc" name="onequarter"/><!-- VULGAR FRACTION ONE QUARTER -->
      <map code="0xbd" name="onehalf"/><!-- VULGAR FRACTION ONE HALF -->
      <map code="0xbe" name="threequarters"/><!-- VULGAR FRACTION THREE QUARTERS -->
      <map code="0xbf" name="questiondown"/><!-- INVERTED QUESTION MARK -->
      <map code="0xc0" name="Agrave"/><!-- LATIN CAPITAL LETTER A WITH GRAVE -->
      <map code="0xc1" name="Aacute"/><!-- LATIN CAPITAL LETTER A WITH ACUTE -->
      <map code="0xc2" name="Acircumflex"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX -->
      <map code="0xc3" name="Atilde"/><!-- LATIN CAPITAL LETTER A WITH TILDE -->
      <map code="0xc4" name="Adieresis"/><!-- LATIN CAPITAL LETTER A WITH DIAERESIS -->
      <map code="0xc5" name="Aring"/><!-- LATIN CAPITAL LETTER A WITH RING ABOVE -->
      <map code="0xc6" name="AE"/><!-- LATIN CAPITAL LETTER AE -->
      <map code="0xc7" name="Ccedilla"/><!-- LATIN CAPITAL LETTER C WITH CEDILLA -->
      <map code="0xc8" name="Egrave"/><!-- LATIN CAPITAL LETTER E WITH GRAVE -->
      <map code="0xc9" name="Eacute"/><!-- LATIN CAPITAL LETTER E WITH ACUTE -->
      <map code="0xca" name="Ecircumflex"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX -->
      <map code="0xcb" name="Edieresis"/><!-- LATIN CAPITAL LETTER E WITH DIAERESIS -->
      <map code="0xcc" name="Igrave"/><!-- LATIN CAPITAL LETTER I WITH GRAVE -->
      <map code="0xcd" name="Iacute"/><!-- LATIN CAPITAL LETTER I WITH ACUTE -->
      <map code="0xce" name="Icircumflex"/><!-- LATIN CAPITAL LETTER I WITH CIRCUMFLEX -->
      <map code="0xcf" name="Idieresis"/><!-- LATIN CAPITAL LETTER I WITH DIAERESIS -->
      <map code="0xd0" name="Eth"/><!-- LATIN CAPITAL LETTER ETH -->
      <map code="0xd1" name="Ntilde"/><!-- LATIN CAPITAL LETTER N WITH TILDE -->
      <map code="0xd2" name="Ograve"/><!-- LATIN CAPITAL LETTER O WITH GRAVE -->
      <map code="0xd3" name="Oacute"/><!-- LATIN CAPITAL LETTER O WITH ACUTE -->
      <map code="0xd4" name="Ocircumflex"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX -->
      <map code="0xd5" name="Otilde"/><!-- LATIN CAPITAL LETTER O WITH TILDE -->
      <map code="0xd6" name="Odieresis"/><!-- LATIN CAPITAL LETTER O WITH DIAERESIS -->
      <map code="0xd7" name="multiply"/><!-- MULTIPLICATION SIGN -->
      <map code="0xd8" name="Oslash"/><!-- LATIN CAPITAL LETTER O WITH STROKE -->
      <map code="0xd9" name="Ugrave"/><!-- LATIN CAPITAL LETTER U WITH GRAVE -->
      <map code="0xda" name="Uacute"/><!-- LATIN CAPITAL LETTER U WITH ACUTE -->
      <map code="0xdb" name="Ucircumflex"/><!-- LATIN CAPITAL LETTER U WITH CIRCUMFLEX -->
      <map code="0xdc" name="Udieresis"/><!-- LATIN CAPITAL LETTER U WITH DIAERESIS -->
      <map code="0xdd" name="Yacute"/><!-- LATIN CAPITAL LETTER Y WITH ACUTE -->
      <map code="0xde" name="Thorn"/><!-- LATIN CAPITAL LETTER THORN -->
      <map code="0xdf" name="germandbls"/><!-- LATIN SMALL LETTER SHARP S -->
      <map code="0xe0" name="agrave"/><!-- LATIN SMALL LETTER A WITH GRAVE -->
      <map code="0xe1" name="aacute"/><!-- LATIN SMALL LETTER A WITH ACUTE -->
      <map code="0xe2" name="acircumflex"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX -->
      <map code="0xe3" name="atilde"/><!-- LATIN SMALL LETTER A WITH TILDE -->
      <map code="0xe4" name="adieresis"/><!-- LATIN SMALL LETTER A WITH DIAERESIS -->
      <map code="0xe5" name="aring"/><!-- LATIN SMALL LETTER A WITH RING ABOVE -->
      <map code="0xe6" name="ae"/><!-- LATIN SMALL LETTER AE -->
      <map code="0xe7" name="ccedilla"/><!-- LATIN SMALL LETTER C WITH CEDILLA -->
      <map code="0xe8" name="egrave"/><!-- LATIN SMALL LETTER E WITH GRAVE -->
      <map code="0xe9" name="eacute"/><!-- LATIN SMALL LETTER E WITH ACUTE -->
      <map code="0xea" name="ecircumflex"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX -->
      <map code="0xeb" name="edieresis"/><!-- LATIN SMALL LETTER E WITH DIAERESIS -->
      <map code="0xec" name="igrave"/><!-- LATIN SMALL LETTER I WITH GRAVE -->
      <map code="0xed" name="iacute"/><!-- LATIN SMALL LETTER I WITH ACUTE -->
      <map code="0xee" name="icircumflex"/><!-- LATIN SMALL LETTER I WITH CIRCUMFLEX -->
      <map code="0xef" name="idieresis"/><!-- LATIN SMALL LETTER I WITH DIAERESIS -->
      <map code="0xf0" name="eth"/><!-- LATIN SMALL LETTER ETH -->
      <map code="0xf1" name="ntilde"/><!-- LATIN SMALL LETTER N WITH TILDE -->
      <map code="0xf2" name="ograve"/><!-- LATIN SMALL LETTER O WITH GRAVE -->
      <map code="0xf3" name="oacute"/><!-- LATIN SMALL LETTER O WITH ACUTE -->
      <map code="0xf4" name="ocircumflex"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX -->
      <map code="0xf5" name="otilde"/><!-- LATIN SMALL LETTER O WITH TILDE -->
      <map code="0xf6" name="odieresis"/><!-- LATIN SMALL LETTER O WITH DIAERESIS -->
      <map code="0xf7" name="divide"/><!-- DIVISION SIGN -->
      <map code="0xf8" name="oslash"/><!-- LATIN SMALL LETTER O WITH STROKE -->
      <map code="0xf9" name="ugrave"/><!-- LATIN SMALL LETTER U WITH GRAVE -->
      <map code="0xfa" name="uacute"/><!-- LATIN SMALL LETTER U WITH ACUTE -->
      <map code="0xfb" name="ucircumflex"/><!-- LATIN SMALL LETTER U WITH CIRCUMFLEX -->
      <map code="0xfc" name="udieresis"/><!-- LATIN SMALL LETTER U WITH DIAERESIS -->
      <map code="0xfd" name="yacute"/><!-- LATIN SMALL LETTER Y WITH ACUTE -->
      <map code="0xfe" name="thorn"/><!-- LATIN SMALL LETTER THORN -->
      <map code="0xff" name="ydieresis"/><!-- LATIN SMALL LETTER Y WITH DIAERESIS -->
      <map code="0x100" name="Amacron"/><!-- LATIN CAPITAL LETTER A WITH MACRON -->
      <map code="0x101" name="amacron"/><!-- LATIN SMALL LETTER A WITH MACRON -->
      <map code="0x102" name="Abreve"/><!-- LATIN CAPITAL LETTER A WITH BREVE -->
      <map code="0x103" name="abreve"/><!-- LATIN SMALL LETTER A WITH BREVE -->
      <map code="0x104" name="Aogonek"/><!-- LATIN CAPITAL LETTER A WITH OGONEK -->
      <map code="0x105" name="aogonek"/><!-- LATIN SMALL LETTER A WITH OGONEK -->
      <map code="0x106" name="Cacute"/><!-- LATIN CAPITAL LETTER C WITH ACUTE -->
      <map code="0x107" name="cacute"/><!-- LATIN SMALL LETTER C WITH ACUTE -->
      <map code="0x108" name="Ccircumflex"/><!-- LATIN CAPITAL LETTER C WITH CIRCUMFLEX -->
      <map code="0x109" name="ccircumflex"/><!-- LATIN SMALL LETTER C WITH CIRCUMFLEX -->
      <map code="0x10a" name="Cdotaccent"/><!-- LATIN CAPITAL LETTER C WITH DOT ABOVE -->
      <map code="0x10b" name="cdotaccent"/><!-- LATIN SMALL LETTER C WITH DOT ABOVE -->
      <map code="0x10c" name="Ccaron"/><!-- LATIN CAPITAL LETTER C WITH CARON -->
      <map code="0x10d" name="ccaron"/><!-- LATIN SMALL LETTER C WITH CARON -->
      <map code="0x10e" name="Dcaron"/><!-- LATIN CAPITAL LETTER D WITH CARON -->
      <map code="0x10f" name="dcaron"/><!-- LATIN SMALL LETTER D WITH CARON -->
      <map code="0x110" name="Dcroat"/><!-- LATIN CAPITAL LETTER D WITH STROKE -->
      <map code="0x111" name="dcroat"/><!-- LATIN SMALL LETTER D WITH STROKE -->
      <map code="0x112" name="Emacron"/><!-- LATIN CAPITAL LETTER E WITH MACRON -->
      <map code="0x113" name="emacron"/><!-- LATIN SMALL LETTER E WITH MACRON -->
      <map code="0x114" name="Ebreve"/><!-- LATIN CAPITAL LETTER E WITH BREVE -->
      <map code="0x115" name="ebreve"/><!-- LATIN SMALL LETTER E WITH BREVE -->
      <map code="0x116" name="Edotaccent"/><!-- LATIN CAPITAL LETTER E WITH DOT ABOVE -->
      <map code="0x117" name="edotaccent"/><!-- LATIN SMALL LETTER E WITH DOT ABOVE -->
      <map code="0x118" name="Eogonek"/><!-- LATIN CAPITAL LETTER E WITH OGONEK -->
      <map code="0x119" name="eogonek"/><!-- LATIN SMALL LETTER E WITH OGONEK -->
      <map code="0x11a" name="Ecaron"/><!-- LATIN CAPITAL LETTER E WITH CARON -->
      <map code="0x11b" name="ecaron"/><!-- LATIN SMALL LETTER E WITH CARON -->
      <map code="0x11c" name="Gcircumflex"/><!-- LATIN CAPITAL LETTER G WITH CIRCUMFLEX -->
      <map code="0x11d" name="gcircumflex"/><!-- LATIN SMALL LETTER G WITH CIRCUMFLEX -->
      <map code="0x11e" name="Gbreve"/><!-- LATIN CAPITAL LETTER G WITH BREVE -->
      <map code="0x11f" name="gbreve"/><!-- LATIN SMALL LETTER G WITH BREVE -->
      <map code="0x120" name="Gdotaccent"/><!-- LATIN CAPITAL LETTER G WITH DOT ABOVE -->
      <map code="0x121" name="gdotaccent"/><!-- LATIN SMALL LETTER G WITH DOT ABOVE -->
      <map code="0x122" name="uni0122"/><!-- LATIN CAPITAL LETTER G WITH CEDILLA -->
      <map code="0x123" name="uni0123"/><!-- LATIN SMALL LETTER G WITH CEDILLA -->
      <map code="0x124" name="Hcircumflex"/><!-- LATIN CAPITAL LETTER H WITH CIRCUMFLEX -->
      <map code="0x125" name="hcircumflex"/><!-- LATIN SMALL LETTER H WITH CIRCUMFLEX -->
      <map code="0x126" name="Hbar"/><!-- LATIN CAPITAL LETTER H WITH STROKE -->
      <map code="0x127" name="hbar"/><!-- LATIN SMALL LETTER H WITH STROKE -->
      <map code="0x128" name="Itilde"/><!-- LATIN CAPITAL LETTER I WITH TILDE -->
      <map code="0x129" name="itilde"/><!-- LATIN SMALL LETTER I WITH TILDE -->
      <map code="0x12a" name="Imacron"/><!-- LATIN CAPITAL LETTER I WITH MACRON -->
      <map code="0x12b" name="imacron"/><!-- LATIN SMALL LETTER I WITH MACRON -->
      <map code="0x12c" name="Ibreve"/><!-- LATIN CAPITAL LETTER I WITH BREVE -->
      <map code="0x12d" name="ibreve"/><!-- LATIN SMALL LETTER I WITH BREVE -->
      <map code="0x12e" name="Iogonek"/><!-- LATIN CAPITAL LETTER I WITH OGONEK -->
      <map code="0x12f" name="iogonek"/><!-- LATIN SMALL LETTER I WITH OGONEK -->
      <map code="0x130" name="Idotaccent"/><!-- LATIN CAPITAL LETTER I WITH DOT ABOVE -->
      <map code="0x131" name="dotlessi"/><!-- LATIN SMALL LETTER DOTLESS I -->
      <map code="0x132" name="IJ"/><!-- LATIN CAPITAL LIGATURE IJ -->
      <map code="0x133" name="ij"/><!-- LATIN SMALL LIGATURE IJ -->
      <map code="0x134" name="Jcircumflex"/><!-- LATIN CAPITAL LETTER J WITH CIRCUMFLEX -->
      <map code="0x135" name="jcircumflex"/><!-- LATIN SMALL LETTER J WITH CIRCUMFLEX -->
      <map code="0x136" name="uni0136"/><!-- LATIN CAPITAL LETTER K WITH CEDILLA -->
      <map code="0x137" name="uni0137"/><!-- LATIN SMALL LETTER K WITH CEDILLA -->
      <map code="0x138" name="kgreenlandic"/><!-- LATIN SMALL LETTER KRA -->
      <map code="0x139" name="Lacute"/><!-- LATIN CAPITAL LETTER L WITH ACUTE -->
      <map code="0x13a" name="lacute"/><!-- LATIN SMALL LETTER L WITH ACUTE -->
      <map code="0x13b" name="uni013B"/><!-- LATIN CAPITAL LETTER L WITH CEDILLA -->
      <map code="0x13c" name="uni013C"/><!-- LATIN SMALL LETTER L WITH CEDILLA -->
      <map code="0x13d" name="Lcaron"/><!-- LATIN CAPITAL LETTER L WITH CARON -->
      <map code="0x13e" name="lcaron"/><!-- LATIN SMALL LETTER L WITH CARON -->
      <map code="0x13f" name="Ldot"/><!-- LATIN CAPITAL LETTER L WITH MIDDLE DOT -->
      <map code="0x140" name="ldot"/><!-- LATIN SMALL LETTER L WITH MIDDLE DOT -->
      <map code="0x141" name="Lslash"/><!-- LATIN CAPITAL LETTER L WITH STROKE -->
      <map code="0x142" name="lslash"/><!-- LATIN SMALL LETTER L WITH STROKE -->
      <map code="0x143" name="Nacute"/><!-- LATIN CAPITAL LETTER N WITH ACUTE -->
      <map code="0x144" name="nacute"/><!-- LATIN SMALL LETTER N WITH ACUTE -->
      <map code="0x145" name="uni0145"/><!-- LATIN CAPITAL LETTER N WITH CEDILLA -->
      <map code="0x146" name="uni0146"/><!-- LATIN SMALL LETTER N WITH CEDILLA -->
      <map code="0x147" name="Ncaron"/><!-- LATIN CAPITAL LETTER N WITH CARON -->
      <map code="0x148" name="ncaron"/><!-- LATIN SMALL LETTER N WITH CARON -->
      <map code="0x149" name="napostrophe"/><!-- LATIN SMALL LETTER N PRECEDED BY APOSTROPHE -->
      <map code="0x14a" name="Eng"/><!-- LATIN CAPITAL LETTER ENG -->
      <map code="0x14b" name="eng"/><!-- LATIN SMALL LETTER ENG -->
      <map code="0x14c" name="Omacron"/><!-- LATIN CAPITAL LETTER O WITH MACRON -->
      <map code="0x14d" name="omacron"/><!-- LATIN SMALL LETTER O WITH MACRON -->
      <map code="0x14e" name="Obreve"/><!-- LATIN CAPITAL LETTER O WITH BREVE -->
      <map code="0x14f" name="obreve"/><!-- LATIN SMALL LETTER O WITH BREVE -->
      <map code="0x150" name="Ohungarumlaut"/><!-- LATIN CAPITAL LETTER O WITH DOUBLE ACUTE -->
      <map code="0x151" name="ohungarumlaut"/><!-- LATIN SMALL LETTER O WITH DOUBLE ACUTE -->
      <map code="0x152" name="OE"/><!-- LATIN CAPITAL LIGATURE OE -->
      <map code="0x153" name="oe"/><!-- LATIN SMALL LIGATURE OE -->
      <map code="0x154" name="Racute"/><!-- LATIN CAPITAL LETTER R WITH ACUTE -->
      <map code="0x155" name="racute"/><!-- LATIN SMALL LETTER R WITH ACUTE -->
      <map code="0x156" name="uni0156"/><!-- LATIN CAPITAL LETTER R WITH CEDILLA -->
      <map code="0x157" name="uni0157"/><!-- LATIN SMALL LETTER R WITH CEDILLA -->
      <map code="0x158" name="Rcaron"/><!-- LATIN CAPITAL LETTER R WITH CARON -->
      <map code="0x159" name="rcaron"/><!-- LATIN SMALL LETTER R WITH CARON -->
      <map code="0x15a" name="Sacute"/><!-- LATIN CAPITAL LETTER S WITH ACUTE -->
      <map code="0x15b" name="sacute"/><!-- LATIN SMALL LETTER S WITH ACUTE -->
      <map code="0x15c" name="Scircumflex"/><!-- LATIN CAPITAL LETTER S WITH CIRCUMFLEX -->
      <map code="0x15d" name="scircumflex"/><!-- LATIN SMALL LETTER S WITH CIRCUMFLEX -->
      <map code="0x15e" name="Scedilla"/><!-- LATIN CAPITAL LETTER S WITH CEDILLA -->
      <map code="0x15f" name="scedilla"/><!-- LATIN SMALL LETTER S WITH CEDILLA -->
      <map code="0x160" name="Scaron"/><!-- LATIN CAPITAL LETTER S WITH CARON -->
      <map code="0x161" name="scaron"/><!-- LATIN SMALL LETTER S WITH CARON -->
      <map code="0x162" name="uni0162"/><!-- LATIN CAPITAL LETTER T WITH CEDILLA -->
      <map code="0x163" name="uni0163"/><!-- LATIN SMALL LETTER T WITH CEDILLA -->
      <map code="0x164" name="Tcaron"/><!-- LATIN CAPITAL LETTER T WITH CARON -->
      <map code="0x165" name="tcaron"/><!-- LATIN SMALL LETTER T WITH CARON -->
      <map code="0x166" name="Tbar"/><!-- LATIN CAPITAL LETTER T WITH STROKE -->
      <map code="0x167" name="tbar"/><!-- LATIN SMALL LETTER T WITH STROKE -->
      <map code="0x168" name="Utilde"/><!-- LATIN CAPITAL LETTER U WITH TILDE -->
      <map code="0x169" name="utilde"/><!-- LATIN SMALL LETTER U WITH TILDE -->
      <map code="0x16a" name="Umacron"/><!-- LATIN CAPITAL LETTER U WITH MACRON -->
      <map code="0x16b" name="umacron"/><!-- LATIN SMALL LETTER U WITH MACRON -->
      <map code="0x16c" name="Ubreve"/><!-- LATIN CAPITAL LETTER U WITH BREVE -->
      <map code="0x16d" name="ubreve"/><!-- LATIN SMALL LETTER U WITH BREVE -->
      <map code="0x16e" name="Uring"/><!-- LATIN CAPITAL LETTER U WITH RING ABOVE -->
      <map code="0x16f" name="uring"/><!-- LATIN SMALL LETTER U WITH RING ABOVE -->
      <map code="0x170" name="Uhungarumlaut"/><!-- LATIN CAPITAL LETTER U WITH DOUBLE ACUTE -->
      <map code="0x171" name="uhungarumlaut"/><!-- LATIN SMALL LETTER U WITH DOUBLE ACUTE -->
      <map code="0x172" name="Uogonek"/><!-- LATIN CAPITAL LETTER U WITH OGONEK -->
      <map code="0x173" name="uogonek"/><!-- LATIN SMALL LETTER U WITH OGONEK -->
      <map code="0x174" name="Wcircumflex"/><!-- LATIN CAPITAL LETTER W WITH CIRCUMFLEX -->
      <map code="0x175" name="wcircumflex"/><!-- LATIN SMALL LETTER W WITH CIRCUMFLEX -->
      <map code="0x176" name="Ycircumflex"/><!-- LATIN CAPITAL LETTER Y WITH CIRCUMFLEX -->
      <map code="0x177" name="ycircumflex"/><!-- LATIN SMALL LETTER Y WITH CIRCUMFLEX -->
      <map code="0x178" name="Ydieresis"/><!-- LATIN CAPITAL LETTER Y WITH DIAERESIS -->
      <map code="0x179" name="Zacute"/><!-- LATIN CAPITAL LETTER Z WITH ACUTE -->
      <map code="0x17a" name="zacute"/><!-- LATIN SMALL LETTER Z WITH ACUTE -->
      <map code="0x17b" name="Zdotaccent"/><!-- LATIN CAPITAL LETTER Z WITH DOT ABOVE -->
      <map code="0x17c" name="zdotaccent"/><!-- LATIN SMALL LETTER Z WITH DOT ABOVE -->
      <map code="0x17d" name="Zcaron"/><!-- LATIN CAPITAL LETTER Z WITH CARON -->
      <map code="0x17e" name="zcaron"/><!-- LATIN SMALL LETTER Z WITH CARON -->
      <map code="0x17f" name="longs"/><!-- LATIN SMALL LETTER LONG S -->
      <map code="0x18f" name="uni018F"/><!-- LATIN CAPITAL LETTER SCHWA -->
      <map code="0x192" name="florin"/><!-- LATIN SMALL LETTER F WITH HOOK -->
      <map code="0x1a0" name="Ohorn"/><!-- LATIN CAPITAL LETTER O WITH HORN -->
      <map code="0x1a1" name="ohorn"/><!-- LATIN SMALL LETTER O WITH HORN -->
      <map code="0x1af" name="Uhorn"/><!-- LATIN CAPITAL LETTER U WITH HORN -->
      <map code="0x1b0" name="uhorn"/><!-- LATIN SMALL LETTER U WITH HORN -->
      <map code="0x1f0" name="uni01F0"/><!-- LATIN SMALL LETTER J WITH CARON -->
      <map code="0x1fa" name="Aringacute"/><!-- LATIN CAPITAL LETTER A WITH RING ABOVE AND ACUTE -->
      <map code="0x1fb" name="aringacute"/><!-- LATIN SMALL LETTER A WITH RING ABOVE AND ACUTE -->
      <map code="0x1fc" name="AEacute"/><!-- LATIN CAPITAL LETTER AE WITH ACUTE -->
      <map code="0x1fd" name="aeacute"/><!-- LATIN SMALL LETTER AE WITH ACUTE -->
      <map code="0x1fe" name="Oslashacute"/><!-- LATIN CAPITAL LETTER O WITH STROKE AND ACUTE -->
      <map code="0x1ff" name="oslashacute"/><!-- LATIN SMALL LETTER O WITH STROKE AND ACUTE -->
      <map code="0x218" name="uni0218"/><!-- LATIN CAPITAL LETTER S WITH COMMA BELOW -->
      <map code="0x219" name="uni0219"/><!-- LATIN SMALL LETTER S WITH COMMA BELOW -->
      <map code="0x21a" name="uni021A"/><!-- LATIN CAPITAL LETTER T WITH COMMA BELOW -->
      <map code="0x21b" name="uni021B"/><!-- LATIN SMALL LETTER T WITH COMMA BELOW -->
      <map code="0x237" name="uni0237"/><!-- LATIN SMALL LETTER DOTLESS J -->
      <map code="0x259" name="uni0259"/><!-- LATIN SMALL LETTER SCHWA -->
      <map code="0x2bc" name="uni02BC"/><!-- MODIFIER LETTER APOSTROPHE -->
      <map code="0x2c6" name="circumflex"/><!-- MODIFIER LETTER CIRCUMFLEX ACCENT -->
      <map code="0x2c7" name="caron"/><!-- CARON -->
      <map code="0x2c9" name="uni02C9"/><!-- MODIFIER LETTER MACRON -->
      <map code="0x2d8" name="breve"/><!-- BREVE -->
      <map code="0x2d9" name="dotaccent"/><!-- DOT ABOVE -->
      <map code="0x2da" name="ring"/><!-- RING ABOVE -->
      <map code="0x2db" name="ogonek"/><!-- OGONEK -->
      <map code="0x2dc" name="tilde"/><!-- SMALL TILDE -->
      <map code="0x2dd" name="hungarumlaut"/><!-- DOUBLE ACUTE ACCENT -->
      <map code="0x2f3" name="uni02F3"/><!-- MODIFIER LETTER LOW RING -->
      <map code="0x300" name="gravecomb"/><!-- COMBINING GRAVE ACCENT -->
      <map code="0x301" name="acutecomb"/><!-- COMBINING ACUTE ACCENT -->
      <map code="0x303" name="tildecomb"/><!-- COMBINING TILDE -->
      <map code="0x309" name="hookabovecomb"/><!-- COMBINING HOOK ABOVE -->
      <map code="0x30f" name="uni030F"/><!-- COMBINING DOUBLE GRAVE ACCENT -->
      <map code="0x323" name="dotbelowcomb"/><!-- COMBINING DOT BELOW -->
      <map code="0x384" name="tonos"/><!-- GREEK TONOS -->
      <map code="0x385" name="dieresistonos"/><!-- GREEK DIALYTIKA TONOS -->
      <map code="0x386" name="Alphatonos"/><!-- GREEK CAPITAL LETTER ALPHA WITH TONOS -->
      <map code="0x387" name="anoteleia"/><!-- GREEK ANO TELEIA -->
      <map code="0x388" name="Epsilontonos"/><!-- GREEK CAPITAL LETTER EPSILON WITH TONOS -->
      <map code="0x389" name="Etatonos"/><!-- GREEK CAPITAL LETTER ETA WITH TONOS -->
      <map code="0x38a" name="Iotatonos"/><!-- GREEK CAPITAL LETTER IOTA WITH TONOS -->
      <map code="0x38c" name="Omicrontonos"/><!-- GREEK CAPITAL LETTER OMICRON WITH TONOS -->
      <map code="0x38e" name="Upsilontonos"/><!-- GREEK CAPITAL LETTER UPSILON WITH TONOS -->
      <map code="0x38f" name="Omegatonos"/><!-- GREEK CAPITAL LETTER OMEGA WITH TONOS -->
      <map code="0x390" name="iotadieresistonos"/><!-- GREEK SMALL LETTER IOTA WITH DIALYTIKA AND TONOS -->
      <map code="0x391" name="Alpha"/><!-- GREEK CAPITAL LETTER ALPHA -->
      <map code="0x392" name="Beta"/><!-- GREEK CAPITAL LETTER BETA -->
      <map code="0x393" name="Gamma"/><!-- GREEK CAPITAL LETTER GAMMA -->
      <map code="0x394" name="uni0394"/><!-- GREEK CAPITAL LETTER DELTA -->
      <map code="0x395" name="Epsilon"/><!-- GREEK CAPITAL LETTER EPSILON -->
      <map code="0x396" name="Zeta"/><!-- GREEK CAPITAL LETTER ZETA -->
      <map code="0x397" name="Eta"/><!-- GREEK CAPITAL LETTER ETA -->
      <map code="0x398" name="Theta"/><!-- GREEK CAPITAL LETTER THETA -->
      <map code="0x399" name="Iota"/><!-- GREEK CAPITAL LETTER IOTA -->
      <map code="0x39a" name="Kappa"/><!-- GREEK CAPITAL LETTER KAPPA -->
      <map code="0x39b" name="Lambda"/><!-- GREEK CAPITAL LETTER LAMDA -->
      <map code="0x39c" name="Mu"/><!-- GREEK CAPITAL LETTER MU -->
      <map code="0x39d" name="Nu"/><!-- GREEK CAPITAL LETTER NU -->
      <map code="0x39e" name="Xi"/><!-- GREEK CAPITAL LETTER XI -->
      <map code="0x39f" name="Omicron"/><!-- GREEK CAPITAL LETTER OMICRON -->
      <map code="0x3a0" name="Pi"/><!-- GREEK CAPITAL LETTER PI -->
      <map code="0x3a1" name="Rho"/><!-- GREEK CAPITAL LETTER RHO -->
      <map code="0x3a3" name="Sigma"/><!-- GREEK CAPITAL LETTER SIGMA -->
      <map code="0x3a4" name="Tau"/><!-- GREEK CAPITAL LETTER TAU -->
      <map code="0x3a5" name="Upsilon"/><!-- GREEK CAPITAL LETTER UPSILON -->
      <map code="0x3a6" name="Phi"/><!-- GREEK CAPITAL LETTER PHI -->
      <map code="0x3a7" name="Chi"/><!-- GREEK CAPITAL LETTER CHI -->
      <map code="0x3a8" name="Psi"/><!-- GREEK CAPITAL LETTER PSI -->
      <map code="0x3a9" name="uni03A9"/><!-- GREEK CAPITAL LETTER OMEGA -->
      <map code="0x3aa" name="Iotadieresis"/><!-- GREEK CAPITAL LETTER IOTA WITH DIALYTIKA -->
      <map code="0x3ab" name="Upsilondieresis"/><!-- GREEK CAPITAL LETTER UPSILON WITH DIALYTIKA -->
      <map code="0x3ac" name="alphatonos"/><!-- GREEK SMALL LETTER ALPHA WITH TONOS -->
      <map code="0x3ad" name="epsilontonos"/><!-- GREEK SMALL LETTER EPSILON WITH TONOS -->
      <map code="0x3ae" name="etatonos"/><!-- GREEK SMALL LETTER ETA WITH TONOS -->
      <map code="0x3af" name="iotatonos"/><!-- GREEK SMALL LETTER IOTA WITH TONOS -->
      <map code="0x3b0" name="upsilondieresistonos"/><!-- GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND TONOS -->
      <map code="0x3b1" name="alpha"/><!-- GREEK SMALL LETTER ALPHA -->
      <map code="0x3b2" name="beta"/><!-- GREEK SMALL LETTER BETA -->
      <map code="0x3b3" name="gamma"/><!-- GREEK SMALL LETTER GAMMA -->
      <map code="0x3b4" name="delta"/><!-- GREEK SMALL LETTER DELTA -->
      <map code="0x3b5" name="epsilon"/><!-- GREEK SMALL LETTER EPSILON -->
      <map code="0x3b6" name="zeta"/><!-- GREEK SMALL LETTER ZETA -->
      <map code="0x3b7" name="eta"/><!-- GREEK SMALL LETTER ETA -->
      <map code="0x3b8" name="theta"/><!-- GREEK SMALL LETTER THETA -->
      <map code="0x3b9" name="iota"/><!-- GREEK SMALL LETTER IOTA -->
      <map code="0x3ba" name="kappa"/><!-- GREEK SMALL LETTER KAPPA -->
      <map code="0x3bb" name="lambda"/><!-- GREEK SMALL LETTER LAMDA -->
      <map code="0x3bc" name="uni03BC"/><!-- GREEK SMALL LETTER MU -->
      <map code="0x3bd" name="nu"/><!-- GREEK SMALL LETTER NU -->
      <map code="0x3be" name="xi"/><!-- GREEK SMALL LETTER XI -->
      <map code="0x3bf" name="omicron"/><!-- GREEK SMALL LETTER OMICRON -->
      <map code="0x3c0" name="pi"/><!-- GREEK SMALL LETTER PI -->
      <map code="0x3c1" name="rho"/><!-- GREEK SMALL LETTER RHO -->
      <map code="0x3c2" name="sigma1"/><!-- GREEK SMALL LETTER FINAL SIGMA -->
      <map code="0x3c3" name="sigma"/><!-- GREEK SMALL LETTER SIGMA -->
      <map code="0x3c4" name="tau"/><!-- GREEK SMALL LETTER TAU -->
      <map code="0x3c5" name="upsilon"/><!-- GREEK SMALL LETTER UPSILON -->
      <map code="0x3c6" name="phi"/><!-- GREEK SMALL LETTER PHI -->
      <map code="0x3c7" name="chi"/><!-- GREEK SMALL LETTER CHI -->
      <map code="0x3c8" name="psi"/><!-- GREEK SMALL LETTER PSI -->
      <map code="0x3c9" name="omega"/><!-- GREEK SMALL LETTER OMEGA -->
      <map code="0x3ca" name="iotadieresis"/><!-- GREEK SMALL LETTER IOTA WITH DIALYTIKA -->
      <map code="0x3cb" name="upsilondieresis"/><!-- GREEK SMALL LETTER UPSILON WITH DIALYTIKA -->
      <map code="0x3cc" name="omicrontonos"/><!-- GREEK SMALL LETTER OMICRON WITH TONOS -->
      <map code="0x3cd" name="upsilontonos"/><!-- GREEK SMALL LETTER UPSILON WITH TONOS -->
      <map code="0x3ce" name="omegatonos"/><!-- GREEK SMALL LETTER OMEGA WITH TONOS -->
      <map code="0x3d1" name="theta1"/><!-- GREEK THETA SYMBOL -->
      <map code="0x3d2" name="Upsilon1"/><!-- GREEK UPSILON WITH HOOK SYMBOL -->
      <map code="0x3d6" name="omega1"/><!-- GREEK PI SYMBOL -->
      <map code="0x400" name="uni0400"/><!-- CYRILLIC CAPITAL LETTER IE WITH GRAVE -->
      <map code="0x401" name="uni0401"/><!-- CYRILLIC CAPITAL LETTER IO -->
      <map code="0x402" name="uni0402"/><!-- CYRILLIC CAPITAL LETTER DJE -->
      <map code="0x403" name="uni0403"/><!-- CYRILLIC CAPITAL LETTER GJE -->
      <map code="0x404" name="uni0404"/><!-- CYRILLIC CAPITAL LETTER UKRAINIAN IE -->
      <map code="0x405" name="uni0405"/><!-- CYRILLIC CAPITAL LETTER DZE -->
      <map code="0x406" name="uni0406"/><!-- CYRILLIC CAPITAL LETTER BYELORUSSIAN-UKRAINIAN I -->
      <map code="0x407" name="uni0407"/><!-- CYRILLIC CAPITAL LETTER YI -->
      <map code="0x408" name="uni0408"/><!-- CYRILLIC CAPITAL LETTER JE -->
      <map code="0x409" name="uni0409"/><!-- CYRILLIC CAPITAL LETTER LJE -->
      <map code="0x40a" name="uni040A"/><!-- CYRILLIC CAPITAL LETTER NJE -->
      <map code="0x40b" name="uni040B"/><!-- CYRILLIC CAPITAL LETTER TSHE -->
      <map code="0x40c" name="uni040C"/><!-- CYRILLIC CAPITAL LETTER KJE -->
      <map code="0x40d" name="uni040D"/><!-- CYRILLIC CAPITAL LETTER I WITH GRAVE -->
      <map code="0x40e" name="uni040E"/><!-- CYRILLIC CAPITAL LETTER SHORT U -->
      <map code="0x40f" name="uni040F"/><!-- CYRILLIC CAPITAL LETTER DZHE -->
      <map code="0x410" name="uni0410"/><!-- CYRILLIC CAPITAL LETTER A -->
      <map code="0x411" name="uni0411"/><!-- CYRILLIC CAPITAL LETTER BE -->
      <map code="0x412" name="uni0412"/><!-- CYRILLIC CAPITAL LETTER VE -->
      <map code="0x413" name="uni0413"/><!-- CYRILLIC CAPITAL LETTER GHE -->
      <map code="0x414" name="uni0414"/><!-- CYRILLIC CAPITAL LETTER DE -->
      <map code="0x415" name="uni0415"/><!-- CYRILLIC CAPITAL LETTER IE -->
      <map code="0x416" name="uni0416"/><!-- CYRILLIC CAPITAL LETTER ZHE -->
      <map code="0x417" name="uni0417"/><!-- CYRILLIC CAPITAL LETTER ZE -->
      <map code="0x418" name="uni0418"/><!-- CYRILLIC CAPITAL LETTER I -->
      <map code="0x419" name="uni0419"/><!-- CYRILLIC CAPITAL LETTER SHORT I -->
      <map code="0x41a" name="uni041A"/><!-- CYRILLIC CAPITAL LETTER KA -->
      <map code="0x41b" name="uni041B"/><!-- CYRILLIC CAPITAL LETTER EL -->
      <map code="0x41c" name="uni041C"/><!-- CYRILLIC CAPITAL LETTER EM -->
      <map code="0x41d" name="uni041D"/><!-- CYRILLIC CAPITAL LETTER EN -->
      <map code="0x41e" name="uni041E"/><!-- CYRILLIC CAPITAL LETTER O -->
      <map code="0x41f" name="uni041F"/><!-- CYRILLIC CAPITAL LETTER PE -->
      <map code="0x420" name="uni0420"/><!-- CYRILLIC CAPITAL LETTER ER -->
      <map code="0x421" name="uni0421"/><!-- CYRILLIC CAPITAL LETTER ES -->
      <map code="0x422" name="uni0422"/><!-- CYRILLIC CAPITAL LETTER TE -->
      <map code="0x423" name="uni0423"/><!-- CYRILLIC CAPITAL LETTER U -->
      <map code="0x424" name="uni0424"/><!-- CYRILLIC CAPITAL LETTER EF -->
      <map code="0x425" name="uni0425"/><!-- CYRILLIC CAPITAL LETTER HA -->
      <map code="0x426" name="uni0426"/><!-- CYRILLIC CAPITAL LETTER TSE -->
      <map code="0x427" name="uni0427"/><!-- CYRILLIC CAPITAL LETTER CHE -->
      <map code="0x428" name="uni0428"/><!-- CYRILLIC CAPITAL LETTER SHA -->
      <map code="0x429" name="uni0429"/><!-- CYRILLIC CAPITAL LETTER SHCHA -->
      <map code="0x42a" name="uni042A"/><!-- CYRILLIC CAPITAL LETTER HARD SIGN -->
      <map code="0x42b" name="uni042B"/><!-- CYRILLIC CAPITAL LETTER YERU -->
      <map code="0x42c" name="uni042C"/><!-- CYRILLIC CAPITAL LETTER SOFT SIGN -->
      <map code="0x42d" name="uni042D"/><!-- CYRILLIC CAPITAL LETTER E -->
      <map code="0x42e" name="uni042E"/><!-- CYRILLIC CAPITAL LETTER YU -->
      <map code="0x42f" name="uni042F"/><!-- CYRILLIC CAPITAL LETTER YA -->
      <map code="0x430" name="uni0430"/><!-- CYRILLIC SMALL LETTER A -->
      <map code="0x431" name="uni0431"/><!-- CYRILLIC SMALL LETTER BE -->
      <map code="0x432" name="uni0432"/><!-- CYRILLIC SMALL LETTER VE -->
      <map code="0x433" name="uni0433"/><!-- CYRILLIC SMALL LETTER GHE -->
      <map code="0x434" name="uni0434"/><!-- CYRILLIC SMALL LETTER DE -->
      <map code="0x435" name="uni0435"/><!-- CYRILLIC SMALL LETTER IE -->
      <map code="0x436" name="uni0436"/><!-- CYRILLIC SMALL LETTER ZHE -->
      <map code="0x437" name="uni0437"/><!-- CYRILLIC SMALL LETTER ZE -->
      <map code="0x438" name="uni0438"/><!-- CYRILLIC SMALL LETTER I -->
      <map code="0x439" name="uni0439"/><!-- CYRILLIC SMALL LETTER SHORT I -->
      <map code="0x43a" name="uni043A"/><!-- CYRILLIC SMALL LETTER KA -->
      <map code="0x43b" name="uni043B"/><!-- CYRILLIC SMALL LETTER EL -->
      <map code="0x43c" name="uni043C"/><!-- CYRILLIC SMALL LETTER EM -->
      <map code="0x43d" name="uni043D"/><!-- CYRILLIC SMALL LETTER EN -->
      <map code="0x43e" name="uni043E"/><!-- CYRILLIC SMALL LETTER O -->
      <map code="0x43f" name="uni043F"/><!-- CYRILLIC SMALL LETTER PE -->
      <map code="0x440" name="uni0440"/><!-- CYRILLIC SMALL LETTER ER -->
      <map code="0x441" name="uni0441"/><!-- CYRILLIC SMALL LETTER ES -->
      <map code="0x442" name="uni0442"/><!-- CYRILLIC SMALL LETTER TE -->
      <map code="0x443" name="uni0443"/><!-- CYRILLIC SMALL LETTER U -->
      <map code="0x444" name="uni0444"/><!-- CYRILLIC SMALL LETTER EF -->
      <map code="0x445" name="uni0445"/><!-- CYRILLIC SMALL LETTER HA -->
      <map code="0x446" name="uni0446"/><!-- CYRILLIC SMALL LETTER TSE -->
      <map code="0x447" name="uni0447"/><!-- CYRILLIC SMALL LETTER CHE -->
      <map code="0x448" name="uni0448"/><!-- CYRILLIC SMALL LETTER SHA -->
      <map code="0x449" name="uni0449"/><!-- CYRILLIC SMALL LETTER SHCHA -->
      <map code="0x44a" name="uni044A"/><!-- CYRILLIC SMALL LETTER HARD SIGN -->
      <map code="0x44b" name="uni044B"/><!-- CYRILLIC SMALL LETTER YERU -->
      <map code="0x44c" name="uni044C"/><!-- CYRILLIC SMALL LETTER SOFT SIGN -->
      <map code="0x44d" name="uni044D"/><!-- CYRILLIC SMALL LETTER E -->
      <map code="0x44e" name="uni044E"/><!-- CYRILLIC SMALL LETTER YU -->
      <map code="0x44f" name="uni044F"/><!-- CYRILLIC SMALL LETTER YA -->
      <map code="0x450" name="uni0450"/><!-- CYRILLIC SMALL LETTER IE WITH GRAVE -->
      <map code="0x451" name="uni0451"/><!-- CYRILLIC SMALL LETTER IO -->
      <map code="0x452" name="uni0452"/><!-- CYRILLIC SMALL LETTER DJE -->
      <map code="0x453" name="uni0453"/><!-- CYRILLIC SMALL LETTER GJE -->
      <map code="0x454" name="uni0454"/><!-- CYRILLIC SMALL LETTER UKRAINIAN IE -->
      <map code="0x455" name="uni0455"/><!-- CYRILLIC SMALL LETTER DZE -->
      <map code="0x456" name="uni0456"/><!-- CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I -->
      <map code="0x457" name="uni0457"/><!-- CYRILLIC SMALL LETTER YI -->
      <map code="0x458" name="uni0458"/><!-- CYRILLIC SMALL LETTER JE -->
      <map code="0x459" name="uni0459"/><!-- CYRILLIC SMALL LETTER LJE -->
      <map code="0x45a" name="uni045A"/><!-- CYRILLIC SMALL LETTER NJE -->
      <map code="0x45b" name="uni045B"/><!-- CYRILLIC SMALL LETTER TSHE -->
      <map code="0x45c" name="uni045C"/><!-- CYRILLIC SMALL LETTER KJE -->
      <map code="0x45d" name="uni045D"/><!-- CYRILLIC SMALL LETTER I WITH GRAVE -->
      <map code="0x45e" name="uni045E"/><!-- CYRILLIC SMALL LETTER SHORT U -->
      <map code="0x45f" name="uni045F"/><!-- CYRILLIC SMALL LETTER DZHE -->
      <map code="0x460" name="uni0460"/><!-- CYRILLIC CAPITAL LETTER OMEGA -->
      <map code="0x461" name="uni0461"/><!-- CYRILLIC SMALL LETTER OMEGA -->
      <map code="0x462" name="uni0462"/><!-- CYRILLIC CAPITAL LETTER YAT -->
      <map code="0x463" name="uni0463"/><!-- CYRILLIC SMALL LETTER YAT -->
      <map code="0x464" name="uni0464"/><!-- CYRILLIC CAPITAL LETTER IOTIFIED E -->
      <map code="0x465" name="uni0465"/><!-- CYRILLIC SMALL LETTER IOTIFIED E -->
      <map code="0x466" name="uni0466"/><!-- CYRILLIC CAPITAL LETTER LITTLE YUS -->
      <map code="0x467" name="uni0467"/><!-- CYRILLIC SMALL LETTER LITTLE YUS -->
      <map code="0x468" name="uni0468"/><!-- CYRILLIC CAPITAL LETTER IOTIFIED LITTLE YUS -->
      <map code="0x469" name="uni0469"/><!-- CYRILLIC SMALL LETTER IOTIFIED LITTLE YUS -->
      <map code="0x46a" name="uni046A"/><!-- CYRILLIC CAPITAL LETTER BIG YUS -->
      <map code="0x46b" name="uni046B"/><!-- CYRILLIC SMALL LETTER BIG YUS -->
      <map code="0x46c" name="uni046C"/><!-- CYRILLIC CAPITAL LETTER IOTIFIED BIG YUS -->
      <map code="0x46d" name="uni046D"/><!-- CYRILLIC SMALL LETTER IOTIFIED BIG YUS -->
      <map code="0x46e" name="uni046E"/><!-- CYRILLIC CAPITAL LETTER KSI -->
      <map code="0x46f" name="uni046F"/><!-- CYRILLIC SMALL LETTER KSI -->
      <map code="0x470" name="uni0470"/><!-- CYRILLIC CAPITAL LETTER PSI -->
      <map code="0x471" name="uni0471"/><!-- CYRILLIC SMALL LETTER PSI -->
      <map code="0x472" name="uni0472"/><!-- CYRILLIC CAPITAL LETTER FITA -->
      <map code="0x473" name="uni0473"/><!-- CYRILLIC SMALL LETTER FITA -->
      <map code="0x474" name="uni0474"/><!-- CYRILLIC CAPITAL LETTER IZHITSA -->
      <map code="0x475" name="uni0475"/><!-- CYRILLIC SMALL LETTER IZHITSA -->
      <map code="0x476" name="uni0476"/><!-- CYRILLIC CAPITAL LETTER IZHITSA WITH DOUBLE GRAVE ACCENT -->
      <map code="0x477" name="uni0477"/><!-- CYRILLIC SMALL LETTER IZHITSA WITH DOUBLE GRAVE ACCENT -->
      <map code="0x478" name="uni0478"/><!-- CYRILLIC CAPITAL LETTER UK -->
      <map code="0x479" name="uni0479"/><!-- CYRILLIC SMALL LETTER UK -->
      <map code="0x47a" name="uni047A"/><!-- CYRILLIC CAPITAL LETTER ROUND OMEGA -->
      <map code="0x47b" name="uni047B"/><!-- CYRILLIC SMALL LETTER ROUND OMEGA -->
      <map code="0x47c" name="uni047C"/><!-- CYRILLIC CAPITAL LETTER OMEGA WITH TITLO -->
      <map code="0x47d" name="uni047D"/><!-- CYRILLIC SMALL LETTER OMEGA WITH TITLO -->
      <map code="0x47e" name="uni047E"/><!-- CYRILLIC CAPITAL LETTER OT -->
      <map code="0x47f" name="uni047F"/><!-- CYRILLIC SMALL LETTER OT -->
      <map code="0x480" name="uni0480"/><!-- CYRILLIC CAPITAL LETTER KOPPA -->
      <map code="0x481" name="uni0481"/><!-- CYRILLIC SMALL LETTER KOPPA -->
      <map code="0x482" name="uni0482"/><!-- CYRILLIC THOUSANDS SIGN -->
      <map code="0x483" name="uni0483"/><!-- COMBINING CYRILLIC TITLO -->
      <map code="0x484" name="uni0484"/><!-- COMBINING CYRILLIC PALATALIZATION -->
      <map code="0x485" name="uni0485"/><!-- COMBINING CYRILLIC DASIA PNEUMATA -->
      <map code="0x486" name="uni0486"/><!-- COMBINING CYRILLIC PSILI PNEUMATA -->
      <map code="0x488" name="uni0488"/><!-- COMBINING CYRILLIC HUNDRED THOUSANDS SIGN -->
      <map code="0x489" name="uni0489"/><!-- COMBINING CYRILLIC MILLIONS SIGN -->
      <map code="0x48a" name="uni048A"/><!-- CYRILLIC CAPITAL LETTER SHORT I WITH TAIL -->
      <map code="0x48b" name="uni048B"/><!-- CYRILLIC SMALL LETTER SHORT I WITH TAIL -->
      <map code="0x48c" name="uni048C"/><!-- CYRILLIC CAPITAL LETTER SEMISOFT SIGN -->
      <map code="0x48d" name="uni048D"/><!-- CYRILLIC SMALL LETTER SEMISOFT SIGN -->
      <map code="0x48e" name="uni048E"/><!-- CYRILLIC CAPITAL LETTER ER WITH TICK -->
      <map code="0x48f" name="uni048F"/><!-- CYRILLIC SMALL LETTER ER WITH TICK -->
      <map code="0x490" name="uni0490"/><!-- CYRILLIC CAPITAL LETTER GHE WITH UPTURN -->
      <map code="0x491" name="uni0491"/><!-- CYRILLIC SMALL LETTER GHE WITH UPTURN -->
      <map code="0x492" name="uni0492"/><!-- CYRILLIC CAPITAL LETTER GHE WITH STROKE -->
      <map code="0x493" name="uni0493"/><!-- CYRILLIC SMALL LETTER GHE WITH STROKE -->
      <map code="0x494" name="uni0494"/><!-- CYRILLIC CAPITAL LETTER GHE WITH MIDDLE HOOK -->
      <map code="0x495" name="uni0495"/><!-- CYRILLIC SMALL LETTER GHE WITH MIDDLE HOOK -->
      <map code="0x496" name="uni0496"/><!-- CYRILLIC CAPITAL LETTER ZHE WITH DESCENDER -->
      <map code="0x497" name="uni0497"/><!-- CYRILLIC SMALL LETTER ZHE WITH DESCENDER -->
      <map code="0x498" name="uni0498"/><!-- CYRILLIC CAPITAL LETTER ZE WITH DESCENDER -->
      <map code="0x499" name="uni0499"/><!-- CYRILLIC SMALL LETTER ZE WITH DESCENDER -->
      <map code="0x49a" name="uni049A"/><!-- CYRILLIC CAPITAL LETTER KA WITH DESCENDER -->
      <map code="0x49b" name="uni049B"/><!-- CYRILLIC SMALL LETTER KA WITH DESCENDER -->
      <map code="0x49c" name="uni049C"/><!-- CYRILLIC CAPITAL LETTER KA WITH VERTICAL STROKE -->
      <map code="0x49d" name="uni049D"/><!-- CYRILLIC SMALL LETTER KA WITH VERTICAL STROKE -->
      <map code="0x49e" name="uni049E"/><!-- CYRILLIC CAPITAL LETTER KA WITH STROKE -->
      <map code="0x49f" name="uni049F"/><!-- CYRILLIC SMALL LETTER KA WITH STROKE -->
      <map code="0x4a0" name="uni04A0"/><!-- CYRILLIC CAPITAL LETTER BASHKIR KA -->
      <map code="0x4a1" name="uni04A1"/><!-- CYRILLIC SMALL LETTER BASHKIR KA -->
      <map code="0x4a2" name="uni04A2"/><!-- CYRILLIC CAPITAL LETTER EN WITH DESCENDER -->
      <map code="0x4a3" name="uni04A3"/><!-- CYRILLIC SMALL LETTER EN WITH DESCENDER -->
      <map code="0x4a4" name="uni04A4"/><!-- CYRILLIC CAPITAL LIGATURE EN GHE -->
      <map code="0x4a5" name="uni04A5"/><!-- CYRILLIC SMALL LIGATURE EN GHE -->
      <map code="0x4a6" name="uni04A6"/><!-- CYRILLIC CAPITAL LETTER PE WITH MIDDLE HOOK -->
      <map code="0x4a7" name="uni04A7"/><!-- CYRILLIC SMALL LETTER PE WITH MIDDLE HOOK -->
      <map code="0x4a8" name="uni04A8"/><!-- CYRILLIC CAPITAL LETTER ABKHASIAN HA -->
      <map code="0x4a9" name="uni04A9"/><!-- CYRILLIC SMALL LETTER ABKHASIAN HA -->
      <map code="0x4aa" name="uni04AA"/><!-- CYRILLIC CAPITAL LETTER ES WITH DESCENDER -->
      <map code="0x4ab" name="uni04AB"/><!-- CYRILLIC SMALL LETTER ES WITH DESCENDER -->
      <map code="0x4ac" name="uni04AC"/><!-- CYRILLIC CAPITAL LETTER TE WITH DESCENDER -->
      <map code="0x4ad" name="uni04AD"/><!-- CYRILLIC SMALL LETTER TE WITH DESCENDER -->
      <map code="0x4ae" name="uni04AE"/><!-- CYRILLIC CAPITAL LETTER STRAIGHT U -->
      <map code="0x4af" name="uni04AF"/><!-- CYRILLIC SMALL LETTER STRAIGHT U -->
      <map code="0x4b0" name="uni04B0"/><!-- CYRILLIC CAPITAL LETTER STRAIGHT U WITH STROKE -->
      <map code="0x4b1" name="uni04B1"/><!-- CYRILLIC SMALL LETTER STRAIGHT U WITH STROKE -->
      <map code="0x4b2" name="uni04B2"/><!-- CYRILLIC CAPITAL LETTER HA WITH DESCENDER -->
      <map code="0x4b3" name="uni04B3"/><!-- CYRILLIC SMALL LETTER HA WITH DESCENDER -->
      <map code="0x4b4" name="uni04B4"/><!-- CYRILLIC CAPITAL LIGATURE TE TSE -->
      <map code="0x4b5" name="uni04B5"/><!-- CYRILLIC SMALL LIGATURE TE TSE -->
      <map code="0x4b6" name="uni04B6"/><!-- CYRILLIC CAPITAL LETTER CHE WITH DESCENDER -->
      <map code="0x4b7" name="uni04B7"/><!-- CYRILLIC SMALL LETTER CHE WITH DESCENDER -->
      <map code="0x4b8" name="uni04B8"/><!-- CYRILLIC CAPITAL LETTER CHE WITH VERTICAL STROKE -->
      <map code="0x4b9" name="uni04B9"/><!-- CYRILLIC SMALL LETTER CHE WITH VERTICAL STROKE -->
      <map code="0x4ba" name="uni04BA"/><!-- CYRILLIC CAPITAL LETTER SHHA -->
      <map code="0x4bb" name="uni04BB"/><!-- CYRILLIC SMALL LETTER SHHA -->
      <map code="0x4bc" name="uni04BC"/><!-- CYRILLIC CAPITAL LETTER ABKHASIAN CHE -->
      <map code="0x4bd" name="uni04BD"/><!-- CYRILLIC SMALL LETTER ABKHASIAN CHE -->
      <map code="0x4be" name="uni04BE"/><!-- CYRILLIC CAPITAL LETTER ABKHASIAN CHE WITH DESCENDER -->
      <map code="0x4bf" name="uni04BF"/><!-- CYRILLIC SMALL LETTER ABKHASIAN CHE WITH DESCENDER -->
      <map code="0x4c0" name="uni04C0"/><!-- CYRILLIC LETTER PALOCHKA -->
      <map code="0x4c1" name="uni04C1"/><!-- CYRILLIC CAPITAL LETTER ZHE WITH BREVE -->
      <map code="0x4c2" name="uni04C2"/><!-- CYRILLIC SMALL LETTER ZHE WITH BREVE -->
      <map code="0x4c3" name="uni04C3"/><!-- CYRILLIC CAPITAL LETTER KA WITH HOOK -->
      <map code="0x4c4" name="uni04C4"/><!-- CYRILLIC SMALL LETTER KA WITH HOOK -->
      <map code="0x4c5" name="uni04C5"/><!-- CYRILLIC CAPITAL LETTER EL WITH TAIL -->
      <map code="0x4c6" name="uni04C6"/><!-- CYRILLIC SMALL LETTER EL WITH TAIL -->
      <map code="0x4c7" name="uni04C7"/><!-- CYRILLIC CAPITAL LETTER EN WITH HOOK -->
      <map code="0x4c8" name="uni04C8"/><!-- CYRILLIC SMALL LETTER EN WITH HOOK -->
      <map code="0x4c9" name="uni04C9"/><!-- CYRILLIC CAPITAL LETTER EN WITH TAIL -->
      <map code="0x4ca" name="uni04CA"/><!-- CYRILLIC SMALL LETTER EN WITH TAIL -->
      <map code="0x4cb" name="uni04CB"/><!-- CYRILLIC CAPITAL LETTER KHAKASSIAN CHE -->
      <map code="0x4cc" name="uni04CC"/><!-- CYRILLIC SMALL LETTER KHAKASSIAN CHE -->
      <map code="0x4cd" name="uni04CD"/><!-- CYRILLIC CAPITAL LETTER EM WITH TAIL -->
      <map code="0x4ce" name="uni04CE"/><!-- CYRILLIC SMALL LETTER EM WITH TAIL -->
      <map code="0x4cf" name="uni04CF"/><!-- CYRILLIC SMALL LETTER PALOCHKA -->
      <map code="0x4d0" name="uni04D0"/><!-- CYRILLIC CAPITAL LETTER A WITH BREVE -->
      <map code="0x4d1" name="uni04D1"/><!-- CYRILLIC SMALL LETTER A WITH BREVE -->
      <map code="0x4d2" name="uni04D2"/><!-- CYRILLIC CAPITAL LETTER A WITH DIAERESIS -->
      <map code="0x4d3" name="uni04D3"/><!-- CYRILLIC SMALL LETTER A WITH DIAERESIS -->
      <map code="0x4d4" name="uni04D4"/><!-- CYRILLIC CAPITAL LIGATURE A IE -->
      <map code="0x4d5" name="uni04D5"/><!-- CYRILLIC SMALL LIGATURE A IE -->
      <map code="0x4d6" name="uni04D6"/><!-- CYRILLIC CAPITAL LETTER IE WITH BREVE -->
      <map code="0x4d7" name="uni04D7"/><!-- CYRILLIC SMALL LETTER IE WITH BREVE -->
      <map code="0x4d8" name="uni04D8"/><!-- CYRILLIC CAPITAL LETTER SCHWA -->
      <map code="0x4d9" name="uni04D9"/><!-- CYRILLIC SMALL LETTER SCHWA -->
      <map code="0x4da" name="uni04DA"/><!-- CYRILLIC CAPITAL LETTER SCHWA WITH DIAERESIS -->
      <map code="0x4db" name="uni04DB"/><!-- CYRILLIC SMALL LETTER SCHWA WITH DIAERESIS -->
      <map code="0x4dc" name="uni04DC"/><!-- CYRILLIC CAPITAL LETTER ZHE WITH DIAERESIS -->
      <map code="0x4dd" name="uni04DD"/><!-- CYRILLIC SMALL LETTER ZHE WITH DIAERESIS -->
      <map code="0x4de" name="uni04DE"/><!-- CYRILLIC CAPITAL LETTER ZE WITH DIAERESIS -->
      <map code="0x4df" name="uni04DF"/><!-- CYRILLIC SMALL LETTER ZE WITH DIAERESIS -->
      <map code="0x4e0" name="uni04E0"/><!-- CYRILLIC CAPITAL LETTER ABKHASIAN DZE -->
      <map code="0x4e1" name="uni04E1"/><!-- CYRILLIC SMALL LETTER ABKHASIAN DZE -->
      <map code="0x4e2" name="uni04E2"/><!-- CYRILLIC CAPITAL LETTER I WITH MACRON -->
      <map code="0x4e3" name="uni04E3"/><!-- CYRILLIC SMALL LETTER I WITH MACRON -->
      <map code="0x4e4" name="uni04E4"/><!-- CYRILLIC CAPITAL LETTER I WITH DIAERESIS -->
      <map code="0x4e5" name="uni04E5"/><!-- CYRILLIC SMALL LETTER I WITH DIAERESIS -->
      <map code="0x4e6" name="uni04E6"/><!-- CYRILLIC CAPITAL LETTER O WITH DIAERESIS -->
      <map code="0x4e7" name="uni04E7"/><!-- CYRILLIC SMALL LETTER O WITH DIAERESIS -->
      <map code="0x4e8" name="uni04E8"/><!-- CYRILLIC CAPITAL LETTER BARRED O -->
      <map code="0x4e9" name="uni04E9"/><!-- CYRILLIC SMALL LETTER BARRED O -->
      <map code="0x4ea" name="uni04EA"/><!-- CYRILLIC CAPITAL LETTER BARRED O WITH DIAERESIS -->
      <map code="0x4eb" name="uni04EB"/><!-- CYRILLIC SMALL LETTER BARRED O WITH DIAERESIS -->
      <map code="0x4ec" name="uni04EC"/><!-- CYRILLIC CAPITAL LETTER E WITH DIAERESIS -->
      <map code="0x4ed" name="uni04ED"/><!-- CYRILLIC SMALL LETTER E WITH DIAERESIS -->
      <map code="0x4ee" name="uni04EE"/><!-- CYRILLIC CAPITAL LETTER U WITH MACRON -->
      <map code="0x4ef" name="uni04EF"/><!-- CYRILLIC SMALL LETTER U WITH MACRON -->
      <map code="0x4f0" name="uni04F0"/><!-- CYRILLIC CAPITAL LETTER U WITH DIAERESIS -->
      <map code="0x4f1" name="uni04F1"/><!-- CYRILLIC SMALL LETTER U WITH DIAERESIS -->
      <map code="0x4f2" name="uni04F2"/><!-- CYRILLIC CAPITAL LETTER U WITH DOUBLE ACUTE -->
      <map code="0x4f3" name="uni04F3"/><!-- CYRILLIC SMALL LETTER U WITH DOUBLE ACUTE -->
      <map code="0x4f4" name="uni04F4"/><!-- CYRILLIC CAPITAL LETTER CHE WITH DIAERESIS -->
      <map code="0x4f5" name="uni04F5"/><!-- CYRILLIC SMALL LETTER CHE WITH DIAERESIS -->
      <map code="0x4f6" name="uni04F6"/><!-- CYRILLIC CAPITAL LETTER GHE WITH DESCENDER -->
      <map code="0x4f7" name="uni04F7"/><!-- CYRILLIC SMALL LETTER GHE WITH DESCENDER -->
      <map code="0x4f8" name="uni04F8"/><!-- CYRILLIC CAPITAL LETTER YERU WITH DIAERESIS -->
      <map code="0x4f9" name="uni04F9"/><!-- CYRILLIC SMALL LETTER YERU WITH DIAERESIS -->
      <map code="0x4fa" name="uni04FA"/><!-- CYRILLIC CAPITAL LETTER GHE WITH STROKE AND HOOK -->
      <map code="0x4fb" name="uni04FB"/><!-- CYRILLIC SMALL LETTER GHE WITH STROKE AND HOOK -->
      <map code="0x4fc" name="uni04FC"/><!-- CYRILLIC CAPITAL LETTER HA WITH HOOK -->
      <map code="0x4fd" name="uni04FD"/><!-- CYRILLIC SMALL LETTER HA WITH HOOK -->
      <map code="0x4fe" name="uni04FE"/><!-- CYRILLIC CAPITAL LETTER HA WITH STROKE -->
      <map code="0x4ff" name="uni04FF"/><!-- CYRILLIC SMALL LETTER HA WITH STROKE -->
      <map code="0x500" name="uni0500"/><!-- CYRILLIC CAPITAL LETTER KOMI DE -->
      <map code="0x501" name="uni0501"/><!-- CYRILLIC SMALL LETTER KOMI DE -->
      <map code="0x502" name="uni0502"/><!-- CYRILLIC CAPITAL LETTER KOMI DJE -->
      <map code="0x503" name="uni0503"/><!-- CYRILLIC SMALL LETTER KOMI DJE -->
      <map code="0x504" name="uni0504"/><!-- CYRILLIC CAPITAL LETTER KOMI ZJE -->
      <map code="0x505" name="uni0505"/><!-- CYRILLIC SMALL LETTER KOMI ZJE -->
      <map code="0x506" name="uni0506"/><!-- CYRILLIC CAPITAL LETTER KOMI DZJE -->
      <map code="0x507" name="uni0507"/><!-- CYRILLIC SMALL LETTER KOMI DZJE -->
      <map code="0x508" name="uni0508"/><!-- CYRILLIC CAPITAL LETTER KOMI LJE -->
      <map code="0x509" name="uni0509"/><!-- CYRILLIC SMALL LETTER KOMI LJE -->
      <map code="0x50a" name="uni050A"/><!-- CYRILLIC CAPITAL LETTER KOMI NJE -->
      <map code="0x50b" name="uni050B"/><!-- CYRILLIC SMALL LETTER KOMI NJE -->
      <map code="0x50c" name="uni050C"/><!-- CYRILLIC CAPITAL LETTER KOMI SJE -->
      <map code="0x50d" name="uni050D"/><!-- CYRILLIC SMALL LETTER KOMI SJE -->
      <map code="0x50e" name="uni050E"/><!-- CYRILLIC CAPITAL LETTER KOMI TJE -->
      <map code="0x50f" name="uni050F"/><!-- CYRILLIC SMALL LETTER KOMI TJE -->
      <map code="0x510" name="uni0510"/><!-- CYRILLIC CAPITAL LETTER REVERSED ZE -->
      <map code="0x511" name="uni0511"/><!-- CYRILLIC SMALL LETTER REVERSED ZE -->
      <map code="0x512" name="uni0512"/><!-- CYRILLIC CAPITAL LETTER EL WITH HOOK -->
      <map code="0x513" name="uni0513"/><!-- CYRILLIC SMALL LETTER EL WITH HOOK -->
      <map code="0x1e00" name="uni1E00"/><!-- LATIN CAPITAL LETTER A WITH RING BELOW -->
      <map code="0x1e01" name="uni1E01"/><!-- LATIN SMALL LETTER A WITH RING BELOW -->
      <map code="0x1e3e" name="uni1E3E"/><!-- LATIN CAPITAL LETTER M WITH ACUTE -->
      <map code="0x1e3f" name="uni1E3F"/><!-- LATIN SMALL LETTER M WITH ACUTE -->
      <map code="0x1e80" name="Wgrave"/><!-- LATIN CAPITAL LETTER W WITH GRAVE -->
      <map code="0x1e81" name="wgrave"/><!-- LATIN SMALL LETTER W WITH GRAVE -->
      <map code="0x1e82" name="Wacute"/><!-- LATIN CAPITAL LETTER W WITH ACUTE -->
      <map code="0x1e83" name="wacute"/><!-- LATIN SMALL LETTER W WITH ACUTE -->
      <map code="0x1e84" name="Wdieresis"/><!-- LATIN CAPITAL LETTER W WITH DIAERESIS -->
      <map code="0x1e85" name="wdieresis"/><!-- LATIN SMALL LETTER W WITH DIAERESIS -->
      <map code="0x1ea0" name="uni1EA0"/><!-- LATIN CAPITAL LETTER A WITH DOT BELOW -->
      <map code="0x1ea1" name="uni1EA1"/><!-- LATIN SMALL LETTER A WITH DOT BELOW -->
      <map code="0x1ea2" name="uni1EA2"/><!-- LATIN CAPITAL LETTER A WITH HOOK ABOVE -->
      <map code="0x1ea3" name="uni1EA3"/><!-- LATIN SMALL LETTER A WITH HOOK ABOVE -->
      <map code="0x1ea4" name="uni1EA4"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND ACUTE -->
      <map code="0x1ea5" name="uni1EA5"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX AND ACUTE -->
      <map code="0x1ea6" name="uni1EA6"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND GRAVE -->
      <map code="0x1ea7" name="uni1EA7"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX AND GRAVE -->
      <map code="0x1ea8" name="uni1EA8"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND HOOK ABOVE -->
      <map code="0x1ea9" name="uni1EA9"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX AND HOOK ABOVE -->
      <map code="0x1eaa" name="uni1EAA"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND TILDE -->
      <map code="0x1eab" name="uni1EAB"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX AND TILDE -->
      <map code="0x1eac" name="uni1EAC"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND DOT BELOW -->
      <map code="0x1ead" name="uni1EAD"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX AND DOT BELOW -->
      <map code="0x1eae" name="uni1EAE"/><!-- LATIN CAPITAL LETTER A WITH BREVE AND ACUTE -->
      <map code="0x1eaf" name="uni1EAF"/><!-- LATIN SMALL LETTER A WITH BREVE AND ACUTE -->
      <map code="0x1eb0" name="uni1EB0"/><!-- LATIN CAPITAL LETTER A WITH BREVE AND GRAVE -->
      <map code="0x1eb1" name="uni1EB1"/><!-- LATIN SMALL LETTER A WITH BREVE AND GRAVE -->
      <map code="0x1eb2" name="uni1EB2"/><!-- LATIN CAPITAL LETTER A WITH BREVE AND HOOK ABOVE -->
      <map code="0x1eb3" name="uni1EB3"/><!-- LATIN SMALL LETTER A WITH BREVE AND HOOK ABOVE -->
      <map code="0x1eb4" name="uni1EB4"/><!-- LATIN CAPITAL LETTER A WITH BREVE AND TILDE -->
      <map code="0x1eb5" name="uni1EB5"/><!-- LATIN SMALL LETTER A WITH BREVE AND TILDE -->
      <map code="0x1eb6" name="uni1EB6"/><!-- LATIN CAPITAL LETTER A WITH BREVE AND DOT BELOW -->
      <map code="0x1eb7" name="uni1EB7"/><!-- LATIN SMALL LETTER A WITH BREVE AND DOT BELOW -->
      <map code="0x1eb8" name="uni1EB8"/><!-- LATIN CAPITAL LETTER E WITH DOT BELOW -->
      <map code="0x1eb9" name="uni1EB9"/><!-- LATIN SMALL LETTER E WITH DOT BELOW -->
      <map code="0x1eba" name="uni1EBA"/><!-- LATIN CAPITAL LETTER E WITH HOOK ABOVE -->
      <map code="0x1ebb" name="uni1EBB"/><!-- LATIN SMALL LETTER E WITH HOOK ABOVE -->
      <map code="0x1ebc" name="uni1EBC"/><!-- LATIN CAPITAL LETTER E WITH TILDE -->
      <map code="0x1ebd" name="uni1EBD"/><!-- LATIN SMALL LETTER E WITH TILDE -->
      <map code="0x1ebe" name="uni1EBE"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND ACUTE -->
      <map code="0x1ebf" name="uni1EBF"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX AND ACUTE -->
      <map code="0x1ec0" name="uni1EC0"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND GRAVE -->
      <map code="0x1ec1" name="uni1EC1"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX AND GRAVE -->
      <map code="0x1ec2" name="uni1EC2"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND HOOK ABOVE -->
      <map code="0x1ec3" name="uni1EC3"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX AND HOOK ABOVE -->
      <map code="0x1ec4" name="uni1EC4"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND TILDE -->
      <map code="0x1ec5" name="uni1EC5"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX AND TILDE -->
      <map code="0x1ec6" name="uni1EC6"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND DOT BELOW -->
      <map code="0x1ec7" name="uni1EC7"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX AND DOT BELOW -->
      <map code="0x1ec8" name="uni1EC8"/><!-- LATIN CAPITAL LETTER I WITH HOOK ABOVE -->
      <map code="0x1ec9" name="uni1EC9"/><!-- LATIN SMALL LETTER I WITH HOOK ABOVE -->
      <map code="0x1eca" name="uni1ECA"/><!-- LATIN CAPITAL LETTER I WITH DOT BELOW -->
      <map code="0x1ecb" name="uni1ECB"/><!-- LATIN SMALL LETTER I WITH DOT BELOW -->
      <map code="0x1ecc" name="uni1ECC"/><!-- LATIN CAPITAL LETTER O WITH DOT BELOW -->
      <map code="0x1ecd" name="uni1ECD"/><!-- LATIN SMALL LETTER O WITH DOT BELOW -->
      <map code="0x1ece" name="uni1ECE"/><!-- LATIN CAPITAL LETTER O WITH HOOK ABOVE -->
      <map code="0x1ecf" name="uni1ECF"/><!-- LATIN SMALL LETTER O WITH HOOK ABOVE -->
      <map code="0x1ed0" name="uni1ED0"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND ACUTE -->
      <map code="0x1ed1" name="uni1ED1"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX AND ACUTE -->
      <map code="0x1ed2" name="uni1ED2"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND GRAVE -->
      <map code="0x1ed3" name="uni1ED3"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX AND GRAVE -->
      <map code="0x1ed4" name="uni1ED4"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND HOOK ABOVE -->
      <map code="0x1ed5" name="uni1ED5"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX AND HOOK ABOVE -->
      <map code="0x1ed6" name="uni1ED6"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND TILDE -->
      <map code="0x1ed7" name="uni1ED7"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX AND TILDE -->
      <map code="0x1ed8" name="uni1ED8"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND DOT BELOW -->
      <map code="0x1ed9" name="uni1ED9"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX AND DOT BELOW -->
      <map code="0x1eda" name="uni1EDA"/><!-- LATIN CAPITAL LETTER O WITH HORN AND ACUTE -->
      <map code="0x1edb" name="uni1EDB"/><!-- LATIN SMALL LETTER O WITH HORN AND ACUTE -->
      <map code="0x1edc" name="uni1EDC"/><!-- LATIN CAPITAL LETTER O WITH HORN AND GRAVE -->
      <map code="0x1edd" name="uni1EDD"/><!-- LATIN SMALL LETTER O WITH HORN AND GRAVE -->
      <map code="0x1ede" name="uni1EDE"/><!-- LATIN CAPITAL LETTER O WITH HORN AND HOOK ABOVE -->
      <map code="0x1edf" name="uni1EDF"/><!-- LATIN SMALL LETTER O WITH HORN AND HOOK ABOVE -->
      <map code="0x1ee0" name="uni1EE0"/><!-- LATIN CAPITAL LETTER O WITH HORN AND TILDE -->
      <map code="0x1ee1" name="uni1EE1"/><!-- LATIN SMALL LETTER O WITH HORN AND TILDE -->
      <map code="0x1ee2" name="uni1EE2"/><!-- LATIN CAPITAL LETTER O WITH HORN AND DOT BELOW -->
      <map code="0x1ee3" name="uni1EE3"/><!-- LATIN SMALL LETTER O WITH HORN AND DOT BELOW -->
      <map code="0x1ee4" name="uni1EE4"/><!-- LATIN CAPITAL LETTER U WITH DOT BELOW -->
      <map code="0x1ee5" name="uni1EE5"/><!-- LATIN SMALL LETTER U WITH DOT BELOW -->
      <map code="0x1ee6" name="uni1EE6"/><!-- LATIN CAPITAL LETTER U WITH HOOK ABOVE -->
      <map code="0x1ee7" name="uni1EE7"/><!-- LATIN SMALL LETTER U WITH HOOK ABOVE -->
      <map code="0x1ee8" name="uni1EE8"/><!-- LATIN CAPITAL LETTER U WITH HORN AND ACUTE -->
      <map code="0x1ee9" name="uni1EE9"/><!-- LATIN SMALL LETTER U WITH HORN AND ACUTE -->
      <map code="0x1eea" name="uni1EEA"/><!-- LATIN CAPITAL LETTER U WITH HORN AND GRAVE -->
      <map code="0x1eeb" name="uni1EEB"/><!-- LATIN SMALL LETTER U WITH HORN AND GRAVE -->
      <map code="0x1eec" name="uni1EEC"/><!-- LATIN CAPITAL LETTER U WITH HORN AND HOOK ABOVE -->
      <map code="0x1eed" name="uni1EED"/><!-- LATIN SMALL LETTER U WITH HORN AND HOOK ABOVE -->
      <map code="0x1eee" name="uni1EEE"/><!-- LATIN CAPITAL LETTER U WITH HORN AND TILDE -->
      <map code="0x1eef" name="uni1EEF"/><!-- LATIN SMALL LETTER U WITH HORN AND TILDE -->
      <map code="0x1ef0" name="uni1EF0"/><!-- LATIN CAPITAL LETTER U WITH HORN AND DOT BELOW -->
      <map code="0x1ef1" name="uni1EF1"/><!-- LATIN SMALL LETTER U WITH HORN AND DOT BELOW -->
      <map code="0x1ef2" name="Ygrave"/><!-- LATIN CAPITAL LETTER Y WITH GRAVE -->
      <map code="0x1ef3" name="ygrave"/><!-- LATIN SMALL LETTER Y WITH GRAVE -->
      <map code="0x1ef4" name="uni1EF4"/><!-- LATIN CAPITAL LETTER Y WITH DOT BELOW -->
      <map code="0x1ef5" name="uni1EF5"/><!-- LATIN SMALL LETTER Y WITH DOT BELOW -->
      <map code="0x1ef6" name="uni1EF6"/><!-- LATIN CAPITAL LETTER Y WITH HOOK ABOVE -->
      <map code="0x1ef7" name="uni1EF7"/><!-- LATIN SMALL LETTER Y WITH HOOK ABOVE -->
      <map code="0x1ef8" name="uni1EF8"/><!-- LATIN CAPITAL LETTER Y WITH TILDE -->
      <map code="0x1ef9" name="uni1EF9"/><!-- LATIN SMALL LETTER Y WITH TILDE -->
      <map code="0x1f4d" name="uni1F4D"/><!-- GREEK CAPITAL LETTER OMICRON WITH DASIA AND OXIA -->
      <map code="0x2000" name="uni2000"/><!-- EN QUAD -->
      <map code="0x2001" name="uni2001"/><!-- EM QUAD -->
      <map code="0x2002" name="uni2002"/><!-- EN SPACE -->
      <map code="0x2003" name="uni2003"/><!-- EM SPACE -->
      <map code="0x2004" name="uni2004"/><!-- THREE-PER-EM SPACE -->
      <map code="0x2005" name="uni2005"/><!-- FOUR-PER-EM SPACE -->
      <map code="0x2006" name="uni2006"/><!-- SIX-PER-EM SPACE -->
      <map code="0x2007" name="uni2007"/><!-- FIGURE SPACE -->
      <map code="0x2008" name="uni2008"/><!-- PUNCTUATION SPACE -->
      <map code="0x2009" name="uni2009"/><!-- THIN SPACE -->
      <map code="0x200a" name="uni200A"/><!-- HAIR SPACE -->
      <map code="0x200b" name="uni200B"/><!-- ZERO WIDTH SPACE -->
      <map code="0x2010" name="uni2010"/><!-- HYPHEN -->
      <map code="0x2011" name="uni2011"/><!-- NON-BREAKING HYPHEN -->
      <map code="0x2013" name="endash"/><!-- EN DASH -->
      <map code="0x2014" name="emdash"/><!-- EM DASH -->
      <map code="0x2015" name="uni2015"/><!-- HORIZONTAL BAR -->
      <map code="0x2017" name="underscoredbl"/><!-- DOUBLE LOW LINE -->
      <map code="0x2018" name="quoteleft"/><!-- LEFT SINGLE QUOTATION MARK -->
      <map code="0x2019" name="quoteright"/><!-- RIGHT SINGLE QUOTATION MARK -->
      <map code="0x201a" name="quotesinglbase"/><!-- SINGLE LOW-9 QUOTATION MARK -->
      <map code="0x201b" name="quotereversed"/><!-- SINGLE HIGH-REVERSED-9 QUOTATION MARK -->
      <map code="0x201c" name="quotedblleft"/><!-- LEFT DOUBLE QUOTATION MARK -->
      <map code="0x201d" name="quotedblright"/><!-- RIGHT DOUBLE QUOTATION MARK -->
      <map code="0x201e" name="quotedblbase"/><!-- DOUBLE LOW-9 QUOTATION MARK -->
      <map code="0x2020" name="dagger"/><!-- DAGGER -->
      <map code="0x2021" name="daggerdbl"/><!-- DOUBLE DAGGER -->
      <map code="0x2022" name="bullet"/><!-- BULLET -->
      <map code="0x2025" name="twodotenleader"/><!-- TWO DOT LEADER -->
      <map code="0x2026" name="ellipsis"/><!-- HORIZONTAL ELLIPSIS -->
      <map code="0x2027" name="uni2027"/><!-- HYPHENATION POINT -->
      <map code="0x2030" name="perthousand"/><!-- PER MILLE SIGN -->
      <map code="0x2032" name="minute"/><!-- PRIME -->
      <map code="0x2033" name="second"/><!-- DOUBLE PRIME -->
      <map code="0x2039" name="guilsinglleft"/><!-- SINGLE LEFT-POINTING ANGLE QUOTATION MARK -->
      <map code="0x203a" name="guilsinglright"/><!-- SINGLE RIGHT-POINTING ANGLE QUOTATION MARK -->
      <map code="0x203c" name="exclamdbl"/><!-- DOUBLE EXCLAMATION MARK -->
      <map code="0x2044" name="fraction"/><!-- FRACTION SLASH -->
      <map code="0x2074" name="uni2074"/><!-- SUPERSCRIPT FOUR -->
      <map code="0x207f" name="uni207F"/><!-- SUPERSCRIPT LATIN SMALL LETTER N -->
      <map code="0x20a3" name="franc"/><!-- FRENCH FRANC SIGN -->
      <map code="0x20a4" name="lira"/><!-- LIRA SIGN -->
      <map code="0x20a6" name="uni20A6"/><!-- NAIRA SIGN -->
      <map code="0x20a7" name="peseta"/><!-- PESETA SIGN -->
      <map code="0x20a8" name="uni20A8"/><!-- RUPEE SIGN -->
      <map code="0x20a9" name="uni20A9"/><!-- WON SIGN -->
      <map code="0x20aa" name="uni20AA"/><!-- NEW SHEQEL SIGN -->
      <map code="0x20ab" name="dong"/><!-- DONG SIGN -->
      <map code="0x20ac" name="Euro"/><!-- EURO SIGN -->
      <map code="0x20b1" name="uni20B1"/><!-- PESO SIGN -->
      <map code="0x20b9" name="uni20B9"/><!-- ???? -->
      <map code="0x20ba" name="uni20BA"/><!-- ???? -->
      <map code="0x20bc" name="uni20BC"/><!-- ???? -->
      <map code="0x20bd" name="uni20BD"/><!-- ???? -->
      <map code="0x2105" name="uni2105"/><!-- CARE OF -->
      <map code="0x2113" name="uni2113"/><!-- SCRIPT SMALL L -->
      <map code="0x2116" name="uni2116"/><!-- NUMERO SIGN -->
      <map code="0x2122" name="trademark"/><!-- TRADE MARK SIGN -->
      <map code="0x2126" name="uni03A9"/><!-- OHM SIGN -->
      <map code="0x212e" name="estimated"/><!-- ESTIMATED SYMBOL -->
      <map code="0x215b" name="oneeighth"/><!-- VULGAR FRACTION ONE EIGHTH -->
      <map code="0x215c" name="threeeighths"/><!-- VULGAR FRACTION THREE EIGHTHS -->
      <map code="0x215d" name="fiveeighths"/><!-- VULGAR FRACTION FIVE EIGHTHS -->
      <map code="0x215e" name="seveneighths"/><!-- VULGAR FRACTION SEVEN EIGHTHS -->
      <map code="0x2202" name="partialdiff"/><!-- PARTIAL DIFFERENTIAL -->
      <map code="0x2206" name="uni0394"/><!-- INCREMENT -->
      <map code="0x220f" name="product"/><!-- N-ARY PRODUCT -->
      <map code="0x2211" name="summation"/><!-- N-ARY SUMMATION -->
      <map code="0x2212" name="minus"/><!-- MINUS SIGN -->
      <map code="0x221a" name="radical"/><!-- SQUARE ROOT -->
      <map code="0x221e" name="infinity"/><!-- INFINITY -->
      <map code="0x222b" name="integral"/><!-- INTEGRAL -->
      <map code="0x2248" name="approxequal"/><!-- ALMOST EQUAL TO -->
      <map code="0x2260" name="notequal"/><!-- NOT EQUAL TO -->
      <map code="0x2264" name="lessequal"/><!-- LESS-THAN OR EQUAL TO -->
      <map code="0x2265" name="greaterequal"/><!-- GREATER-THAN OR EQUAL TO -->
      <map code="0x25ca" name="lozenge"/><!-- LOZENGE -->
      <map code="0xee01" name="uniEE01"/><!-- ???? -->
      <map code="0xee02" name="uniEE02"/><!-- ???? -->
      <map code="0xf6c3" name="uniF6C3"/><!-- ???? -->
      <map code="0xfb01" name="uniFB01"/><!-- LATIN SMALL LIGATURE FI -->
      <map code="0xfb02" name="uniFB02"/><!-- LATIN SMALL LIGATURE FL -->
      <map code="0xfb03" name="uniFB03"/><!-- LATIN SMALL LIGATURE FFI -->
      <map code="0xfb04" name="uniFB04"/><!-- LATIN SMALL LIGATURE FFL -->
      <map code="0xfeff" name="uniFEFF"/><!-- ZERO WIDTH NO-BREAK SPACE -->
      <map code="0xfffc" name="uniFFFC"/><!-- OBJECT REPLACEMENT CHARACTER -->
      <map code="0xfffd" name="uniFFFD"/><!-- REPLACEMENT CHARACTER -->
    </cmap_format_4>
    <cmap_format_4 platformID="3" platEncID="1" language="0">
      <map code="0x0" name="uni0000"/><!-- ???? -->
      <map code="0x2" name="uni0002"/><!-- ???? -->
      <map code="0xd" name="uni000D"/><!-- ???? -->
      <map code="0x20" name="space"/><!-- SPACE -->
      <map code="0x21" name="exclam"/><!-- EXCLAMATION MARK -->
      <map code="0x22" name="quotedbl"/><!-- QUOTATION MARK -->
      <map code="0x23" name="numbersign"/><!-- NUMBER SIGN -->
      <map code="0x24" name="dollar"/><!-- DOLLAR SIGN -->
      <map code="0x25" name="percent"/><!-- PERCENT SIGN -->
      <map code="0x26" name="ampersand"/><!-- AMPERSAND -->
      <map code="0x27" name="quotesingle"/><!-- APOSTROPHE -->
      <map code="0x28" name="parenleft"/><!-- LEFT PARENTHESIS -->
      <map code="0x29" name="parenright"/><!-- RIGHT PARENTHESIS -->
      <map code="0x2a" name="asterisk"/><!-- ASTERISK -->
      <map code="0x2b" name="plus"/><!-- PLUS SIGN -->
      <map code="0x2c" name="comma"/><!-- COMMA -->
      <map code="0x2d" name="hyphen"/><!-- HYPHEN-MINUS -->
      <map code="0x2e" name="period"/><!-- FULL STOP -->
      <map code="0x2f" name="slash"/><!-- SOLIDUS -->
      <map code="0x30" name="zero"/><!-- DIGIT ZERO -->
      <map code="0x31" name="one"/><!-- DIGIT ONE -->
      <map code="0x32" name="two"/><!-- DIGIT TWO -->
      <map code="0x33" name="three"/><!-- DIGIT THREE -->
      <map code="0x34" name="four"/><!-- DIGIT FOUR -->
      <map code="0x35" name="five"/><!-- DIGIT FIVE -->
      <map code="0x36" name="six"/><!-- DIGIT SIX -->
      <map code="0x37" name="seven"/><!-- DIGIT SEVEN -->
      <map code="0x38" name="eight"/><!-- DIGIT EIGHT -->
      <map code="0x39" name="nine"/><!-- DIGIT NINE -->
      <map code="0x3a" name="colon"/><!-- COLON -->
      <map code="0x3b" name="semicolon"/><!-- SEMICOLON -->
      <map code="0x3c" name="less"/><!-- LESS-THAN SIGN -->
      <map code="0x3d" name="equal"/><!-- EQUALS SIGN -->
      <map code="0x3e" name="greater"/><!-- GREATER-THAN SIGN -->
      <map code="0x3f" name="question"/><!-- QUESTION MARK -->
      <map code="0x40" name="at"/><!-- COMMERCIAL AT -->
      <map code="0x41" name="A"/><!-- LATIN CAPITAL LETTER A -->
      <map code="0x42" name="B"/><!-- LATIN CAPITAL LETTER B -->
      <map code="0x43" name="C"/><!-- LATIN CAPITAL LETTER C -->
      <map code="0x44" name="D"/><!-- LATIN CAPITAL LETTER D -->
      <map code="0x45" name="E"/><!-- LATIN CAPITAL LETTER E -->
      <map code="0x46" name="F"/><!-- LATIN CAPITAL LETTER F -->
      <map code="0x47" name="G"/><!-- LATIN CAPITAL LETTER G -->
      <map code="0x48" name="H"/><!-- LATIN CAPITAL LETTER H -->
      <map code="0x49" name="I"/><!-- LATIN CAPITAL LETTER I -->
      <map code="0x4a" name="J"/><!-- LATIN CAPITAL LETTER J -->
      <map code="0x4b" name="K"/><!-- LATIN CAPITAL LETTER K -->
      <map code="0x4c" name="L"/><!-- LATIN CAPITAL LETTER L -->
      <map code="0x4d" name="M"/><!-- LATIN CAPITAL LETTER M -->
      <map code="0x4e" name="N"/><!-- LATIN CAPITAL LETTER N -->
      <map code="0x4f" name="O"/><!-- LATIN CAPITAL LETTER O -->
      <map code="0x50" name="P"/><!-- LATIN CAPITAL LETTER P -->
      <map code="0x51" name="Q"/><!-- LATIN CAPITAL LETTER Q -->
      <map code="0x52" name="R"/><!-- LATIN CAPITAL LETTER R -->
      <map code="0x53" name="S"/><!-- LATIN CAPITAL LETTER S -->
      <map code="0x54" name="T"/><!-- LATIN CAPITAL LETTER T -->
      <map code="0x55" name="U"/><!-- LATIN CAPITAL LETTER U -->
      <map code="0x56" name="V"/><!-- LATIN CAPITAL LETTER V -->
      <map code="0x57" name="W"/><!-- LATIN CAPITAL LETTER W -->
      <map code="0x58" name="X"/><!-- LATIN CAPITAL LETTER X -->
      <map code="0x59" name="Y"/><!-- LATIN CAPITAL LETTER Y -->
      <map code="0x5a" name="Z"/><!-- LATIN CAPITAL LETTER Z -->
      <map code="0x5b" name="bracketleft"/><!-- LEFT SQUARE BRACKET -->
      <map code="0x5c" name="backslash"/><!-- REVERSE SOLIDUS -->
      <map code="0x5d" name="bracketright"/><!-- RIGHT SQUARE BRACKET -->
      <map code="0x5e" name="asciicircum"/><!-- CIRCUMFLEX ACCENT -->
      <map code="0x5f" name="underscore"/><!-- LOW LINE -->
      <map code="0x60" name="grave"/><!-- GRAVE ACCENT -->
      <map code="0x61" name="a"/><!-- LATIN SMALL LETTER A -->
      <map code="0x62" name="b"/><!-- LATIN SMALL LETTER B -->
      <map code="0x63" name="c"/><!-- LATIN SMALL LETTER C -->
      <map code="0x64" name="d"/><!-- LATIN SMALL LETTER D -->
      <map code="0x65" name="e"/><!-- LATIN SMALL LETTER E -->
      <map code="0x66" name="f"/><!-- LATIN SMALL LETTER F -->
      <map code="0x67" name="g"/><!-- LATIN SMALL LETTER G -->
      <map code="0x68" name="h"/><!-- LATIN SMALL LETTER H -->
      <map code="0x69" name="i"/><!-- LATIN SMALL LETTER I -->
      <map code="0x6a" name="j"/><!-- LATIN SMALL LETTER J -->
      <map code="0x6b" name="k"/><!-- LATIN SMALL LETTER K -->
      <map code="0x6c" name="l"/><!-- LATIN SMALL LETTER L -->
      <map code="0x6d" name="m"/><!-- LATIN SMALL LETTER M -->
      <map code="0x6e" name="n"/><!-- LATIN SMALL LETTER N -->
      <map code="0x6f" name="o"/><!-- LATIN SMALL LETTER O -->
      <map code="0x70" name="p"/><!-- LATIN SMALL LETTER P -->
      <map code="0x71" name="q"/><!-- LATIN SMALL LETTER Q -->
      <map code="0x72" name="r"/><!-- LATIN SMALL LETTER R -->
      <map code="0x73" name="s"/><!-- LATIN SMALL LETTER S -->
      <map code="0x74" name="t"/><!-- LATIN SMALL LETTER T -->
      <map code="0x75" name="u"/><!-- LATIN SMALL LETTER U -->
      <map code="0x76" name="v"/><!-- LATIN SMALL LETTER V -->
      <map code="0x77" name="w"/><!-- LATIN SMALL LETTER W -->
      <map code="0x78" name="x"/><!-- LATIN SMALL LETTER X -->
      <map code="0x79" name="y"/><!-- LATIN SMALL LETTER Y -->
      <map code="0x7a" name="z"/><!-- LATIN SMALL LETTER Z -->
      <map code="0x7b" name="braceleft"/><!-- LEFT CURLY BRACKET -->
      <map code="0x7c" name="bar"/><!-- VERTICAL LINE -->
      <map code="0x7d" name="braceright"/><!-- RIGHT CURLY BRACKET -->
      <map code="0x7e" name="asciitilde"/><!-- TILDE -->
      <map code="0xa0" name="uni00A0"/><!-- NO-BREAK SPACE -->
      <map code="0xa1" name="exclamdown"/><!-- INVERTED EXCLAMATION MARK -->
      <map code="0xa2" name="cent"/><!-- CENT SIGN -->
      <map code="0xa3" name="sterling"/><!-- POUND SIGN -->
      <map code="0xa4" name="currency"/><!-- CURRENCY SIGN -->
      <map code="0xa5" name="yen"/><!-- YEN SIGN -->
      <map code="0xa6" name="brokenbar"/><!-- BROKEN BAR -->
      <map code="0xa7" name="section"/><!-- SECTION SIGN -->
      <map code="0xa8" name="dieresis"/><!-- DIAERESIS -->
      <map code="0xa9" name="copyright"/><!-- COPYRIGHT SIGN -->
      <map code="0xaa" name="ordfeminine"/><!-- FEMININE ORDINAL INDICATOR -->
      <map code="0xab" name="guillemotleft"/><!-- LEFT-POINTING DOUBLE ANGLE QUOTATION MARK -->
      <map code="0xac" name="logicalnot"/><!-- NOT SIGN -->
      <map code="0xad" name="uni00AD"/><!-- SOFT HYPHEN -->
      <map code="0xae" name="registered"/><!-- REGISTERED SIGN -->
      <map code="0xaf" name="macron"/><!-- MACRON -->
      <map code="0xb0" name="degree"/><!-- DEGREE SIGN -->
      <map code="0xb1" name="plusminus"/><!-- PLUS-MINUS SIGN -->
      <map code="0xb2" name="uni00B2"/><!-- SUPERSCRIPT TWO -->
      <map code="0xb3" name="uni00B3"/><!-- SUPERSCRIPT THREE -->
      <map code="0xb4" name="acute"/><!-- ACUTE ACCENT -->
      <map code="0xb5" name="mu"/><!-- MICRO SIGN -->
      <map code="0xb6" name="paragraph"/><!-- PILCROW SIGN -->
      <map code="0xb7" name="periodcentered"/><!-- MIDDLE DOT -->
      <map code="0xb8" name="cedilla"/><!-- CEDILLA -->
      <map code="0xb9" name="uni00B9"/><!-- SUPERSCRIPT ONE -->
      <map code="0xba" name="ordmasculine"/><!-- MASCULINE ORDINAL INDICATOR -->
      <map code="0xbb" name="guillemotright"/><!-- RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK -->
      <map code="0xbc" name="onequarter"/><!-- VULGAR FRACTION ONE QUARTER -->
      <map code="0xbd" name="onehalf"/><!-- VULGAR FRACTION ONE HALF -->
      <map code="0xbe" name="threequarters"/><!-- VULGAR FRACTION THREE QUARTERS -->
      <map code="0xbf" name="questiondown"/><!-- INVERTED QUESTION MARK -->
      <map code="0xc0" name="Agrave"/><!-- LATIN CAPITAL LETTER A WITH GRAVE -->
      <map code="0xc1" name="Aacute"/><!-- LATIN CAPITAL LETTER A WITH ACUTE -->
      <map code="0xc2" name="Acircumflex"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX -->
      <map code="0xc3" name="Atilde"/><!-- LATIN CAPITAL LETTER A WITH TILDE -->
      <map code="0xc4" name="Adieresis"/><!-- LATIN CAPITAL LETTER A WITH DIAERESIS -->
      <map code="0xc5" name="Aring"/><!-- LATIN CAPITAL LETTER A WITH RING ABOVE -->
      <map code="0xc6" name="AE"/><!-- LATIN CAPITAL LETTER AE -->
      <map code="0xc7" name="Ccedilla"/><!-- LATIN CAPITAL LETTER C WITH CEDILLA -->
      <map code="0xc8" name="Egrave"/><!-- LATIN CAPITAL LETTER E WITH GRAVE -->
      <map code="0xc9" name="Eacute"/><!-- LATIN CAPITAL LETTER E WITH ACUTE -->
      <map code="0xca" name="Ecircumflex"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX -->
      <map code="0xcb" name="Edieresis"/><!-- LATIN CAPITAL LETTER E WITH DIAERESIS -->
      <map code="0xcc" name="Igrave"/><!-- LATIN CAPITAL LETTER I WITH GRAVE -->
      <map code="0xcd" name="Iacute"/><!-- LATIN CAPITAL LETTER I WITH ACUTE -->
      <map code="0xce" name="Icircumflex"/><!-- LATIN CAPITAL LETTER I WITH CIRCUMFLEX -->
      <map code="0xcf" name="Idieresis"/><!-- LATIN CAPITAL LETTER I WITH DIAERESIS -->
      <map code="0xd0" name="Eth"/><!-- LATIN CAPITAL LETTER ETH -->
      <map code="0xd1" name="Ntilde"/><!-- LATIN CAPITAL LETTER N WITH TILDE -->
      <map code="0xd2" name="Ograve"/><!-- LATIN CAPITAL LETTER O WITH GRAVE -->
      <map code="0xd3" name="Oacute"/><!-- LATIN CAPITAL LETTER O WITH ACUTE -->
      <map code="0xd4" name="Ocircumflex"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX -->
      <map code="0xd5" name="Otilde"/><!-- LATIN CAPITAL LETTER O WITH TILDE -->
      <map code="0xd6" name="Odieresis"/><!-- LATIN CAPITAL LETTER O WITH DIAERESIS -->
      <map code="0xd7" name="multiply"/><!-- MULTIPLICATION SIGN -->
      <map code="0xd8" name="Oslash"/><!-- LATIN CAPITAL LETTER O WITH STROKE -->
      <map code="0xd9" name="Ugrave"/><!-- LATIN CAPITAL LETTER U WITH GRAVE -->
      <map code="0xda" name="Uacute"/><!-- LATIN CAPITAL LETTER U WITH ACUTE -->
      <map code="0xdb" name="Ucircumflex"/><!-- LATIN CAPITAL LETTER U WITH CIRCUMFLEX -->
      <map code="0xdc" name="Udieresis"/><!-- LATIN CAPITAL LETTER U WITH DIAERESIS -->
      <map code="0xdd" name="Yacute"/><!-- LATIN CAPITAL LETTER Y WITH ACUTE -->
      <map code="0xde" name="Thorn"/><!-- LATIN CAPITAL LETTER THORN -->
      <map code="0xdf" name="germandbls"/><!-- LATIN SMALL LETTER SHARP S -->
      <map code="0xe0" name="agrave"/><!-- LATIN SMALL LETTER A WITH GRAVE -->
      <map code="0xe1" name="aacute"/><!-- LATIN SMALL LETTER A WITH ACUTE -->
      <map code="0xe2" name="acircumflex"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX -->
      <map code="0xe3" name="atilde"/><!-- LATIN SMALL LETTER A WITH TILDE -->
      <map code="0xe4" name="adieresis"/><!-- LATIN SMALL LETTER A WITH DIAERESIS -->
      <map code="0xe5" name="aring"/><!-- LATIN SMALL LETTER A WITH RING ABOVE -->
      <map code="0xe6" name="ae"/><!-- LATIN SMALL LETTER AE -->
      <map code="0xe7" name="ccedilla"/><!-- LATIN SMALL LETTER C WITH CEDILLA -->
      <map code="0xe8" name="egrave"/><!-- LATIN SMALL LETTER E WITH GRAVE -->
      <map code="0xe9" name="eacute"/><!-- LATIN SMALL LETTER E WITH ACUTE -->
      <map code="0xea" name="ecircumflex"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX -->
      <map code="0xeb" name="edieresis"/><!-- LATIN SMALL LETTER E WITH DIAERESIS -->
      <map code="0xec" name="igrave"/><!-- LATIN SMALL LETTER I WITH GRAVE -->
      <map code="0xed" name="iacute"/><!-- LATIN SMALL LETTER I WITH ACUTE -->
      <map code="0xee" name="icircumflex"/><!-- LATIN SMALL LETTER I WITH CIRCUMFLEX -->
      <map code="0xef" name="idieresis"/><!-- LATIN SMALL LETTER I WITH DIAERESIS -->
      <map code="0xf0" name="eth"/><!-- LATIN SMALL LETTER ETH -->
      <map code="0xf1" name="ntilde"/><!-- LATIN SMALL LETTER N WITH TILDE -->
      <map code="0xf2" name="ograve"/><!-- LATIN SMALL LETTER O WITH GRAVE -->
      <map code="0xf3" name="oacute"/><!-- LATIN SMALL LETTER O WITH ACUTE -->
      <map code="0xf4" name="ocircumflex"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX -->
      <map code="0xf5" name="otilde"/><!-- LATIN SMALL LETTER O WITH TILDE -->
      <map code="0xf6" name="odieresis"/><!-- LATIN SMALL LETTER O WITH DIAERESIS -->
      <map code="0xf7" name="divide"/><!-- DIVISION SIGN -->
      <map code="0xf8" name="oslash"/><!-- LATIN SMALL LETTER O WITH STROKE -->
      <map code="0xf9" name="ugrave"/><!-- LATIN SMALL LETTER U WITH GRAVE -->
      <map code="0xfa" name="uacute"/><!-- LATIN SMALL LETTER U WITH ACUTE -->
      <map code="0xfb" name="ucircumflex"/><!-- LATIN SMALL LETTER U WITH CIRCUMFLEX -->
      <map code="0xfc" name="udieresis"/><!-- LATIN SMALL LETTER U WITH DIAERESIS -->
      <map code="0xfd" name="yacute"/><!-- LATIN SMALL LETTER Y WITH ACUTE -->
      <map code="0xfe" name="thorn"/><!-- LATIN SMALL LETTER THORN -->
      <map code="0xff" name="ydieresis"/><!-- LATIN SMALL LETTER Y WITH DIAERESIS -->
      <map code="0x100" name="Amacron"/><!-- LATIN CAPITAL LETTER A WITH MACRON -->
      <map code="0x101" name="amacron"/><!-- LATIN SMALL LETTER A WITH MACRON -->
      <map code="0x102" name="Abreve"/><!-- LATIN CAPITAL LETTER A WITH BREVE -->
      <map code="0x103" name="abreve"/><!-- LATIN SMALL LETTER A WITH BREVE -->
      <map code="0x104" name="Aogonek"/><!-- LATIN CAPITAL LETTER A WITH OGONEK -->
      <map code="0x105" name="aogonek"/><!-- LATIN SMALL LETTER A WITH OGONEK -->
      <map code="0x106" name="Cacute"/><!-- LATIN CAPITAL LETTER C WITH ACUTE -->
      <map code="0x107" name="cacute"/><!-- LATIN SMALL LETTER C WITH ACUTE -->
      <map code="0x108" name="Ccircumflex"/><!-- LATIN CAPITAL LETTER C WITH CIRCUMFLEX -->
      <map code="0x109" name="ccircumflex"/><!-- LATIN SMALL LETTER C WITH CIRCUMFLEX -->
      <map code="0x10a" name="Cdotaccent"/><!-- LATIN CAPITAL LETTER C WITH DOT ABOVE -->
      <map code="0x10b" name="cdotaccent"/><!-- LATIN SMALL LETTER C WITH DOT ABOVE -->
      <map code="0x10c" name="Ccaron"/><!-- LATIN CAPITAL LETTER C WITH CARON -->
      <map code="0x10d" name="ccaron"/><!-- LATIN SMALL LETTER C WITH CARON -->
      <map code="0x10e" name="Dcaron"/><!-- LATIN CAPITAL LETTER D WITH CARON -->
      <map code="0x10f" name="dcaron"/><!-- LATIN SMALL LETTER D WITH CARON -->
      <map code="0x110" name="Dcroat"/><!-- LATIN CAPITAL LETTER D WITH STROKE -->
      <map code="0x111" name="dcroat"/><!-- LATIN SMALL LETTER D WITH STROKE -->
      <map code="0x112" name="Emacron"/><!-- LATIN CAPITAL LETTER E WITH MACRON -->
      <map code="0x113" name="emacron"/><!-- LATIN SMALL LETTER E WITH MACRON -->
      <map code="0x114" name="Ebreve"/><!-- LATIN CAPITAL LETTER E WITH BREVE -->
      <map code="0x115" name="ebreve"/><!-- LATIN SMALL LETTER E WITH BREVE -->
      <map code="0x116" name="Edotaccent"/><!-- LATIN CAPITAL LETTER E WITH DOT ABOVE -->
      <map code="0x117" name="edotaccent"/><!-- LATIN SMALL LETTER E WITH DOT ABOVE -->
      <map code="0x118" name="Eogonek"/><!-- LATIN CAPITAL LETTER E WITH OGONEK -->
      <map code="0x119" name="eogonek"/><!-- LATIN SMALL LETTER E WITH OGONEK -->
      <map code="0x11a" name="Ecaron"/><!-- LATIN CAPITAL LETTER E WITH CARON -->
      <map code="0x11b" name="ecaron"/><!-- LATIN SMALL LETTER E WITH CARON -->
      <map code="0x11c" name="Gcircumflex"/><!-- LATIN CAPITAL LETTER G WITH CIRCUMFLEX -->
      <map code="0x11d" name="gcircumflex"/><!-- LATIN SMALL LETTER G WITH CIRCUMFLEX -->
      <map code="0x11e" name="Gbreve"/><!-- LATIN CAPITAL LETTER G WITH BREVE -->
      <map code="0x11f" name="gbreve"/><!-- LATIN SMALL LETTER G WITH BREVE -->
      <map code="0x120" name="Gdotaccent"/><!-- LATIN CAPITAL LETTER G WITH DOT ABOVE -->
      <map code="0x121" name="gdotaccent"/><!-- LATIN SMALL LETTER G WITH DOT ABOVE -->
      <map code="0x122" name="uni0122"/><!-- LATIN CAPITAL LETTER G WITH CEDILLA -->
      <map code="0x123" name="uni0123"/><!-- LATIN SMALL LETTER G WITH CEDILLA -->
      <map code="0x124" name="Hcircumflex"/><!-- LATIN CAPITAL LETTER H WITH CIRCUMFLEX -->
      <map code="0x125" name="hcircumflex"/><!-- LATIN SMALL LETTER H WITH CIRCUMFLEX -->
      <map code="0x126" name="Hbar"/><!-- LATIN CAPITAL LETTER H WITH STROKE -->
      <map code="0x127" name="hbar"/><!-- LATIN SMALL LETTER H WITH STROKE -->
      <map code="0x128" name="Itilde"/><!-- LATIN CAPITAL LETTER I WITH TILDE -->
      <map code="0x129" name="itilde"/><!-- LATIN SMALL LETTER I WITH TILDE -->
      <map code="0x12a" name="Imacron"/><!-- LATIN CAPITAL LETTER I WITH MACRON -->
      <map code="0x12b" name="imacron"/><!-- LATIN SMALL LETTER I WITH MACRON -->
      <map code="0x12c" name="Ibreve"/><!-- LATIN CAPITAL LETTER I WITH BREVE -->
      <map code="0x12d" name="ibreve"/><!-- LATIN SMALL LETTER I WITH BREVE -->
      <map code="0x12e" name="Iogonek"/><!-- LATIN CAPITAL LETTER I WITH OGONEK -->
      <map code="0x12f" name="iogonek"/><!-- LATIN SMALL LETTER I WITH OGONEK -->
      <map code="0x130" name="Idotaccent"/><!-- LATIN CAPITAL LETTER I WITH DOT ABOVE -->
      <map code="0x131" name="dotlessi"/><!-- LATIN SMALL LETTER DOTLESS I -->
      <map code="0x132" name="IJ"/><!-- LATIN CAPITAL LIGATURE IJ -->
      <map code="0x133" name="ij"/><!-- LATIN SMALL LIGATURE IJ -->
      <map code="0x134" name="Jcircumflex"/><!-- LATIN CAPITAL LETTER J WITH CIRCUMFLEX -->
      <map code="0x135" name="jcircumflex"/><!-- LATIN SMALL LETTER J WITH CIRCUMFLEX -->
      <map code="0x136" name="uni0136"/><!-- LATIN CAPITAL LETTER K WITH CEDILLA -->
      <map code="0x137" name="uni0137"/><!-- LATIN SMALL LETTER K WITH CEDILLA -->
      <map code="0x138" name="kgreenlandic"/><!-- LATIN SMALL LETTER KRA -->
      <map code="0x139" name="Lacute"/><!-- LATIN CAPITAL LETTER L WITH ACUTE -->
      <map code="0x13a" name="lacute"/><!-- LATIN SMALL LETTER L WITH ACUTE -->
      <map code="0x13b" name="uni013B"/><!-- LATIN CAPITAL LETTER L WITH CEDILLA -->
      <map code="0x13c" name="uni013C"/><!-- LATIN SMALL LETTER L WITH CEDILLA -->
      <map code="0x13d" name="Lcaron"/><!-- LATIN CAPITAL LETTER L WITH CARON -->
      <map code="0x13e" name="lcaron"/><!-- LATIN SMALL LETTER L WITH CARON -->
      <map code="0x13f" name="Ldot"/><!-- LATIN CAPITAL LETTER L WITH MIDDLE DOT -->
      <map code="0x140" name="ldot"/><!-- LATIN SMALL LETTER L WITH MIDDLE DOT -->
      <map code="0x141" name="Lslash"/><!-- LATIN CAPITAL LETTER L WITH STROKE -->
      <map code="0x142" name="lslash"/><!-- LATIN SMALL LETTER L WITH STROKE -->
      <map code="0x143" name="Nacute"/><!-- LATIN CAPITAL LETTER N WITH ACUTE -->
      <map code="0x144" name="nacute"/><!-- LATIN SMALL LETTER N WITH ACUTE -->
      <map code="0x145" name="uni0145"/><!-- LATIN CAPITAL LETTER N WITH CEDILLA -->
      <map code="0x146" name="uni0146"/><!-- LATIN SMALL LETTER N WITH CEDILLA -->
      <map code="0x147" name="Ncaron"/><!-- LATIN CAPITAL LETTER N WITH CARON -->
      <map code="0x148" name="ncaron"/><!-- LATIN SMALL LETTER N WITH CARON -->
      <map code="0x149" name="napostrophe"/><!-- LATIN SMALL LETTER N PRECEDED BY APOSTROPHE -->
      <map code="0x14a" name="Eng"/><!-- LATIN CAPITAL LETTER ENG -->
      <map code="0x14b" name="eng"/><!-- LATIN SMALL LETTER ENG -->
      <map code="0x14c" name="Omacron"/><!-- LATIN CAPITAL LETTER O WITH MACRON -->
      <map code="0x14d" name="omacron"/><!-- LATIN SMALL LETTER O WITH MACRON -->
      <map code="0x14e" name="Obreve"/><!-- LATIN CAPITAL LETTER O WITH BREVE -->
      <map code="0x14f" name="obreve"/><!-- LATIN SMALL LETTER O WITH BREVE -->
      <map code="0x150" name="Ohungarumlaut"/><!-- LATIN CAPITAL LETTER O WITH DOUBLE ACUTE -->
      <map code="0x151" name="ohungarumlaut"/><!-- LATIN SMALL LETTER O WITH DOUBLE ACUTE -->
      <map code="0x152" name="OE"/><!-- LATIN CAPITAL LIGATURE OE -->
      <map code="0x153" name="oe"/><!-- LATIN SMALL LIGATURE OE -->
      <map code="0x154" name="Racute"/><!-- LATIN CAPITAL LETTER R WITH ACUTE -->
      <map code="0x155" name="racute"/><!-- LATIN SMALL LETTER R WITH ACUTE -->
      <map code="0x156" name="uni0156"/><!-- LATIN CAPITAL LETTER R WITH CEDILLA -->
      <map code="0x157" name="uni0157"/><!-- LATIN SMALL LETTER R WITH CEDILLA -->
      <map code="0x158" name="Rcaron"/><!-- LATIN CAPITAL LETTER R WITH CARON -->
      <map code="0x159" name="rcaron"/><!-- LATIN SMALL LETTER R WITH CARON -->
      <map code="0x15a" name="Sacute"/><!-- LATIN CAPITAL LETTER S WITH ACUTE -->
      <map code="0x15b" name="sacute"/><!-- LATIN SMALL LETTER S WITH ACUTE -->
      <map code="0x15c" name="Scircumflex"/><!-- LATIN CAPITAL LETTER S WITH CIRCUMFLEX -->
      <map code="0x15d" name="scircumflex"/><!-- LATIN SMALL LETTER S WITH CIRCUMFLEX -->
      <map code="0x15e" name="Scedilla"/><!-- LATIN CAPITAL LETTER S WITH CEDILLA -->
      <map code="0x15f" name="scedilla"/><!-- LATIN SMALL LETTER S WITH CEDILLA -->
      <map code="0x160" name="Scaron"/><!-- LATIN CAPITAL LETTER S WITH CARON -->
      <map code="0x161" name="scaron"/><!-- LATIN SMALL LETTER S WITH CARON -->
      <map code="0x162" name="uni0162"/><!-- LATIN CAPITAL LETTER T WITH CEDILLA -->
      <map code="0x163" name="uni0163"/><!-- LATIN SMALL LETTER T WITH CEDILLA -->
      <map code="0x164" name="Tcaron"/><!-- LATIN CAPITAL LETTER T WITH CARON -->
      <map code="0x165" name="tcaron"/><!-- LATIN SMALL LETTER T WITH CARON -->
      <map code="0x166" name="Tbar"/><!-- LATIN CAPITAL LETTER T WITH STROKE -->
      <map code="0x167" name="tbar"/><!-- LATIN SMALL LETTER T WITH STROKE -->
      <map code="0x168" name="Utilde"/><!-- LATIN CAPITAL LETTER U WITH TILDE -->
      <map code="0x169" name="utilde"/><!-- LATIN SMALL LETTER U WITH TILDE -->
      <map code="0x16a" name="Umacron"/><!-- LATIN CAPITAL LETTER U WITH MACRON -->
      <map code="0x16b" name="umacron"/><!-- LATIN SMALL LETTER U WITH MACRON -->
      <map code="0x16c" name="Ubreve"/><!-- LATIN CAPITAL LETTER U WITH BREVE -->
      <map code="0x16d" name="ubreve"/><!-- LATIN SMALL LETTER U WITH BREVE -->
      <map code="0x16e" name="Uring"/><!-- LATIN CAPITAL LETTER U WITH RING ABOVE -->
      <map code="0x16f" name="uring"/><!-- LATIN SMALL LETTER U WITH RING ABOVE -->
      <map code="0x170" name="Uhungarumlaut"/><!-- LATIN CAPITAL LETTER U WITH DOUBLE ACUTE -->
      <map code="0x171" name="uhungarumlaut"/><!-- LATIN SMALL LETTER U WITH DOUBLE ACUTE -->
      <map code="0x172" name="Uogonek"/><!-- LATIN CAPITAL LETTER U WITH OGONEK -->
      <map code="0x173" name="uogonek"/><!-- LATIN SMALL LETTER U WITH OGONEK -->
      <map code="0x174" name="Wcircumflex"/><!-- LATIN CAPITAL LETTER W WITH CIRCUMFLEX -->
      <map code="0x175" name="wcircumflex"/><!-- LATIN SMALL LETTER W WITH CIRCUMFLEX -->
      <map code="0x176" name="Ycircumflex"/><!-- LATIN CAPITAL LETTER Y WITH CIRCUMFLEX -->
      <map code="0x177" name="ycircumflex"/><!-- LATIN SMALL LETTER Y WITH CIRCUMFLEX -->
      <map code="0x178" name="Ydieresis"/><!-- LATIN CAPITAL LETTER Y WITH DIAERESIS -->
      <map code="0x179" name="Zacute"/><!-- LATIN CAPITAL LETTER Z WITH ACUTE -->
      <map code="0x17a" name="zacute"/><!-- LATIN SMALL LETTER Z WITH ACUTE -->
      <map code="0x17b" name="Zdotaccent"/><!-- LATIN CAPITAL LETTER Z WITH DOT ABOVE -->
      <map code="0x17c" name="zdotaccent"/><!-- LATIN SMALL LETTER Z WITH DOT ABOVE -->
      <map code="0x17d" name="Zcaron"/><!-- LATIN CAPITAL LETTER Z WITH CARON -->
      <map code="0x17e" name="zcaron"/><!-- LATIN SMALL LETTER Z WITH CARON -->
      <map code="0x17f" name="longs"/><!-- LATIN SMALL LETTER LONG S -->
      <map code="0x18f" name="uni018F"/><!-- LATIN CAPITAL LETTER SCHWA -->
      <map code="0x192" name="florin"/><!-- LATIN SMALL LETTER F WITH HOOK -->
      <map code="0x1a0" name="Ohorn"/><!-- LATIN CAPITAL LETTER O WITH HORN -->
      <map code="0x1a1" name="ohorn"/><!-- LATIN SMALL LETTER O WITH HORN -->
      <map code="0x1af" name="Uhorn"/><!-- LATIN CAPITAL LETTER U WITH HORN -->
      <map code="0x1b0" name="uhorn"/><!-- LATIN SMALL LETTER U WITH HORN -->
      <map code="0x1f0" name="uni01F0"/><!-- LATIN SMALL LETTER J WITH CARON -->
      <map code="0x1fa" name="Aringacute"/><!-- LATIN CAPITAL LETTER A WITH RING ABOVE AND ACUTE -->
      <map code="0x1fb" name="aringacute"/><!-- LATIN SMALL LETTER A WITH RING ABOVE AND ACUTE -->
      <map code="0x1fc" name="AEacute"/><!-- LATIN CAPITAL LETTER AE WITH ACUTE -->
      <map code="0x1fd" name="aeacute"/><!-- LATIN SMALL LETTER AE WITH ACUTE -->
      <map code="0x1fe" name="Oslashacute"/><!-- LATIN CAPITAL LETTER O WITH STROKE AND ACUTE -->
      <map code="0x1ff" name="oslashacute"/><!-- LATIN SMALL LETTER O WITH STROKE AND ACUTE -->
      <map code="0x218" name="uni0218"/><!-- LATIN CAPITAL LETTER S WITH COMMA BELOW -->
      <map code="0x219" name="uni0219"/><!-- LATIN SMALL LETTER S WITH COMMA BELOW -->
      <map code="0x21a" name="uni021A"/><!-- LATIN CAPITAL LETTER T WITH COMMA BELOW -->
      <map code="0x21b" name="uni021B"/><!-- LATIN SMALL LETTER T WITH COMMA BELOW -->
      <map code="0x237" name="uni0237"/><!-- LATIN SMALL LETTER DOTLESS J -->
      <map code="0x259" name="uni0259"/><!-- LATIN SMALL LETTER SCHWA -->
      <map code="0x2bc" name="uni02BC"/><!-- MODIFIER LETTER APOSTROPHE -->
      <map code="0x2c6" name="circumflex"/><!-- MODIFIER LETTER CIRCUMFLEX ACCENT -->
      <map code="0x2c7" name="caron"/><!-- CARON -->
      <map code="0x2c9" name="uni02C9"/><!-- MODIFIER LETTER MACRON -->
      <map code="0x2d8" name="breve"/><!-- BREVE -->
      <map code="0x2d9" name="dotaccent"/><!-- DOT ABOVE -->
      <map code="0x2da" name="ring"/><!-- RING ABOVE -->
      <map code="0x2db" name="ogonek"/><!-- OGONEK -->
      <map code="0x2dc" name="tilde"/><!-- SMALL TILDE -->
      <map code="0x2dd" name="hungarumlaut"/><!-- DOUBLE ACUTE ACCENT -->
      <map code="0x2f3" name="uni02F3"/><!-- MODIFIER LETTER LOW RING -->
      <map code="0x300" name="gravecomb"/><!-- COMBINING GRAVE ACCENT -->
      <map code="0x301" name="acutecomb"/><!-- COMBINING ACUTE ACCENT -->
      <map code="0x303" name="tildecomb"/><!-- COMBINING TILDE -->
      <map code="0x309" name="hookabovecomb"/><!-- COMBINING HOOK ABOVE -->
      <map code="0x30f" name="uni030F"/><!-- COMBINING DOUBLE GRAVE ACCENT -->
      <map code="0x323" name="dotbelowcomb"/><!-- COMBINING DOT BELOW -->
      <map code="0x384" name="tonos"/><!-- GREEK TONOS -->
      <map code="0x385" name="dieresistonos"/><!-- GREEK DIALYTIKA TONOS -->
      <map code="0x386" name="Alphatonos"/><!-- GREEK CAPITAL LETTER ALPHA WITH TONOS -->
      <map code="0x387" name="anoteleia"/><!-- GREEK ANO TELEIA -->
      <map code="0x388" name="Epsilontonos"/><!-- GREEK CAPITAL LETTER EPSILON WITH TONOS -->
      <map code="0x389" name="Etatonos"/><!-- GREEK CAPITAL LETTER ETA WITH TONOS -->
      <map code="0x38a" name="Iotatonos"/><!-- GREEK CAPITAL LETTER IOTA WITH TONOS -->
      <map code="0x38c" name="Omicrontonos"/><!-- GREEK CAPITAL LETTER OMICRON WITH TONOS -->
      <map code="0x38e" name="Upsilontonos"/><!-- GREEK CAPITAL LETTER UPSILON WITH TONOS -->
      <map code="0x38f" name="Omegatonos"/><!-- GREEK CAPITAL LETTER OMEGA WITH TONOS -->
      <map code="0x390" name="iotadieresistonos"/><!-- GREEK SMALL LETTER IOTA WITH DIALYTIKA AND TONOS -->
      <map code="0x391" name="Alpha"/><!-- GREEK CAPITAL LETTER ALPHA -->
      <map code="0x392" name="Beta"/><!-- GREEK CAPITAL LETTER BETA -->
      <map code="0x393" name="Gamma"/><!-- GREEK CAPITAL LETTER GAMMA -->
      <map code="0x394" name="uni0394"/><!-- GREEK CAPITAL LETTER DELTA -->
      <map code="0x395" name="Epsilon"/><!-- GREEK CAPITAL LETTER EPSILON -->
      <map code="0x396" name="Zeta"/><!-- GREEK CAPITAL LETTER ZETA -->
      <map code="0x397" name="Eta"/><!-- GREEK CAPITAL LETTER ETA -->
      <map code="0x398" name="Theta"/><!-- GREEK CAPITAL LETTER THETA -->
      <map code="0x399" name="Iota"/><!-- GREEK CAPITAL LETTER IOTA -->
      <map code="0x39a" name="Kappa"/><!-- GREEK CAPITAL LETTER KAPPA -->
      <map code="0x39b" name="Lambda"/><!-- GREEK CAPITAL LETTER LAMDA -->
      <map code="0x39c" name="Mu"/><!-- GREEK CAPITAL LETTER MU -->
      <map code="0x39d" name="Nu"/><!-- GREEK CAPITAL LETTER NU -->
      <map code="0x39e" name="Xi"/><!-- GREEK CAPITAL LETTER XI -->
      <map code="0x39f" name="Omicron"/><!-- GREEK CAPITAL LETTER OMICRON -->
      <map code="0x3a0" name="Pi"/><!-- GREEK CAPITAL LETTER PI -->
      <map code="0x3a1" name="Rho"/><!-- GREEK CAPITAL LETTER RHO -->
      <map code="0x3a3" name="Sigma"/><!-- GREEK CAPITAL LETTER SIGMA -->
      <map code="0x3a4" name="Tau"/><!-- GREEK CAPITAL LETTER TAU -->
      <map code="0x3a5" name="Upsilon"/><!-- GREEK CAPITAL LETTER UPSILON -->
      <map code="0x3a6" name="Phi"/><!-- GREEK CAPITAL LETTER PHI -->
      <map code="0x3a7" name="Chi"/><!-- GREEK CAPITAL LETTER CHI -->
      <map code="0x3a8" name="Psi"/><!-- GREEK CAPITAL LETTER PSI -->
      <map code="0x3a9" name="uni03A9"/><!-- GREEK CAPITAL LETTER OMEGA -->
      <map code="0x3aa" name="Iotadieresis"/><!-- GREEK CAPITAL LETTER IOTA WITH DIALYTIKA -->
      <map code="0x3ab" name="Upsilondieresis"/><!-- GREEK CAPITAL LETTER UPSILON WITH DIALYTIKA -->
      <map code="0x3ac" name="alphatonos"/><!-- GREEK SMALL LETTER ALPHA WITH TONOS -->
      <map code="0x3ad" name="epsilontonos"/><!-- GREEK SMALL LETTER EPSILON WITH TONOS -->
      <map code="0x3ae" name="etatonos"/><!-- GREEK SMALL LETTER ETA WITH TONOS -->
      <map code="0x3af" name="iotatonos"/><!-- GREEK SMALL LETTER IOTA WITH TONOS -->
      <map code="0x3b0" name="upsilondieresistonos"/><!-- GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND TONOS -->
      <map code="0x3b1" name="alpha"/><!-- GREEK SMALL LETTER ALPHA -->
      <map code="0x3b2" name="beta"/><!-- GREEK SMALL LETTER BETA -->
      <map code="0x3b3" name="gamma"/><!-- GREEK SMALL LETTER GAMMA -->
      <map code="0x3b4" name="delta"/><!-- GREEK SMALL LETTER DELTA -->
      <map code="0x3b5" name="epsilon"/><!-- GREEK SMALL LETTER EPSILON -->
      <map code="0x3b6" name="zeta"/><!-- GREEK SMALL LETTER ZETA -->
      <map code="0x3b7" name="eta"/><!-- GREEK SMALL LETTER ETA -->
      <map code="0x3b8" name="theta"/><!-- GREEK SMALL LETTER THETA -->
      <map code="0x3b9" name="iota"/><!-- GREEK SMALL LETTER IOTA -->
      <map code="0x3ba" name="kappa"/><!-- GREEK SMALL LETTER KAPPA -->
      <map code="0x3bb" name="lambda"/><!-- GREEK SMALL LETTER LAMDA -->
      <map code="0x3bc" name="uni03BC"/><!-- GREEK SMALL LETTER MU -->
      <map code="0x3bd" name="nu"/><!-- GREEK SMALL LETTER NU -->
      <map code="0x3be" name="xi"/><!-- GREEK SMALL LETTER XI -->
      <map code="0x3bf" name="omicron"/><!-- GREEK SMALL LETTER OMICRON -->
      <map code="0x3c0" name="pi"/><!-- GREEK SMALL LETTER PI -->
      <map code="0x3c1" name="rho"/><!-- GREEK SMALL LETTER RHO -->
      <map code="0x3c2" name="sigma1"/><!-- GREEK SMALL LETTER FINAL SIGMA -->
      <map code="0x3c3" name="sigma"/><!-- GREEK SMALL LETTER SIGMA -->
      <map code="0x3c4" name="tau"/><!-- GREEK SMALL LETTER TAU -->
      <map code="0x3c5" name="upsilon"/><!-- GREEK SMALL LETTER UPSILON -->
      <map code="0x3c6" name="phi"/><!-- GREEK SMALL LETTER PHI -->
      <map code="0x3c7" name="chi"/><!-- GREEK SMALL LETTER CHI -->
      <map code="0x3c8" name="psi"/><!-- GREEK SMALL LETTER PSI -->
      <map code="0x3c9" name="omega"/><!-- GREEK SMALL LETTER OMEGA -->
      <map code="0x3ca" name="iotadieresis"/><!-- GREEK SMALL LETTER IOTA WITH DIALYTIKA -->
      <map code="0x3cb" name="upsilondieresis"/><!-- GREEK SMALL LETTER UPSILON WITH DIALYTIKA -->
      <map code="0x3cc" name="omicrontonos"/><!-- GREEK SMALL LETTER OMICRON WITH TONOS -->
      <map code="0x3cd" name="upsilontonos"/><!-- GREEK SMALL LETTER UPSILON WITH TONOS -->
      <map code="0x3ce" name="omegatonos"/><!-- GREEK SMALL LETTER OMEGA WITH TONOS -->
      <map code="0x3d1" name="theta1"/><!-- GREEK THETA SYMBOL -->
      <map code="0x3d2" name="Upsilon1"/><!-- GREEK UPSILON WITH HOOK SYMBOL -->
      <map code="0x3d6" name="omega1"/><!-- GREEK PI SYMBOL -->
      <map code="0x400" name="uni0400"/><!-- CYRILLIC CAPITAL LETTER IE WITH GRAVE -->
      <map code="0x401" name="uni0401"/><!-- CYRILLIC CAPITAL LETTER IO -->
      <map code="0x402" name="uni0402"/><!-- CYRILLIC CAPITAL LETTER DJE -->
      <map code="0x403" name="uni0403"/><!-- CYRILLIC CAPITAL LETTER GJE -->
      <map code="0x404" name="uni0404"/><!-- CYRILLIC CAPITAL LETTER UKRAINIAN IE -->
      <map code="0x405" name="uni0405"/><!-- CYRILLIC CAPITAL LETTER DZE -->
      <map code="0x406" name="uni0406"/><!-- CYRILLIC CAPITAL LETTER BYELORUSSIAN-UKRAINIAN I -->
      <map code="0x407" name="uni0407"/><!-- CYRILLIC CAPITAL LETTER YI -->
      <map code="0x408" name="uni0408"/><!-- CYRILLIC CAPITAL LETTER JE -->
      <map code="0x409" name="uni0409"/><!-- CYRILLIC CAPITAL LETTER LJE -->
      <map code="0x40a" name="uni040A"/><!-- CYRILLIC CAPITAL LETTER NJE -->
      <map code="0x40b" name="uni040B"/><!-- CYRILLIC CAPITAL LETTER TSHE -->
      <map code="0x40c" name="uni040C"/><!-- CYRILLIC CAPITAL LETTER KJE -->
      <map code="0x40d" name="uni040D"/><!-- CYRILLIC CAPITAL LETTER I WITH GRAVE -->
      <map code="0x40e" name="uni040E"/><!-- CYRILLIC CAPITAL LETTER SHORT U -->
      <map code="0x40f" name="uni040F"/><!-- CYRILLIC CAPITAL LETTER DZHE -->
      <map code="0x410" name="uni0410"/><!-- CYRILLIC CAPITAL LETTER A -->
      <map code="0x411" name="uni0411"/><!-- CYRILLIC CAPITAL LETTER BE -->
      <map code="0x412" name="uni0412"/><!-- CYRILLIC CAPITAL LETTER VE -->
      <map code="0x413" name="uni0413"/><!-- CYRILLIC CAPITAL LETTER GHE -->
      <map code="0x414" name="uni0414"/><!-- CYRILLIC CAPITAL LETTER DE -->
      <map code="0x415" name="uni0415"/><!-- CYRILLIC CAPITAL LETTER IE -->
      <map code="0x416" name="uni0416"/><!-- CYRILLIC CAPITAL LETTER ZHE -->
      <map code="0x417" name="uni0417"/><!-- CYRILLIC CAPITAL LETTER ZE -->
      <map code="0x418" name="uni0418"/><!-- CYRILLIC CAPITAL LETTER I -->
      <map code="0x419" name="uni0419"/><!-- CYRILLIC CAPITAL LETTER SHORT I -->
      <map code="0x41a" name="uni041A"/><!-- CYRILLIC CAPITAL LETTER KA -->
      <map code="0x41b" name="uni041B"/><!-- CYRILLIC CAPITAL LETTER EL -->
      <map code="0x41c" name="uni041C"/><!-- CYRILLIC CAPITAL LETTER EM -->
      <map code="0x41d" name="uni041D"/><!-- CYRILLIC CAPITAL LETTER EN -->
      <map code="0x41e" name="uni041E"/><!-- CYRILLIC CAPITAL LETTER O -->
      <map code="0x41f" name="uni041F"/><!-- CYRILLIC CAPITAL LETTER PE -->
      <map code="0x420" name="uni0420"/><!-- CYRILLIC CAPITAL LETTER ER -->
      <map code="0x421" name="uni0421"/><!-- CYRILLIC CAPITAL LETTER ES -->
      <map code="0x422" name="uni0422"/><!-- CYRILLIC CAPITAL LETTER TE -->
      <map code="0x423" name="uni0423"/><!-- CYRILLIC CAPITAL LETTER U -->
      <map code="0x424" name="uni0424"/><!-- CYRILLIC CAPITAL LETTER EF -->
      <map code="0x425" name="uni0425"/><!-- CYRILLIC CAPITAL LETTER HA -->
      <map code="0x426" name="uni0426"/><!-- CYRILLIC CAPITAL LETTER TSE -->
      <map code="0x427" name="uni0427"/><!-- CYRILLIC CAPITAL LETTER CHE -->
      <map code="0x428" name="uni0428"/><!-- CYRILLIC CAPITAL LETTER SHA -->
      <map code="0x429" name="uni0429"/><!-- CYRILLIC CAPITAL LETTER SHCHA -->
      <map code="0x42a" name="uni042A"/><!-- CYRILLIC CAPITAL LETTER HARD SIGN -->
      <map code="0x42b" name="uni042B"/><!-- CYRILLIC CAPITAL LETTER YERU -->
      <map code="0x42c" name="uni042C"/><!-- CYRILLIC CAPITAL LETTER SOFT SIGN -->
      <map code="0x42d" name="uni042D"/><!-- CYRILLIC CAPITAL LETTER E -->
      <map code="0x42e" name="uni042E"/><!-- CYRILLIC CAPITAL LETTER YU -->
      <map code="0x42f" name="uni042F"/><!-- CYRILLIC CAPITAL LETTER YA -->
      <map code="0x430" name="uni0430"/><!-- CYRILLIC SMALL LETTER A -->
      <map code="0x431" name="uni0431"/><!-- CYRILLIC SMALL LETTER BE -->
      <map code="0x432" name="uni0432"/><!-- CYRILLIC SMALL LETTER VE -->
      <map code="0x433" name="uni0433"/><!-- CYRILLIC SMALL LETTER GHE -->
      <map code="0x434" name="uni0434"/><!-- CYRILLIC SMALL LETTER DE -->
      <map code="0x435" name="uni0435"/><!-- CYRILLIC SMALL LETTER IE -->
      <map code="0x436" name="uni0436"/><!-- CYRILLIC SMALL LETTER ZHE -->
      <map code="0x437" name="uni0437"/><!-- CYRILLIC SMALL LETTER ZE -->
      <map code="0x438" name="uni0438"/><!-- CYRILLIC SMALL LETTER I -->
      <map code="0x439" name="uni0439"/><!-- CYRILLIC SMALL LETTER SHORT I -->
      <map code="0x43a" name="uni043A"/><!-- CYRILLIC SMALL LETTER KA -->
      <map code="0x43b" name="uni043B"/><!-- CYRILLIC SMALL LETTER EL -->
      <map code="0x43c" name="uni043C"/><!-- CYRILLIC SMALL LETTER EM -->
      <map code="0x43d" name="uni043D"/><!-- CYRILLIC SMALL LETTER EN -->
      <map code="0x43e" name="uni043E"/><!-- CYRILLIC SMALL LETTER O -->
      <map code="0x43f" name="uni043F"/><!-- CYRILLIC SMALL LETTER PE -->
      <map code="0x440" name="uni0440"/><!-- CYRILLIC SMALL LETTER ER -->
      <map code="0x441" name="uni0441"/><!-- CYRILLIC SMALL LETTER ES -->
      <map code="0x442" name="uni0442"/><!-- CYRILLIC SMALL LETTER TE -->
      <map code="0x443" name="uni0443"/><!-- CYRILLIC SMALL LETTER U -->
      <map code="0x444" name="uni0444"/><!-- CYRILLIC SMALL LETTER EF -->
      <map code="0x445" name="uni0445"/><!-- CYRILLIC SMALL LETTER HA -->
      <map code="0x446" name="uni0446"/><!-- CYRILLIC SMALL LETTER TSE -->
      <map code="0x447" name="uni0447"/><!-- CYRILLIC SMALL LETTER CHE -->
      <map code="0x448" name="uni0448"/><!-- CYRILLIC SMALL LETTER SHA -->
      <map code="0x449" name="uni0449"/><!-- CYRILLIC SMALL LETTER SHCHA -->
      <map code="0x44a" name="uni044A"/><!-- CYRILLIC SMALL LETTER HARD SIGN -->
      <map code="0x44b" name="uni044B"/><!-- CYRILLIC SMALL LETTER YERU -->
      <map code="0x44c" name="uni044C"/><!-- CYRILLIC SMALL LETTER SOFT SIGN -->
      <map code="0x44d" name="uni044D"/><!-- CYRILLIC SMALL LETTER E -->
      <map code="0x44e" name="uni044E"/><!-- CYRILLIC SMALL LETTER YU -->
      <map code="0x44f" name="uni044F"/><!-- CYRILLIC SMALL LETTER YA -->
      <map code="0x450" name="uni0450"/><!-- CYRILLIC SMALL LETTER IE WITH GRAVE -->
      <map code="0x451" name="uni0451"/><!-- CYRILLIC SMALL LETTER IO -->
      <map code="0x452" name="uni0452"/><!-- CYRILLIC SMALL LETTER DJE -->
      <map code="0x453" name="uni0453"/><!-- CYRILLIC SMALL LETTER GJE -->
      <map code="0x454" name="uni0454"/><!-- CYRILLIC SMALL LETTER UKRAINIAN IE -->
      <map code="0x455" name="uni0455"/><!-- CYRILLIC SMALL LETTER DZE -->
      <map code="0x456" name="uni0456"/><!-- CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I -->
      <map code="0x457" name="uni0457"/><!-- CYRILLIC SMALL LETTER YI -->
      <map code="0x458" name="uni0458"/><!-- CYRILLIC SMALL LETTER JE -->
      <map code="0x459" name="uni0459"/><!-- CYRILLIC SMALL LETTER LJE -->
      <map code="0x45a" name="uni045A"/><!-- CYRILLIC SMALL LETTER NJE -->
      <map code="0x45b" name="uni045B"/><!-- CYRILLIC SMALL LETTER TSHE -->
      <map code="0x45c" name="uni045C"/><!-- CYRILLIC SMALL LETTER KJE -->
      <map code="0x45d" name="uni045D"/><!-- CYRILLIC SMALL LETTER I WITH GRAVE -->
      <map code="0x45e" name="uni045E"/><!-- CYRILLIC SMALL LETTER SHORT U -->
      <map code="0x45f" name="uni045F"/><!-- CYRILLIC SMALL LETTER DZHE -->
      <map code="0x460" name="uni0460"/><!-- CYRILLIC CAPITAL LETTER OMEGA -->
      <map code="0x461" name="uni0461"/><!-- CYRILLIC SMALL LETTER OMEGA -->
      <map code="0x462" name="uni0462"/><!-- CYRILLIC CAPITAL LETTER YAT -->
      <map code="0x463" name="uni0463"/><!-- CYRILLIC SMALL LETTER YAT -->
      <map code="0x464" name="uni0464"/><!-- CYRILLIC CAPITAL LETTER IOTIFIED E -->
      <map code="0x465" name="uni0465"/><!-- CYRILLIC SMALL LETTER IOTIFIED E -->
      <map code="0x466" name="uni0466"/><!-- CYRILLIC CAPITAL LETTER LITTLE YUS -->
      <map code="0x467" name="uni0467"/><!-- CYRILLIC SMALL LETTER LITTLE YUS -->
      <map code="0x468" name="uni0468"/><!-- CYRILLIC CAPITAL LETTER IOTIFIED LITTLE YUS -->
      <map code="0x469" name="uni0469"/><!-- CYRILLIC SMALL LETTER IOTIFIED LITTLE YUS -->
      <map code="0x46a" name="uni046A"/><!-- CYRILLIC CAPITAL LETTER BIG YUS -->
      <map code="0x46b" name="uni046B"/><!-- CYRILLIC SMALL LETTER BIG YUS -->
      <map code="0x46c" name="uni046C"/><!-- CYRILLIC CAPITAL LETTER IOTIFIED BIG YUS -->
      <map code="0x46d" name="uni046D"/><!-- CYRILLIC SMALL LETTER IOTIFIED BIG YUS -->
      <map code="0x46e" name="uni046E"/><!-- CYRILLIC CAPITAL LETTER KSI -->
      <map code="0x46f" name="uni046F"/><!-- CYRILLIC SMALL LETTER KSI -->
      <map code="0x470" name="uni0470"/><!-- CYRILLIC CAPITAL LETTER PSI -->
      <map code="0x471" name="uni0471"/><!-- CYRILLIC SMALL LETTER PSI -->
      <map code="0x472" name="uni0472"/><!-- CYRILLIC CAPITAL LETTER FITA -->
      <map code="0x473" name="uni0473"/><!-- CYRILLIC SMALL LETTER FITA -->
      <map code="0x474" name="uni0474"/><!-- CYRILLIC CAPITAL LETTER IZHITSA -->
      <map code="0x475" name="uni0475"/><!-- CYRILLIC SMALL LETTER IZHITSA -->
      <map code="0x476" name="uni0476"/><!-- CYRILLIC CAPITAL LETTER IZHITSA WITH DOUBLE GRAVE ACCENT -->
      <map code="0x477" name="uni0477"/><!-- CYRILLIC SMALL LETTER IZHITSA WITH DOUBLE GRAVE ACCENT -->
      <map code="0x478" name="uni0478"/><!-- CYRILLIC CAPITAL LETTER UK -->
      <map code="0x479" name="uni0479"/><!-- CYRILLIC SMALL LETTER UK -->
      <map code="0x47a" name="uni047A"/><!-- CYRILLIC CAPITAL LETTER ROUND OMEGA -->
      <map code="0x47b" name="uni047B"/><!-- CYRILLIC SMALL LETTER ROUND OMEGA -->
      <map code="0x47c" name="uni047C"/><!-- CYRILLIC CAPITAL LETTER OMEGA WITH TITLO -->
      <map code="0x47d" name="uni047D"/><!-- CYRILLIC SMALL LETTER OMEGA WITH TITLO -->
      <map code="0x47e" name="uni047E"/><!-- CYRILLIC CAPITAL LETTER OT -->
      <map code="0x47f" name="uni047F"/><!-- CYRILLIC SMALL LETTER OT -->
      <map code="0x480" name="uni0480"/><!-- CYRILLIC CAPITAL LETTER KOPPA -->
      <map code="0x481" name="uni0481"/><!-- CYRILLIC SMALL LETTER KOPPA -->
      <map code="0x482" name="uni0482"/><!-- CYRILLIC THOUSANDS SIGN -->
      <map code="0x483" name="uni0483"/><!-- COMBINING CYRILLIC TITLO -->
      <map code="0x484" name="uni0484"/><!-- COMBINING CYRILLIC PALATALIZATION -->
      <map code="0x485" name="uni0485"/><!-- COMBINING CYRILLIC DASIA PNEUMATA -->
      <map code="0x486" name="uni0486"/><!-- COMBINING CYRILLIC PSILI PNEUMATA -->
      <map code="0x488" name="uni0488"/><!-- COMBINING CYRILLIC HUNDRED THOUSANDS SIGN -->
      <map code="0x489" name="uni0489"/><!-- COMBINING CYRILLIC MILLIONS SIGN -->
      <map code="0x48a" name="uni048A"/><!-- CYRILLIC CAPITAL LETTER SHORT I WITH TAIL -->
      <map code="0x48b" name="uni048B"/><!-- CYRILLIC SMALL LETTER SHORT I WITH TAIL -->
      <map code="0x48c" name="uni048C"/><!-- CYRILLIC CAPITAL LETTER SEMISOFT SIGN -->
      <map code="0x48d" name="uni048D"/><!-- CYRILLIC SMALL LETTER SEMISOFT SIGN -->
      <map code="0x48e" name="uni048E"/><!-- CYRILLIC CAPITAL LETTER ER WITH TICK -->
      <map code="0x48f" name="uni048F"/><!-- CYRILLIC SMALL LETTER ER WITH TICK -->
      <map code="0x490" name="uni0490"/><!-- CYRILLIC CAPITAL LETTER GHE WITH UPTURN -->
      <map code="0x491" name="uni0491"/><!-- CYRILLIC SMALL LETTER GHE WITH UPTURN -->
      <map code="0x492" name="uni0492"/><!-- CYRILLIC CAPITAL LETTER GHE WITH STROKE -->
      <map code="0x493" name="uni0493"/><!-- CYRILLIC SMALL LETTER GHE WITH STROKE -->
      <map code="0x494" name="uni0494"/><!-- CYRILLIC CAPITAL LETTER GHE WITH MIDDLE HOOK -->
      <map code="0x495" name="uni0495"/><!-- CYRILLIC SMALL LETTER GHE WITH MIDDLE HOOK -->
      <map code="0x496" name="uni0496"/><!-- CYRILLIC CAPITAL LETTER ZHE WITH DESCENDER -->
      <map code="0x497" name="uni0497"/><!-- CYRILLIC SMALL LETTER ZHE WITH DESCENDER -->
      <map code="0x498" name="uni0498"/><!-- CYRILLIC CAPITAL LETTER ZE WITH DESCENDER -->
      <map code="0x499" name="uni0499"/><!-- CYRILLIC SMALL LETTER ZE WITH DESCENDER -->
      <map code="0x49a" name="uni049A"/><!-- CYRILLIC CAPITAL LETTER KA WITH DESCENDER -->
      <map code="0x49b" name="uni049B"/><!-- CYRILLIC SMALL LETTER KA WITH DESCENDER -->
      <map code="0x49c" name="uni049C"/><!-- CYRILLIC CAPITAL LETTER KA WITH VERTICAL STROKE -->
      <map code="0x49d" name="uni049D"/><!-- CYRILLIC SMALL LETTER KA WITH VERTICAL STROKE -->
      <map code="0x49e" name="uni049E"/><!-- CYRILLIC CAPITAL LETTER KA WITH STROKE -->
      <map code="0x49f" name="uni049F"/><!-- CYRILLIC SMALL LETTER KA WITH STROKE -->
      <map code="0x4a0" name="uni04A0"/><!-- CYRILLIC CAPITAL LETTER BASHKIR KA -->
      <map code="0x4a1" name="uni04A1"/><!-- CYRILLIC SMALL LETTER BASHKIR KA -->
      <map code="0x4a2" name="uni04A2"/><!-- CYRILLIC CAPITAL LETTER EN WITH DESCENDER -->
      <map code="0x4a3" name="uni04A3"/><!-- CYRILLIC SMALL LETTER EN WITH DESCENDER -->
      <map code="0x4a4" name="uni04A4"/><!-- CYRILLIC CAPITAL LIGATURE EN GHE -->
      <map code="0x4a5" name="uni04A5"/><!-- CYRILLIC SMALL LIGATURE EN GHE -->
      <map code="0x4a6" name="uni04A6"/><!-- CYRILLIC CAPITAL LETTER PE WITH MIDDLE HOOK -->
      <map code="0x4a7" name="uni04A7"/><!-- CYRILLIC SMALL LETTER PE WITH MIDDLE HOOK -->
      <map code="0x4a8" name="uni04A8"/><!-- CYRILLIC CAPITAL LETTER ABKHASIAN HA -->
      <map code="0x4a9" name="uni04A9"/><!-- CYRILLIC SMALL LETTER ABKHASIAN HA -->
      <map code="0x4aa" name="uni04AA"/><!-- CYRILLIC CAPITAL LETTER ES WITH DESCENDER -->
      <map code="0x4ab" name="uni04AB"/><!-- CYRILLIC SMALL LETTER ES WITH DESCENDER -->
      <map code="0x4ac" name="uni04AC"/><!-- CYRILLIC CAPITAL LETTER TE WITH DESCENDER -->
      <map code="0x4ad" name="uni04AD"/><!-- CYRILLIC SMALL LETTER TE WITH DESCENDER -->
      <map code="0x4ae" name="uni04AE"/><!-- CYRILLIC CAPITAL LETTER STRAIGHT U -->
      <map code="0x4af" name="uni04AF"/><!-- CYRILLIC SMALL LETTER STRAIGHT U -->
      <map code="0x4b0" name="uni04B0"/><!-- CYRILLIC CAPITAL LETTER STRAIGHT U WITH STROKE -->
      <map code="0x4b1" name="uni04B1"/><!-- CYRILLIC SMALL LETTER STRAIGHT U WITH STROKE -->
      <map code="0x4b2" name="uni04B2"/><!-- CYRILLIC CAPITAL LETTER HA WITH DESCENDER -->
      <map code="0x4b3" name="uni04B3"/><!-- CYRILLIC SMALL LETTER HA WITH DESCENDER -->
      <map code="0x4b4" name="uni04B4"/><!-- CYRILLIC CAPITAL LIGATURE TE TSE -->
      <map code="0x4b5" name="uni04B5"/><!-- CYRILLIC SMALL LIGATURE TE TSE -->
      <map code="0x4b6" name="uni04B6"/><!-- CYRILLIC CAPITAL LETTER CHE WITH DESCENDER -->
      <map code="0x4b7" name="uni04B7"/><!-- CYRILLIC SMALL LETTER CHE WITH DESCENDER -->
      <map code="0x4b8" name="uni04B8"/><!-- CYRILLIC CAPITAL LETTER CHE WITH VERTICAL STROKE -->
      <map code="0x4b9" name="uni04B9"/><!-- CYRILLIC SMALL LETTER CHE WITH VERTICAL STROKE -->
      <map code="0x4ba" name="uni04BA"/><!-- CYRILLIC CAPITAL LETTER SHHA -->
      <map code="0x4bb" name="uni04BB"/><!-- CYRILLIC SMALL LETTER SHHA -->
      <map code="0x4bc" name="uni04BC"/><!-- CYRILLIC CAPITAL LETTER ABKHASIAN CHE -->
      <map code="0x4bd" name="uni04BD"/><!-- CYRILLIC SMALL LETTER ABKHASIAN CHE -->
      <map code="0x4be" name="uni04BE"/><!-- CYRILLIC CAPITAL LETTER ABKHASIAN CHE WITH DESCENDER -->
      <map code="0x4bf" name="uni04BF"/><!-- CYRILLIC SMALL LETTER ABKHASIAN CHE WITH DESCENDER -->
      <map code="0x4c0" name="uni04C0"/><!-- CYRILLIC LETTER PALOCHKA -->
      <map code="0x4c1" name="uni04C1"/><!-- CYRILLIC CAPITAL LETTER ZHE WITH BREVE -->
      <map code="0x4c2" name="uni04C2"/><!-- CYRILLIC SMALL LETTER ZHE WITH BREVE -->
      <map code="0x4c3" name="uni04C3"/><!-- CYRILLIC CAPITAL LETTER KA WITH HOOK -->
      <map code="0x4c4" name="uni04C4"/><!-- CYRILLIC SMALL LETTER KA WITH HOOK -->
      <map code="0x4c5" name="uni04C5"/><!-- CYRILLIC CAPITAL LETTER EL WITH TAIL -->
      <map code="0x4c6" name="uni04C6"/><!-- CYRILLIC SMALL LETTER EL WITH TAIL -->
      <map code="0x4c7" name="uni04C7"/><!-- CYRILLIC CAPITAL LETTER EN WITH HOOK -->
      <map code="0x4c8" name="uni04C8"/><!-- CYRILLIC SMALL LETTER EN WITH HOOK -->
      <map code="0x4c9" name="uni04C9"/><!-- CYRILLIC CAPITAL LETTER EN WITH TAIL -->
      <map code="0x4ca" name="uni04CA"/><!-- CYRILLIC SMALL LETTER EN WITH TAIL -->
      <map code="0x4cb" name="uni04CB"/><!-- CYRILLIC CAPITAL LETTER KHAKASSIAN CHE -->
      <map code="0x4cc" name="uni04CC"/><!-- CYRILLIC SMALL LETTER KHAKASSIAN CHE -->
      <map code="0x4cd" name="uni04CD"/><!-- CYRILLIC CAPITAL LETTER EM WITH TAIL -->
      <map code="0x4ce" name="uni04CE"/><!-- CYRILLIC SMALL LETTER EM WITH TAIL -->
      <map code="0x4cf" name="uni04CF"/><!-- CYRILLIC SMALL LETTER PALOCHKA -->
      <map code="0x4d0" name="uni04D0"/><!-- CYRILLIC CAPITAL LETTER A WITH BREVE -->
      <map code="0x4d1" name="uni04D1"/><!-- CYRILLIC SMALL LETTER A WITH BREVE -->
      <map code="0x4d2" name="uni04D2"/><!-- CYRILLIC CAPITAL LETTER A WITH DIAERESIS -->
      <map code="0x4d3" name="uni04D3"/><!-- CYRILLIC SMALL LETTER A WITH DIAERESIS -->
      <map code="0x4d4" name="uni04D4"/><!-- CYRILLIC CAPITAL LIGATURE A IE -->
      <map code="0x4d5" name="uni04D5"/><!-- CYRILLIC SMALL LIGATURE A IE -->
      <map code="0x4d6" name="uni04D6"/><!-- CYRILLIC CAPITAL LETTER IE WITH BREVE -->
      <map code="0x4d7" name="uni04D7"/><!-- CYRILLIC SMALL LETTER IE WITH BREVE -->
      <map code="0x4d8" name="uni04D8"/><!-- CYRILLIC CAPITAL LETTER SCHWA -->
      <map code="0x4d9" name="uni04D9"/><!-- CYRILLIC SMALL LETTER SCHWA -->
      <map code="0x4da" name="uni04DA"/><!-- CYRILLIC CAPITAL LETTER SCHWA WITH DIAERESIS -->
      <map code="0x4db" name="uni04DB"/><!-- CYRILLIC SMALL LETTER SCHWA WITH DIAERESIS -->
      <map code="0x4dc" name="uni04DC"/><!-- CYRILLIC CAPITAL LETTER ZHE WITH DIAERESIS -->
      <map code="0x4dd" name="uni04DD"/><!-- CYRILLIC SMALL LETTER ZHE WITH DIAERESIS -->
      <map code="0x4de" name="uni04DE"/><!-- CYRILLIC CAPITAL LETTER ZE WITH DIAERESIS -->
      <map code="0x4df" name="uni04DF"/><!-- CYRILLIC SMALL LETTER ZE WITH DIAERESIS -->
      <map code="0x4e0" name="uni04E0"/><!-- CYRILLIC CAPITAL LETTER ABKHASIAN DZE -->
      <map code="0x4e1" name="uni04E1"/><!-- CYRILLIC SMALL LETTER ABKHASIAN DZE -->
      <map code="0x4e2" name="uni04E2"/><!-- CYRILLIC CAPITAL LETTER I WITH MACRON -->
      <map code="0x4e3" name="uni04E3"/><!-- CYRILLIC SMALL LETTER I WITH MACRON -->
      <map code="0x4e4" name="uni04E4"/><!-- CYRILLIC CAPITAL LETTER I WITH DIAERESIS -->
      <map code="0x4e5" name="uni04E5"/><!-- CYRILLIC SMALL LETTER I WITH DIAERESIS -->
      <map code="0x4e6" name="uni04E6"/><!-- CYRILLIC CAPITAL LETTER O WITH DIAERESIS -->
      <map code="0x4e7" name="uni04E7"/><!-- CYRILLIC SMALL LETTER O WITH DIAERESIS -->
      <map code="0x4e8" name="uni04E8"/><!-- CYRILLIC CAPITAL LETTER BARRED O -->
      <map code="0x4e9" name="uni04E9"/><!-- CYRILLIC SMALL LETTER BARRED O -->
      <map code="0x4ea" name="uni04EA"/><!-- CYRILLIC CAPITAL LETTER BARRED O WITH DIAERESIS -->
      <map code="0x4eb" name="uni04EB"/><!-- CYRILLIC SMALL LETTER BARRED O WITH DIAERESIS -->
      <map code="0x4ec" name="uni04EC"/><!-- CYRILLIC CAPITAL LETTER E WITH DIAERESIS -->
      <map code="0x4ed" name="uni04ED"/><!-- CYRILLIC SMALL LETTER E WITH DIAERESIS -->
      <map code="0x4ee" name="uni04EE"/><!-- CYRILLIC CAPITAL LETTER U WITH MACRON -->
      <map code="0x4ef" name="uni04EF"/><!-- CYRILLIC SMALL LETTER U WITH MACRON -->
      <map code="0x4f0" name="uni04F0"/><!-- CYRILLIC CAPITAL LETTER U WITH DIAERESIS -->
      <map code="0x4f1" name="uni04F1"/><!-- CYRILLIC SMALL LETTER U WITH DIAERESIS -->
      <map code="0x4f2" name="uni04F2"/><!-- CYRILLIC CAPITAL LETTER U WITH DOUBLE ACUTE -->
      <map code="0x4f3" name="uni04F3"/><!-- CYRILLIC SMALL LETTER U WITH DOUBLE ACUTE -->
      <map code="0x4f4" name="uni04F4"/><!-- CYRILLIC CAPITAL LETTER CHE WITH DIAERESIS -->
      <map code="0x4f5" name="uni04F5"/><!-- CYRILLIC SMALL LETTER CHE WITH DIAERESIS -->
      <map code="0x4f6" name="uni04F6"/><!-- CYRILLIC CAPITAL LETTER GHE WITH DESCENDER -->
      <map code="0x4f7" name="uni04F7"/><!-- CYRILLIC SMALL LETTER GHE WITH DESCENDER -->
      <map code="0x4f8" name="uni04F8"/><!-- CYRILLIC CAPITAL LETTER YERU WITH DIAERESIS -->
      <map code="0x4f9" name="uni04F9"/><!-- CYRILLIC SMALL LETTER YERU WITH DIAERESIS -->
      <map code="0x4fa" name="uni04FA"/><!-- CYRILLIC CAPITAL LETTER GHE WITH STROKE AND HOOK -->
      <map code="0x4fb" name="uni04FB"/><!-- CYRILLIC SMALL LETTER GHE WITH STROKE AND HOOK -->
      <map code="0x4fc" name="uni04FC"/><!-- CYRILLIC CAPITAL LETTER HA WITH HOOK -->
      <map code="0x4fd" name="uni04FD"/><!-- CYRILLIC SMALL LETTER HA WITH HOOK -->
      <map code="0x4fe" name="uni04FE"/><!-- CYRILLIC CAPITAL LETTER HA WITH STROKE -->
      <map code="0x4ff" name="uni04FF"/><!-- CYRILLIC SMALL LETTER HA WITH STROKE -->
      <map code="0x500" name="uni0500"/><!-- CYRILLIC CAPITAL LETTER KOMI DE -->
      <map code="0x501" name="uni0501"/><!-- CYRILLIC SMALL LETTER KOMI DE -->
      <map code="0x502" name="uni0502"/><!-- CYRILLIC CAPITAL LETTER KOMI DJE -->
      <map code="0x503" name="uni0503"/><!-- CYRILLIC SMALL LETTER KOMI DJE -->
      <map code="0x504" name="uni0504"/><!-- CYRILLIC CAPITAL LETTER KOMI ZJE -->
      <map code="0x505" name="uni0505"/><!-- CYRILLIC SMALL LETTER KOMI ZJE -->
      <map code="0x506" name="uni0506"/><!-- CYRILLIC CAPITAL LETTER KOMI DZJE -->
      <map code="0x507" name="uni0507"/><!-- CYRILLIC SMALL LETTER KOMI DZJE -->
      <map code="0x508" name="uni0508"/><!-- CYRILLIC CAPITAL LETTER KOMI LJE -->
      <map code="0x509" name="uni0509"/><!-- CYRILLIC SMALL LETTER KOMI LJE -->
      <map code="0x50a" name="uni050A"/><!-- CYRILLIC CAPITAL LETTER KOMI NJE -->
      <map code="0x50b" name="uni050B"/><!-- CYRILLIC SMALL LETTER KOMI NJE -->
      <map code="0x50c" name="uni050C"/><!-- CYRILLIC CAPITAL LETTER KOMI SJE -->
      <map code="0x50d" name="uni050D"/><!-- CYRILLIC SMALL LETTER KOMI SJE -->
      <map code="0x50e" name="uni050E"/><!-- CYRILLIC CAPITAL LETTER KOMI TJE -->
      <map code="0x50f" name="uni050F"/><!-- CYRILLIC SMALL LETTER KOMI TJE -->
      <map code="0x510" name="uni0510"/><!-- CYRILLIC CAPITAL LETTER REVERSED ZE -->
      <map code="0x511" name="uni0511"/><!-- CYRILLIC SMALL LETTER REVERSED ZE -->
      <map code="0x512" name="uni0512"/><!-- CYRILLIC CAPITAL LETTER EL WITH HOOK -->
      <map code="0x513" name="uni0513"/><!-- CYRILLIC SMALL LETTER EL WITH HOOK -->
      <map code="0x1e00" name="uni1E00"/><!-- LATIN CAPITAL LETTER A WITH RING BELOW -->
      <map code="0x1e01" name="uni1E01"/><!-- LATIN SMALL LETTER A WITH RING BELOW -->
      <map code="0x1e3e" name="uni1E3E"/><!-- LATIN CAPITAL LETTER M WITH ACUTE -->
      <map code="0x1e3f" name="uni1E3F"/><!-- LATIN SMALL LETTER M WITH ACUTE -->
      <map code="0x1e80" name="Wgrave"/><!-- LATIN CAPITAL LETTER W WITH GRAVE -->
      <map code="0x1e81" name="wgrave"/><!-- LATIN SMALL LETTER W WITH GRAVE -->
      <map code="0x1e82" name="Wacute"/><!-- LATIN CAPITAL LETTER W WITH ACUTE -->
      <map code="0x1e83" name="wacute"/><!-- LATIN SMALL LETTER W WITH ACUTE -->
      <map code="0x1e84" name="Wdieresis"/><!-- LATIN CAPITAL LETTER W WITH DIAERESIS -->
      <map code="0x1e85" name="wdieresis"/><!-- LATIN SMALL LETTER W WITH DIAERESIS -->
      <map code="0x1ea0" name="uni1EA0"/><!-- LATIN CAPITAL LETTER A WITH DOT BELOW -->
      <map code="0x1ea1" name="uni1EA1"/><!-- LATIN SMALL LETTER A WITH DOT BELOW -->
      <map code="0x1ea2" name="uni1EA2"/><!-- LATIN CAPITAL LETTER A WITH HOOK ABOVE -->
      <map code="0x1ea3" name="uni1EA3"/><!-- LATIN SMALL LETTER A WITH HOOK ABOVE -->
      <map code="0x1ea4" name="uni1EA4"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND ACUTE -->
      <map code="0x1ea5" name="uni1EA5"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX AND ACUTE -->
      <map code="0x1ea6" name="uni1EA6"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND GRAVE -->
      <map code="0x1ea7" name="uni1EA7"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX AND GRAVE -->
      <map code="0x1ea8" name="uni1EA8"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND HOOK ABOVE -->
      <map code="0x1ea9" name="uni1EA9"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX AND HOOK ABOVE -->
      <map code="0x1eaa" name="uni1EAA"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND TILDE -->
      <map code="0x1eab" name="uni1EAB"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX AND TILDE -->
      <map code="0x1eac" name="uni1EAC"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND DOT BELOW -->
      <map code="0x1ead" name="uni1EAD"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX AND DOT BELOW -->
      <map code="0x1eae" name="uni1EAE"/><!-- LATIN CAPITAL LETTER A WITH BREVE AND ACUTE -->
      <map code="0x1eaf" name="uni1EAF"/><!-- LATIN SMALL LETTER A WITH BREVE AND ACUTE -->
      <map code="0x1eb0" name="uni1EB0"/><!-- LATIN CAPITAL LETTER A WITH BREVE AND GRAVE -->
      <map code="0x1eb1" name="uni1EB1"/><!-- LATIN SMALL LETTER A WITH BREVE AND GRAVE -->
      <map code="0x1eb2" name="uni1EB2"/><!-- LATIN CAPITAL LETTER A WITH BREVE AND HOOK ABOVE -->
      <map code="0x1eb3" name="uni1EB3"/><!-- LATIN SMALL LETTER A WITH BREVE AND HOOK ABOVE -->
      <map code="0x1eb4" name="uni1EB4"/><!-- LATIN CAPITAL LETTER A WITH BREVE AND TILDE -->
      <map code="0x1eb5" name="uni1EB5"/><!-- LATIN SMALL LETTER A WITH BREVE AND TILDE -->
      <map code="0x1eb6" name="uni1EB6"/><!-- LATIN CAPITAL LETTER A WITH BREVE AND DOT BELOW -->
      <map code="0x1eb7" name="uni1EB7"/><!-- LATIN SMALL LETTER A WITH BREVE AND DOT BELOW -->
      <map code="0x1eb8" name="uni1EB8"/><!-- LATIN CAPITAL LETTER E WITH DOT BELOW -->
      <map code="0x1eb9" name="uni1EB9"/><!-- LATIN SMALL LETTER E WITH DOT BELOW -->
      <map code="0x1eba" name="uni1EBA"/><!-- LATIN CAPITAL LETTER E WITH HOOK ABOVE -->
      <map code="0x1ebb" name="uni1EBB"/><!-- LATIN SMALL LETTER E WITH HOOK ABOVE -->
      <map code="0x1ebc" name="uni1EBC"/><!-- LATIN CAPITAL LETTER E WITH TILDE -->
      <map code="0x1ebd" name="uni1EBD"/><!-- LATIN SMALL LETTER E WITH TILDE -->
      <map code="0x1ebe" name="uni1EBE"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND ACUTE -->
      <map code="0x1ebf" name="uni1EBF"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX AND ACUTE -->
      <map code="0x1ec0" name="uni1EC0"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND GRAVE -->
      <map code="0x1ec1" name="uni1EC1"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX AND GRAVE -->
      <map code="0x1ec2" name="uni1EC2"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND HOOK ABOVE -->
      <map code="0x1ec3" name="uni1EC3"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX AND HOOK ABOVE -->
      <map code="0x1ec4" name="uni1EC4"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND TILDE -->
      <map code="0x1ec5" name="uni1EC5"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX AND TILDE -->
      <map code="0x1ec6" name="uni1EC6"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND DOT BELOW -->
      <map code="0x1ec7" name="uni1EC7"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX AND DOT BELOW -->
      <map code="0x1ec8" name="uni1EC8"/><!-- LATIN CAPITAL LETTER I WITH HOOK ABOVE -->
      <map code="0x1ec9" name="uni1EC9"/><!-- LATIN SMALL LETTER I WITH HOOK ABOVE -->
      <map code="0x1eca" name="uni1ECA"/><!-- LATIN CAPITAL LETTER I WITH DOT BELOW -->
      <map code="0x1ecb" name="uni1ECB"/><!-- LATIN SMALL LETTER I WITH DOT BELOW -->
      <map code="0x1ecc" name="uni1ECC"/><!-- LATIN CAPITAL LETTER O WITH DOT BELOW -->
      <map code="0x1ecd" name="uni1ECD"/><!-- LATIN SMALL LETTER O WITH DOT BELOW -->
      <map code="0x1ece" name="uni1ECE"/><!-- LATIN CAPITAL LETTER O WITH HOOK ABOVE -->
      <map code="0x1ecf" name="uni1ECF"/><!-- LATIN SMALL LETTER O WITH HOOK ABOVE -->
      <map code="0x1ed0" name="uni1ED0"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND ACUTE -->
      <map code="0x1ed1" name="uni1ED1"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX AND ACUTE -->
      <map code="0x1ed2" name="uni1ED2"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND GRAVE -->
      <map code="0x1ed3" name="uni1ED3"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX AND GRAVE -->
      <map code="0x1ed4" name="uni1ED4"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND HOOK ABOVE -->
      <map code="0x1ed5" name="uni1ED5"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX AND HOOK ABOVE -->
      <map code="0x1ed6" name="uni1ED6"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND TILDE -->
      <map code="0x1ed7" name="uni1ED7"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX AND TILDE -->
      <map code="0x1ed8" name="uni1ED8"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND DOT BELOW -->
      <map code="0x1ed9" name="uni1ED9"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX AND DOT BELOW -->
      <map code="0x1eda" name="uni1EDA"/><!-- LATIN CAPITAL LETTER O WITH HORN AND ACUTE -->
      <map code="0x1edb" name="uni1EDB"/><!-- LATIN SMALL LETTER O WITH HORN AND ACUTE -->
      <map code="0x1edc" name="uni1EDC"/><!-- LATIN CAPITAL LETTER O WITH HORN AND GRAVE -->
      <map code="0x1edd" name="uni1EDD"/><!-- LATIN SMALL LETTER O WITH HORN AND GRAVE -->
      <map code="0x1ede" name="uni1EDE"/><!-- LATIN CAPITAL LETTER O WITH HORN AND HOOK ABOVE -->
      <map code="0x1edf" name="uni1EDF"/><!-- LATIN SMALL LETTER O WITH HORN AND HOOK ABOVE -->
      <map code="0x1ee0" name="uni1EE0"/><!-- LATIN CAPITAL LETTER O WITH HORN AND TILDE -->
      <map code="0x1ee1" name="uni1EE1"/><!-- LATIN SMALL LETTER O WITH HORN AND TILDE -->
      <map code="0x1ee2" name="uni1EE2"/><!-- LATIN CAPITAL LETTER O WITH HORN AND DOT BELOW -->
      <map code="0x1ee3" name="uni1EE3"/><!-- LATIN SMALL LETTER O WITH HORN AND DOT BELOW -->
      <map code="0x1ee4" name="uni1EE4"/><!-- LATIN CAPITAL LETTER U WITH DOT BELOW -->
      <map code="0x1ee5" name="uni1EE5"/><!-- LATIN SMALL LETTER U WITH DOT BELOW -->
      <map code="0x1ee6" name="uni1EE6"/><!-- LATIN CAPITAL LETTER U WITH HOOK ABOVE -->
      <map code="0x1ee7" name="uni1EE7"/><!-- LATIN SMALL LETTER U WITH HOOK ABOVE -->
      <map code="0x1ee8" name="uni1EE8"/><!-- LATIN CAPITAL LETTER U WITH HORN AND ACUTE -->
      <map code="0x1ee9" name="uni1EE9"/><!-- LATIN SMALL LETTER U WITH HORN AND ACUTE -->
      <map code="0x1eea" name="uni1EEA"/><!-- LATIN CAPITAL LETTER U WITH HORN AND GRAVE -->
      <map code="0x1eeb" name="uni1EEB"/><!-- LATIN SMALL LETTER U WITH HORN AND GRAVE -->
      <map code="0x1eec" name="uni1EEC"/><!-- LATIN CAPITAL LETTER U WITH HORN AND HOOK ABOVE -->
      <map code="0x1eed" name="uni1EED"/><!-- LATIN SMALL LETTER U WITH HORN AND HOOK ABOVE -->
      <map code="0x1eee" name="uni1EEE"/><!-- LATIN CAPITAL LETTER U WITH HORN AND TILDE -->
      <map code="0x1eef" name="uni1EEF"/><!-- LATIN SMALL LETTER U WITH HORN AND TILDE -->
      <map code="0x1ef0" name="uni1EF0"/><!-- LATIN CAPITAL LETTER U WITH HORN AND DOT BELOW -->
      <map code="0x1ef1" name="uni1EF1"/><!-- LATIN SMALL LETTER U WITH HORN AND DOT BELOW -->
      <map code="0x1ef2" name="Ygrave"/><!-- LATIN CAPITAL LETTER Y WITH GRAVE -->
      <map code="0x1ef3" name="ygrave"/><!-- LATIN SMALL LETTER Y WITH GRAVE -->
      <map code="0x1ef4" name="uni1EF4"/><!-- LATIN CAPITAL LETTER Y WITH DOT BELOW -->
      <map code="0x1ef5" name="uni1EF5"/><!-- LATIN SMALL LETTER Y WITH DOT BELOW -->
      <map code="0x1ef6" name="uni1EF6"/><!-- LATIN CAPITAL LETTER Y WITH HOOK ABOVE -->
      <map code="0x1ef7" name="uni1EF7"/><!-- LATIN SMALL LETTER Y WITH HOOK ABOVE -->
      <map code="0x1ef8" name="uni1EF8"/><!-- LATIN CAPITAL LETTER Y WITH TILDE -->
      <map code="0x1ef9" name="uni1EF9"/><!-- LATIN SMALL LETTER Y WITH TILDE -->
      <map code="0x1f4d" name="uni1F4D"/><!-- GREEK CAPITAL LETTER OMICRON WITH DASIA AND OXIA -->
      <map code="0x2000" name="uni2000"/><!-- EN QUAD -->
      <map code="0x2001" name="uni2001"/><!-- EM QUAD -->
      <map code="0x2002" name="uni2002"/><!-- EN SPACE -->
      <map code="0x2003" name="uni2003"/><!-- EM SPACE -->
      <map code="0x2004" name="uni2004"/><!-- THREE-PER-EM SPACE -->
      <map code="0x2005" name="uni2005"/><!-- FOUR-PER-EM SPACE -->
      <map code="0x2006" name="uni2006"/><!-- SIX-PER-EM SPACE -->
      <map code="0x2007" name="uni2007"/><!-- FIGURE SPACE -->
      <map code="0x2008" name="uni2008"/><!-- PUNCTUATION SPACE -->
      <map code="0x2009" name="uni2009"/><!-- THIN SPACE -->
      <map code="0x200a" name="uni200A"/><!-- HAIR SPACE -->
      <map code="0x200b" name="uni200B"/><!-- ZERO WIDTH SPACE -->
      <map code="0x2010" name="uni2010"/><!-- HYPHEN -->
      <map code="0x2011" name="uni2011"/><!-- NON-BREAKING HYPHEN -->
      <map code="0x2013" name="endash"/><!-- EN DASH -->
      <map code="0x2014" name="emdash"/><!-- EM DASH -->
      <map code="0x2015" name="uni2015"/><!-- HORIZONTAL BAR -->
      <map code="0x2017" name="underscoredbl"/><!-- DOUBLE LOW LINE -->
      <map code="0x2018" name="quoteleft"/><!-- LEFT SINGLE QUOTATION MARK -->
      <map code="0x2019" name="quoteright"/><!-- RIGHT SINGLE QUOTATION MARK -->
      <map code="0x201a" name="quotesinglbase"/><!-- SINGLE LOW-9 QUOTATION MARK -->
      <map code="0x201b" name="quotereversed"/><!-- SINGLE HIGH-REVERSED-9 QUOTATION MARK -->
      <map code="0x201c" name="quotedblleft"/><!-- LEFT DOUBLE QUOTATION MARK -->
      <map code="0x201d" name="quotedblright"/><!-- RIGHT DOUBLE QUOTATION MARK -->
      <map code="0x201e" name="quotedblbase"/><!-- DOUBLE LOW-9 QUOTATION MARK -->
      <map code="0x2020" name="dagger"/><!-- DAGGER -->
      <map code="0x2021" name="daggerdbl"/><!-- DOUBLE DAGGER -->
      <map code="0x2022" name="bullet"/><!-- BULLET -->
      <map code="0x2025" name="twodotenleader"/><!-- TWO DOT LEADER -->
      <map code="0x2026" name="ellipsis"/><!-- HORIZONTAL ELLIPSIS -->
      <map code="0x2027" name="uni2027"/><!-- HYPHENATION POINT -->
      <map code="0x2030" name="perthousand"/><!-- PER MILLE SIGN -->
      <map code="0x2032" name="minute"/><!-- PRIME -->
      <map code="0x2033" name="second"/><!-- DOUBLE PRIME -->
      <map code="0x2039" name="guilsinglleft"/><!-- SINGLE LEFT-POINTING ANGLE QUOTATION MARK -->
      <map code="0x203a" name="guilsinglright"/><!-- SINGLE RIGHT-POINTING ANGLE QUOTATION MARK -->
      <map code="0x203c" name="exclamdbl"/><!-- DOUBLE EXCLAMATION MARK -->
      <map code="0x2044" name="fraction"/><!-- FRACTION SLASH -->
      <map code="0x2074" name="uni2074"/><!-- SUPERSCRIPT FOUR -->
      <map code="0x207f" name="uni207F"/><!-- SUPERSCRIPT LATIN SMALL LETTER N -->
      <map code="0x20a3" name="franc"/><!-- FRENCH FRANC SIGN -->
      <map code="0x20a4" name="lira"/><!-- LIRA SIGN -->
      <map code="0x20a6" name="uni20A6"/><!-- NAIRA SIGN -->
      <map code="0x20a7" name="peseta"/><!-- PESETA SIGN -->
      <map code="0x20a8" name="uni20A8"/><!-- RUPEE SIGN -->
      <map code="0x20a9" name="uni20A9"/><!-- WON SIGN -->
      <map code="0x20aa" name="uni20AA"/><!-- NEW SHEQEL SIGN -->
      <map code="0x20ab" name="dong"/><!-- DONG SIGN -->
      <map code="0x20ac" name="Euro"/><!-- EURO SIGN -->
      <map code="0x20b1" name="uni20B1"/><!-- PESO SIGN -->
      <map code="0x20b9" name="uni20B9"/><!-- ???? -->
      <map code="0x20ba" name="uni20BA"/><!-- ???? -->
      <map code="0x20bc" name="uni20BC"/><!-- ???? -->
      <map code="0x20bd" name="uni20BD"/><!-- ???? -->
      <map code="0x2105" name="uni2105"/><!-- CARE OF -->
      <map code="0x2113" name="uni2113"/><!-- SCRIPT SMALL L -->
      <map code="0x2116" name="uni2116"/><!-- NUMERO SIGN -->
      <map code="0x2122" name="trademark"/><!-- TRADE MARK SIGN -->
      <map code="0x2126" name="uni03A9"/><!-- OHM SIGN -->
      <map code="0x212e" name="estimated"/><!-- ESTIMATED SYMBOL -->
      <map code="0x215b" name="oneeighth"/><!-- VULGAR FRACTION ONE EIGHTH -->
      <map code="0x215c" name="threeeighths"/><!-- VULGAR FRACTION THREE EIGHTHS -->
      <map code="0x215d" name="fiveeighths"/><!-- VULGAR FRACTION FIVE EIGHTHS -->
      <map code="0x215e" name="seveneighths"/><!-- VULGAR FRACTION SEVEN EIGHTHS -->
      <map code="0x2202" name="partialdiff"/><!-- PARTIAL DIFFERENTIAL -->
      <map code="0x2206" name="uni0394"/><!-- INCREMENT -->
      <map code="0x220f" name="product"/><!-- N-ARY PRODUCT -->
      <map code="0x2211" name="summation"/><!-- N-ARY SUMMATION -->
      <map code="0x2212" name="minus"/><!-- MINUS SIGN -->
      <map code="0x221a" name="radical"/><!-- SQUARE ROOT -->
      <map code="0x221e" name="infinity"/><!-- INFINITY -->
      <map code="0x222b" name="integral"/><!-- INTEGRAL -->
      <map code="0x2248" name="approxequal"/><!-- ALMOST EQUAL TO -->
      <map code="0x2260" name="notequal"/><!-- NOT EQUAL TO -->
      <map code="0x2264" name="lessequal"/><!-- LESS-THAN OR EQUAL TO -->
      <map code="0x2265" name="greaterequal"/><!-- GREATER-THAN OR EQUAL TO -->
      <map code="0x25ca" name="lozenge"/><!-- LOZENGE -->
      <map code="0xee01" name="uniEE01"/><!-- ???? -->
      <map code="0xee02" name="uniEE02"/><!-- ???? -->
      <map code="0xf6c3" name="uniF6C3"/><!-- ???? -->
      <map code="0xfb01" name="uniFB01"/><!-- LATIN SMALL LIGATURE FI -->
      <map code="0xfb02" name="uniFB02"/><!-- LATIN SMALL LIGATURE FL -->
      <map code="0xfb03" name="uniFB03"/><!-- LATIN SMALL LIGATURE FFI -->
      <map code="0xfb04" name="uniFB04"/><!-- LATIN SMALL LIGATURE FFL -->
      <map code="0xfeff" name="uniFEFF"/><!-- ZERO WIDTH NO-BREAK SPACE -->
      <map code="0xfffc" name="uniFFFC"/><!-- OBJECT REPLACEMENT CHARACTER -->
      <map code="0xfffd" name="uniFFFD"/><!-- REPLACEMENT CHARACTER -->
    </cmap_format_4>
    <cmap_format_12 platformID="3" platEncID="10" format="12" reserved="0" length="3004" language="0" nGroups="249">
      <map code="0x0" name="uni0000"/><!-- ???? -->
      <map code="0x2" name="uni0002"/><!-- ???? -->
      <map code="0xd" name="uni000D"/><!-- ???? -->
      <map code="0x20" name="space"/><!-- SPACE -->
      <map code="0x21" name="exclam"/><!-- EXCLAMATION MARK -->
      <map code="0x22" name="quotedbl"/><!-- QUOTATION MARK -->
      <map code="0x23" name="numbersign"/><!-- NUMBER SIGN -->
      <map code="0x24" name="dollar"/><!-- DOLLAR SIGN -->
      <map code="0x25" name="percent"/><!-- PERCENT SIGN -->
      <map code="0x26" name="ampersand"/><!-- AMPERSAND -->
      <map code="0x27" name="quotesingle"/><!-- APOSTROPHE -->
      <map code="0x28" name="parenleft"/><!-- LEFT PARENTHESIS -->
      <map code="0x29" name="parenright"/><!-- RIGHT PARENTHESIS -->
      <map code="0x2a" name="asterisk"/><!-- ASTERISK -->
      <map code="0x2b" name="plus"/><!-- PLUS SIGN -->
      <map code="0x2c" name="comma"/><!-- COMMA -->
      <map code="0x2d" name="hyphen"/><!-- HYPHEN-MINUS -->
      <map code="0x2e" name="period"/><!-- FULL STOP -->
      <map code="0x2f" name="slash"/><!-- SOLIDUS -->
      <map code="0x30" name="zero"/><!-- DIGIT ZERO -->
      <map code="0x31" name="one"/><!-- DIGIT ONE -->
      <map code="0x32" name="two"/><!-- DIGIT TWO -->
      <map code="0x33" name="three"/><!-- DIGIT THREE -->
      <map code="0x34" name="four"/><!-- DIGIT FOUR -->
      <map code="0x35" name="five"/><!-- DIGIT FIVE -->
      <map code="0x36" name="six"/><!-- DIGIT SIX -->
      <map code="0x37" name="seven"/><!-- DIGIT SEVEN -->
      <map code="0x38" name="eight"/><!-- DIGIT EIGHT -->
      <map code="0x39" name="nine"/><!-- DIGIT NINE -->
      <map code="0x3a" name="colon"/><!-- COLON -->
      <map code="0x3b" name="semicolon"/><!-- SEMICOLON -->
      <map code="0x3c" name="less"/><!-- LESS-THAN SIGN -->
      <map code="0x3d" name="equal"/><!-- EQUALS SIGN -->
      <map code="0x3e" name="greater"/><!-- GREATER-THAN SIGN -->
      <map code="0x3f" name="question"/><!-- QUESTION MARK -->
      <map code="0x40" name="at"/><!-- COMMERCIAL AT -->
      <map code="0x41" name="A"/><!-- LATIN CAPITAL LETTER A -->
      <map code="0x42" name="B"/><!-- LATIN CAPITAL LETTER B -->
      <map code="0x43" name="C"/><!-- LATIN CAPITAL LETTER C -->
      <map code="0x44" name="D"/><!-- LATIN CAPITAL LETTER D -->
      <map code="0x45" name="E"/><!-- LATIN CAPITAL LETTER E -->
      <map code="0x46" name="F"/><!-- LATIN CAPITAL LETTER F -->
      <map code="0x47" name="G"/><!-- LATIN CAPITAL LETTER G -->
      <map code="0x48" name="H"/><!-- LATIN CAPITAL LETTER H -->
      <map code="0x49" name="I"/><!-- LATIN CAPITAL LETTER I -->
      <map code="0x4a" name="J"/><!-- LATIN CAPITAL LETTER J -->
      <map code="0x4b" name="K"/><!-- LATIN CAPITAL LETTER K -->
      <map code="0x4c" name="L"/><!-- LATIN CAPITAL LETTER L -->
      <map code="0x4d" name="M"/><!-- LATIN CAPITAL LETTER M -->
      <map code="0x4e" name="N"/><!-- LATIN CAPITAL LETTER N -->
      <map code="0x4f" name="O"/><!-- LATIN CAPITAL LETTER O -->
      <map code="0x50" name="P"/><!-- LATIN CAPITAL LETTER P -->
      <map code="0x51" name="Q"/><!-- LATIN CAPITAL LETTER Q -->
      <map code="0x52" name="R"/><!-- LATIN CAPITAL LETTER R -->
      <map code="0x53" name="S"/><!-- LATIN CAPITAL LETTER S -->
      <map code="0x54" name="T"/><!-- LATIN CAPITAL LETTER T -->
      <map code="0x55" name="U"/><!-- LATIN CAPITAL LETTER U -->
      <map code="0x56" name="V"/><!-- LATIN CAPITAL LETTER V -->
      <map code="0x57" name="W"/><!-- LATIN CAPITAL LETTER W -->
      <map code="0x58" name="X"/><!-- LATIN CAPITAL LETTER X -->
      <map code="0x59" name="Y"/><!-- LATIN CAPITAL LETTER Y -->
      <map code="0x5a" name="Z"/><!-- LATIN CAPITAL LETTER Z -->
      <map code="0x5b" name="bracketleft"/><!-- LEFT SQUARE BRACKET -->
      <map code="0x5c" name="backslash"/><!-- REVERSE SOLIDUS -->
      <map code="0x5d" name="bracketright"/><!-- RIGHT SQUARE BRACKET -->
      <map code="0x5e" name="asciicircum"/><!-- CIRCUMFLEX ACCENT -->
      <map code="0x5f" name="underscore"/><!-- LOW LINE -->
      <map code="0x60" name="grave"/><!-- GRAVE ACCENT -->
      <map code="0x61" name="a"/><!-- LATIN SMALL LETTER A -->
      <map code="0x62" name="b"/><!-- LATIN SMALL LETTER B -->
      <map code="0x63" name="c"/><!-- LATIN SMALL LETTER C -->
      <map code="0x64" name="d"/><!-- LATIN SMALL LETTER D -->
      <map code="0x65" name="e"/><!-- LATIN SMALL LETTER E -->
      <map code="0x66" name="f"/><!-- LATIN SMALL LETTER F -->
      <map code="0x67" name="g"/><!-- LATIN SMALL LETTER G -->
      <map code="0x68" name="h"/><!-- LATIN SMALL LETTER H -->
      <map code="0x69" name="i"/><!-- LATIN SMALL LETTER I -->
      <map code="0x6a" name="j"/><!-- LATIN SMALL LETTER J -->
      <map code="0x6b" name="k"/><!-- LATIN SMALL LETTER K -->
      <map code="0x6c" name="l"/><!-- LATIN SMALL LETTER L -->
      <map code="0x6d" name="m"/><!-- LATIN SMALL LETTER M -->
      <map code="0x6e" name="n"/><!-- LATIN SMALL LETTER N -->
      <map code="0x6f" name="o"/><!-- LATIN SMALL LETTER O -->
      <map code="0x70" name="p"/><!-- LATIN SMALL LETTER P -->
      <map code="0x71" name="q"/><!-- LATIN SMALL LETTER Q -->
      <map code="0x72" name="r"/><!-- LATIN SMALL LETTER R -->
      <map code="0x73" name="s"/><!-- LATIN SMALL LETTER S -->
      <map code="0x74" name="t"/><!-- LATIN SMALL LETTER T -->
      <map code="0x75" name="u"/><!-- LATIN SMALL LETTER U -->
      <map code="0x76" name="v"/><!-- LATIN SMALL LETTER V -->
      <map code="0x77" name="w"/><!-- LATIN SMALL LETTER W -->
      <map code="0x78" name="x"/><!-- LATIN SMALL LETTER X -->
      <map code="0x79" name="y"/><!-- LATIN SMALL LETTER Y -->
      <map code="0x7a" name="z"/><!-- LATIN SMALL LETTER Z -->
      <map code="0x7b" name="braceleft"/><!-- LEFT CURLY BRACKET -->
      <map code="0x7c" name="bar"/><!-- VERTICAL LINE -->
      <map code="0x7d" name="braceright"/><!-- RIGHT CURLY BRACKET -->
      <map code="0x7e" name="asciitilde"/><!-- TILDE -->
      <map code="0xa0" name="uni00A0"/><!-- NO-BREAK SPACE -->
      <map code="0xa1" name="exclamdown"/><!-- INVERTED EXCLAMATION MARK -->
      <map code="0xa2" name="cent"/><!-- CENT SIGN -->
      <map code="0xa3" name="sterling"/><!-- POUND SIGN -->
      <map code="0xa4" name="currency"/><!-- CURRENCY SIGN -->
      <map code="0xa5" name="yen"/><!-- YEN SIGN -->
      <map code="0xa6" name="brokenbar"/><!-- BROKEN BAR -->
      <map code="0xa7" name="section"/><!-- SECTION SIGN -->
      <map code="0xa8" name="dieresis"/><!-- DIAERESIS -->
      <map code="0xa9" name="copyright"/><!-- COPYRIGHT SIGN -->
      <map code="0xaa" name="ordfeminine"/><!-- FEMININE ORDINAL INDICATOR -->
      <map code="0xab" name="guillemotleft"/><!-- LEFT-POINTING DOUBLE ANGLE QUOTATION MARK -->
      <map code="0xac" name="logicalnot"/><!-- NOT SIGN -->
      <map code="0xad" name="uni00AD"/><!-- SOFT HYPHEN -->
      <map code="0xae" name="registered"/><!-- REGISTERED SIGN -->
      <map code="0xaf" name="macron"/><!-- MACRON -->
      <map code="0xb0" name="degree"/><!-- DEGREE SIGN -->
      <map code="0xb1" name="plusminus"/><!-- PLUS-MINUS SIGN -->
      <map code="0xb2" name="uni00B2"/><!-- SUPERSCRIPT TWO -->
      <map code="0xb3" name="uni00B3"/><!-- SUPERSCRIPT THREE -->
      <map code="0xb4" name="acute"/><!-- ACUTE ACCENT -->
      <map code="0xb5" name="mu"/><!-- MICRO SIGN -->
      <map code="0xb6" name="paragraph"/><!-- PILCROW SIGN -->
      <map code="0xb7" name="periodcentered"/><!-- MIDDLE DOT -->
      <map code="0xb8" name="cedilla"/><!-- CEDILLA -->
      <map code="0xb9" name="uni00B9"/><!-- SUPERSCRIPT ONE -->
      <map code="0xba" name="ordmasculine"/><!-- MASCULINE ORDINAL INDICATOR -->
      <map code="0xbb" name="guillemotright"/><!-- RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK -->
      <map code="0xbc" name="onequarter"/><!-- VULGAR FRACTION ONE QUARTER -->
      <map code="0xbd" name="onehalf"/><!-- VULGAR FRACTION ONE HALF -->
      <map code="0xbe" name="threequarters"/><!-- VULGAR FRACTION THREE QUARTERS -->
      <map code="0xbf" name="questiondown"/><!-- INVERTED QUESTION MARK -->
      <map code="0xc0" name="Agrave"/><!-- LATIN CAPITAL LETTER A WITH GRAVE -->
      <map code="0xc1" name="Aacute"/><!-- LATIN CAPITAL LETTER A WITH ACUTE -->
      <map code="0xc2" name="Acircumflex"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX -->
      <map code="0xc3" name="Atilde"/><!-- LATIN CAPITAL LETTER A WITH TILDE -->
      <map code="0xc4" name="Adieresis"/><!-- LATIN CAPITAL LETTER A WITH DIAERESIS -->
      <map code="0xc5" name="Aring"/><!-- LATIN CAPITAL LETTER A WITH RING ABOVE -->
      <map code="0xc6" name="AE"/><!-- LATIN CAPITAL LETTER AE -->
      <map code="0xc7" name="Ccedilla"/><!-- LATIN CAPITAL LETTER C WITH CEDILLA -->
      <map code="0xc8" name="Egrave"/><!-- LATIN CAPITAL LETTER E WITH GRAVE -->
      <map code="0xc9" name="Eacute"/><!-- LATIN CAPITAL LETTER E WITH ACUTE -->
      <map code="0xca" name="Ecircumflex"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX -->
      <map code="0xcb" name="Edieresis"/><!-- LATIN CAPITAL LETTER E WITH DIAERESIS -->
      <map code="0xcc" name="Igrave"/><!-- LATIN CAPITAL LETTER I WITH GRAVE -->
      <map code="0xcd" name="Iacute"/><!-- LATIN CAPITAL LETTER I WITH ACUTE -->
      <map code="0xce" name="Icircumflex"/><!-- LATIN CAPITAL LETTER I WITH CIRCUMFLEX -->
      <map code="0xcf" name="Idieresis"/><!-- LATIN CAPITAL LETTER I WITH DIAERESIS -->
      <map code="0xd0" name="Eth"/><!-- LATIN CAPITAL LETTER ETH -->
      <map code="0xd1" name="Ntilde"/><!-- LATIN CAPITAL LETTER N WITH TILDE -->
      <map code="0xd2" name="Ograve"/><!-- LATIN CAPITAL LETTER O WITH GRAVE -->
      <map code="0xd3" name="Oacute"/><!-- LATIN CAPITAL LETTER O WITH ACUTE -->
      <map code="0xd4" name="Ocircumflex"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX -->
      <map code="0xd5" name="Otilde"/><!-- LATIN CAPITAL LETTER O WITH TILDE -->
      <map code="0xd6" name="Odieresis"/><!-- LATIN CAPITAL LETTER O WITH DIAERESIS -->
      <map code="0xd7" name="multiply"/><!-- MULTIPLICATION SIGN -->
      <map code="0xd8" name="Oslash"/><!-- LATIN CAPITAL LETTER O WITH STROKE -->
      <map code="0xd9" name="Ugrave"/><!-- LATIN CAPITAL LETTER U WITH GRAVE -->
      <map code="0xda" name="Uacute"/><!-- LATIN CAPITAL LETTER U WITH ACUTE -->
      <map code="0xdb" name="Ucircumflex"/><!-- LATIN CAPITAL LETTER U WITH CIRCUMFLEX -->
      <map code="0xdc" name="Udieresis"/><!-- LATIN CAPITAL LETTER U WITH DIAERESIS -->
      <map code="0xdd" name="Yacute"/><!-- LATIN CAPITAL LETTER Y WITH ACUTE -->
      <map code="0xde" name="Thorn"/><!-- LATIN CAPITAL LETTER THORN -->
      <map code="0xdf" name="germandbls"/><!-- LATIN SMALL LETTER SHARP S -->
      <map code="0xe0" name="agrave"/><!-- LATIN SMALL LETTER A WITH GRAVE -->
      <map code="0xe1" name="aacute"/><!-- LATIN SMALL LETTER A WITH ACUTE -->
      <map code="0xe2" name="acircumflex"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX -->
      <map code="0xe3" name="atilde"/><!-- LATIN SMALL LETTER A WITH TILDE -->
      <map code="0xe4" name="adieresis"/><!-- LATIN SMALL LETTER A WITH DIAERESIS -->
      <map code="0xe5" name="aring"/><!-- LATIN SMALL LETTER A WITH RING ABOVE -->
      <map code="0xe6" name="ae"/><!-- LATIN SMALL LETTER AE -->
      <map code="0xe7" name="ccedilla"/><!-- LATIN SMALL LETTER C WITH CEDILLA -->
      <map code="0xe8" name="egrave"/><!-- LATIN SMALL LETTER E WITH GRAVE -->
      <map code="0xe9" name="eacute"/><!-- LATIN SMALL LETTER E WITH ACUTE -->
      <map code="0xea" name="ecircumflex"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX -->
      <map code="0xeb" name="edieresis"/><!-- LATIN SMALL LETTER E WITH DIAERESIS -->
      <map code="0xec" name="igrave"/><!-- LATIN SMALL LETTER I WITH GRAVE -->
      <map code="0xed" name="iacute"/><!-- LATIN SMALL LETTER I WITH ACUTE -->
      <map code="0xee" name="icircumflex"/><!-- LATIN SMALL LETTER I WITH CIRCUMFLEX -->
      <map code="0xef" name="idieresis"/><!-- LATIN SMALL LETTER I WITH DIAERESIS -->
      <map code="0xf0" name="eth"/><!-- LATIN SMALL LETTER ETH -->
      <map code="0xf1" name="ntilde"/><!-- LATIN SMALL LETTER N WITH TILDE -->
      <map code="0xf2" name="ograve"/><!-- LATIN SMALL LETTER O WITH GRAVE -->
      <map code="0xf3" name="oacute"/><!-- LATIN SMALL LETTER O WITH ACUTE -->
      <map code="0xf4" name="ocircumflex"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX -->
      <map code="0xf5" name="otilde"/><!-- LATIN SMALL LETTER O WITH TILDE -->
      <map code="0xf6" name="odieresis"/><!-- LATIN SMALL LETTER O WITH DIAERESIS -->
      <map code="0xf7" name="divide"/><!-- DIVISION SIGN -->
      <map code="0xf8" name="oslash"/><!-- LATIN SMALL LETTER O WITH STROKE -->
      <map code="0xf9" name="ugrave"/><!-- LATIN SMALL LETTER U WITH GRAVE -->
      <map code="0xfa" name="uacute"/><!-- LATIN SMALL LETTER U WITH ACUTE -->
      <map code="0xfb" name="ucircumflex"/><!-- LATIN SMALL LETTER U WITH CIRCUMFLEX -->
      <map code="0xfc" name="udieresis"/><!-- LATIN SMALL LETTER U WITH DIAERESIS -->
      <map code="0xfd" name="yacute"/><!-- LATIN SMALL LETTER Y WITH ACUTE -->
      <map code="0xfe" name="thorn"/><!-- LATIN SMALL LETTER THORN -->
      <map code="0xff" name="ydieresis"/><!-- LATIN SMALL LETTER Y WITH DIAERESIS -->
      <map code="0x100" name="Amacron"/><!-- LATIN CAPITAL LETTER A WITH MACRON -->
      <map code="0x101" name="amacron"/><!-- LATIN SMALL LETTER A WITH MACRON -->
      <map code="0x102" name="Abreve"/><!-- LATIN CAPITAL LETTER A WITH BREVE -->
      <map code="0x103" name="abreve"/><!-- LATIN SMALL LETTER A WITH BREVE -->
      <map code="0x104" name="Aogonek"/><!-- LATIN CAPITAL LETTER A WITH OGONEK -->
      <map code="0x105" name="aogonek"/><!-- LATIN SMALL LETTER A WITH OGONEK -->
      <map code="0x106" name="Cacute"/><!-- LATIN CAPITAL LETTER C WITH ACUTE -->
      <map code="0x107" name="cacute"/><!-- LATIN SMALL LETTER C WITH ACUTE -->
      <map code="0x108" name="Ccircumflex"/><!-- LATIN CAPITAL LETTER C WITH CIRCUMFLEX -->
      <map code="0x109" name="ccircumflex"/><!-- LATIN SMALL LETTER C WITH CIRCUMFLEX -->
      <map code="0x10a" name="Cdotaccent"/><!-- LATIN CAPITAL LETTER C WITH DOT ABOVE -->
      <map code="0x10b" name="cdotaccent"/><!-- LATIN SMALL LETTER C WITH DOT ABOVE -->
      <map code="0x10c" name="Ccaron"/><!-- LATIN CAPITAL LETTER C WITH CARON -->
      <map code="0x10d" name="ccaron"/><!-- LATIN SMALL LETTER C WITH CARON -->
      <map code="0x10e" name="Dcaron"/><!-- LATIN CAPITAL LETTER D WITH CARON -->
      <map code="0x10f" name="dcaron"/><!-- LATIN SMALL LETTER D WITH CARON -->
      <map code="0x110" name="Dcroat"/><!-- LATIN CAPITAL LETTER D WITH STROKE -->
      <map code="0x111" name="dcroat"/><!-- LATIN SMALL LETTER D WITH STROKE -->
      <map code="0x112" name="Emacron"/><!-- LATIN CAPITAL LETTER E WITH MACRON -->
      <map code="0x113" name="emacron"/><!-- LATIN SMALL LETTER E WITH MACRON -->
      <map code="0x114" name="Ebreve"/><!-- LATIN CAPITAL LETTER E WITH BREVE -->
      <map code="0x115" name="ebreve"/><!-- LATIN SMALL LETTER E WITH BREVE -->
      <map code="0x116" name="Edotaccent"/><!-- LATIN CAPITAL LETTER E WITH DOT ABOVE -->
      <map code="0x117" name="edotaccent"/><!-- LATIN SMALL LETTER E WITH DOT ABOVE -->
      <map code="0x118" name="Eogonek"/><!-- LATIN CAPITAL LETTER E WITH OGONEK -->
      <map code="0x119" name="eogonek"/><!-- LATIN SMALL LETTER E WITH OGONEK -->
      <map code="0x11a" name="Ecaron"/><!-- LATIN CAPITAL LETTER E WITH CARON -->
      <map code="0x11b" name="ecaron"/><!-- LATIN SMALL LETTER E WITH CARON -->
      <map code="0x11c" name="Gcircumflex"/><!-- LATIN CAPITAL LETTER G WITH CIRCUMFLEX -->
      <map code="0x11d" name="gcircumflex"/><!-- LATIN SMALL LETTER G WITH CIRCUMFLEX -->
      <map code="0x11e" name="Gbreve"/><!-- LATIN CAPITAL LETTER G WITH BREVE -->
      <map code="0x11f" name="gbreve"/><!-- LATIN SMALL LETTER G WITH BREVE -->
      <map code="0x120" name="Gdotaccent"/><!-- LATIN CAPITAL LETTER G WITH DOT ABOVE -->
      <map code="0x121" name="gdotaccent"/><!-- LATIN SMALL LETTER G WITH DOT ABOVE -->
      <map code="0x122" name="uni0122"/><!-- LATIN CAPITAL LETTER G WITH CEDILLA -->
      <map code="0x123" name="uni0123"/><!-- LATIN SMALL LETTER G WITH CEDILLA -->
      <map code="0x124" name="Hcircumflex"/><!-- LATIN CAPITAL LETTER H WITH CIRCUMFLEX -->
      <map code="0x125" name="hcircumflex"/><!-- LATIN SMALL LETTER H WITH CIRCUMFLEX -->
      <map code="0x126" name="Hbar"/><!-- LATIN CAPITAL LETTER H WITH STROKE -->
      <map code="0x127" name="hbar"/><!-- LATIN SMALL LETTER H WITH STROKE -->
      <map code="0x128" name="Itilde"/><!-- LATIN CAPITAL LETTER I WITH TILDE -->
      <map code="0x129" name="itilde"/><!-- LATIN SMALL LETTER I WITH TILDE -->
      <map code="0x12a" name="Imacron"/><!-- LATIN CAPITAL LETTER I WITH MACRON -->
      <map code="0x12b" name="imacron"/><!-- LATIN SMALL LETTER I WITH MACRON -->
      <map code="0x12c" name="Ibreve"/><!-- LATIN CAPITAL LETTER I WITH BREVE -->
      <map code="0x12d" name="ibreve"/><!-- LATIN SMALL LETTER I WITH BREVE -->
      <map code="0x12e" name="Iogonek"/><!-- LATIN CAPITAL LETTER I WITH OGONEK -->
      <map code="0x12f" name="iogonek"/><!-- LATIN SMALL LETTER I WITH OGONEK -->
      <map code="0x130" name="Idotaccent"/><!-- LATIN CAPITAL LETTER I WITH DOT ABOVE -->
      <map code="0x131" name="dotlessi"/><!-- LATIN SMALL LETTER DOTLESS I -->
      <map code="0x132" name="IJ"/><!-- LATIN CAPITAL LIGATURE IJ -->
      <map code="0x133" name="ij"/><!-- LATIN SMALL LIGATURE IJ -->
      <map code="0x134" name="Jcircumflex"/><!-- LATIN CAPITAL LETTER J WITH CIRCUMFLEX -->
      <map code="0x135" name="jcircumflex"/><!-- LATIN SMALL LETTER J WITH CIRCUMFLEX -->
      <map code="0x136" name="uni0136"/><!-- LATIN CAPITAL LETTER K WITH CEDILLA -->
      <map code="0x137" name="uni0137"/><!-- LATIN SMALL LETTER K WITH CEDILLA -->
      <map code="0x138" name="kgreenlandic"/><!-- LATIN SMALL LETTER KRA -->
      <map code="0x139" name="Lacute"/><!-- LATIN CAPITAL LETTER L WITH ACUTE -->
      <map code="0x13a" name="lacute"/><!-- LATIN SMALL LETTER L WITH ACUTE -->
      <map code="0x13b" name="uni013B"/><!-- LATIN CAPITAL LETTER L WITH CEDILLA -->
      <map code="0x13c" name="uni013C"/><!-- LATIN SMALL LETTER L WITH CEDILLA -->
      <map code="0x13d" name="Lcaron"/><!-- LATIN CAPITAL LETTER L WITH CARON -->
      <map code="0x13e" name="lcaron"/><!-- LATIN SMALL LETTER L WITH CARON -->
      <map code="0x13f" name="Ldot"/><!-- LATIN CAPITAL LETTER L WITH MIDDLE DOT -->
      <map code="0x140" name="ldot"/><!-- LATIN SMALL LETTER L WITH MIDDLE DOT -->
      <map code="0x141" name="Lslash"/><!-- LATIN CAPITAL LETTER L WITH STROKE -->
      <map code="0x142" name="lslash"/><!-- LATIN SMALL LETTER L WITH STROKE -->
      <map code="0x143" name="Nacute"/><!-- LATIN CAPITAL LETTER N WITH ACUTE -->
      <map code="0x144" name="nacute"/><!-- LATIN SMALL LETTER N WITH ACUTE -->
      <map code="0x145" name="uni0145"/><!-- LATIN CAPITAL LETTER N WITH CEDILLA -->
      <map code="0x146" name="uni0146"/><!-- LATIN SMALL LETTER N WITH CEDILLA -->
      <map code="0x147" name="Ncaron"/><!-- LATIN CAPITAL LETTER N WITH CARON -->
      <map code="0x148" name="ncaron"/><!-- LATIN SMALL LETTER N WITH CARON -->
      <map code="0x149" name="napostrophe"/><!-- LATIN SMALL LETTER N PRECEDED BY APOSTROPHE -->
      <map code="0x14a" name="Eng"/><!-- LATIN CAPITAL LETTER ENG -->
      <map code="0x14b" name="eng"/><!-- LATIN SMALL LETTER ENG -->
      <map code="0x14c" name="Omacron"/><!-- LATIN CAPITAL LETTER O WITH MACRON -->
      <map code="0x14d" name="omacron"/><!-- LATIN SMALL LETTER O WITH MACRON -->
      <map code="0x14e" name="Obreve"/><!-- LATIN CAPITAL LETTER O WITH BREVE -->
      <map code="0x14f" name="obreve"/><!-- LATIN SMALL LETTER O WITH BREVE -->
      <map code="0x150" name="Ohungarumlaut"/><!-- LATIN CAPITAL LETTER O WITH DOUBLE ACUTE -->
      <map code="0x151" name="ohungarumlaut"/><!-- LATIN SMALL LETTER O WITH DOUBLE ACUTE -->
      <map code="0x152" name="OE"/><!-- LATIN CAPITAL LIGATURE OE -->
      <map code="0x153" name="oe"/><!-- LATIN SMALL LIGATURE OE -->
      <map code="0x154" name="Racute"/><!-- LATIN CAPITAL LETTER R WITH ACUTE -->
      <map code="0x155" name="racute"/><!-- LATIN SMALL LETTER R WITH ACUTE -->
      <map code="0x156" name="uni0156"/><!-- LATIN CAPITAL LETTER R WITH CEDILLA -->
      <map code="0x157" name="uni0157"/><!-- LATIN SMALL LETTER R WITH CEDILLA -->
      <map code="0x158" name="Rcaron"/><!-- LATIN CAPITAL LETTER R WITH CARON -->
      <map code="0x159" name="rcaron"/><!-- LATIN SMALL LETTER R WITH CARON -->
      <map code="0x15a" name="Sacute"/><!-- LATIN CAPITAL LETTER S WITH ACUTE -->
      <map code="0x15b" name="sacute"/><!-- LATIN SMALL LETTER S WITH ACUTE -->
      <map code="0x15c" name="Scircumflex"/><!-- LATIN CAPITAL LETTER S WITH CIRCUMFLEX -->
      <map code="0x15d" name="scircumflex"/><!-- LATIN SMALL LETTER S WITH CIRCUMFLEX -->
      <map code="0x15e" name="Scedilla"/><!-- LATIN CAPITAL LETTER S WITH CEDILLA -->
      <map code="0x15f" name="scedilla"/><!-- LATIN SMALL LETTER S WITH CEDILLA -->
      <map code="0x160" name="Scaron"/><!-- LATIN CAPITAL LETTER S WITH CARON -->
      <map code="0x161" name="scaron"/><!-- LATIN SMALL LETTER S WITH CARON -->
      <map code="0x162" name="uni0162"/><!-- LATIN CAPITAL LETTER T WITH CEDILLA -->
      <map code="0x163" name="uni0163"/><!-- LATIN SMALL LETTER T WITH CEDILLA -->
      <map code="0x164" name="Tcaron"/><!-- LATIN CAPITAL LETTER T WITH CARON -->
      <map code="0x165" name="tcaron"/><!-- LATIN SMALL LETTER T WITH CARON -->
      <map code="0x166" name="Tbar"/><!-- LATIN CAPITAL LETTER T WITH STROKE -->
      <map code="0x167" name="tbar"/><!-- LATIN SMALL LETTER T WITH STROKE -->
      <map code="0x168" name="Utilde"/><!-- LATIN CAPITAL LETTER U WITH TILDE -->
      <map code="0x169" name="utilde"/><!-- LATIN SMALL LETTER U WITH TILDE -->
      <map code="0x16a" name="Umacron"/><!-- LATIN CAPITAL LETTER U WITH MACRON -->
      <map code="0x16b" name="umacron"/><!-- LATIN SMALL LETTER U WITH MACRON -->
      <map code="0x16c" name="Ubreve"/><!-- LATIN CAPITAL LETTER U WITH BREVE -->
      <map code="0x16d" name="ubreve"/><!-- LATIN SMALL LETTER U WITH BREVE -->
      <map code="0x16e" name="Uring"/><!-- LATIN CAPITAL LETTER U WITH RING ABOVE -->
      <map code="0x16f" name="uring"/><!-- LATIN SMALL LETTER U WITH RING ABOVE -->
      <map code="0x170" name="Uhungarumlaut"/><!-- LATIN CAPITAL LETTER U WITH DOUBLE ACUTE -->
      <map code="0x171" name="uhungarumlaut"/><!-- LATIN SMALL LETTER U WITH DOUBLE ACUTE -->
      <map code="0x172" name="Uogonek"/><!-- LATIN CAPITAL LETTER U WITH OGONEK -->
      <map code="0x173" name="uogonek"/><!-- LATIN SMALL LETTER U WITH OGONEK -->
      <map code="0x174" name="Wcircumflex"/><!-- LATIN CAPITAL LETTER W WITH CIRCUMFLEX -->
      <map code="0x175" name="wcircumflex"/><!-- LATIN SMALL LETTER W WITH CIRCUMFLEX -->
      <map code="0x176" name="Ycircumflex"/><!-- LATIN CAPITAL LETTER Y WITH CIRCUMFLEX -->
      <map code="0x177" name="ycircumflex"/><!-- LATIN SMALL LETTER Y WITH CIRCUMFLEX -->
      <map code="0x178" name="Ydieresis"/><!-- LATIN CAPITAL LETTER Y WITH DIAERESIS -->
      <map code="0x179" name="Zacute"/><!-- LATIN CAPITAL LETTER Z WITH ACUTE -->
      <map code="0x17a" name="zacute"/><!-- LATIN SMALL LETTER Z WITH ACUTE -->
      <map code="0x17b" name="Zdotaccent"/><!-- LATIN CAPITAL LETTER Z WITH DOT ABOVE -->
      <map code="0x17c" name="zdotaccent"/><!-- LATIN SMALL LETTER Z WITH DOT ABOVE -->
      <map code="0x17d" name="Zcaron"/><!-- LATIN CAPITAL LETTER Z WITH CARON -->
      <map code="0x17e" name="zcaron"/><!-- LATIN SMALL LETTER Z WITH CARON -->
      <map code="0x17f" name="longs"/><!-- LATIN SMALL LETTER LONG S -->
      <map code="0x18f" name="uni018F"/><!-- LATIN CAPITAL LETTER SCHWA -->
      <map code="0x192" name="florin"/><!-- LATIN SMALL LETTER F WITH HOOK -->
      <map code="0x1a0" name="Ohorn"/><!-- LATIN CAPITAL LETTER O WITH HORN -->
      <map code="0x1a1" name="ohorn"/><!-- LATIN SMALL LETTER O WITH HORN -->
      <map code="0x1af" name="Uhorn"/><!-- LATIN CAPITAL LETTER U WITH HORN -->
      <map code="0x1b0" name="uhorn"/><!-- LATIN SMALL LETTER U WITH HORN -->
      <map code="0x1f0" name="uni01F0"/><!-- LATIN SMALL LETTER J WITH CARON -->
      <map code="0x1fa" name="Aringacute"/><!-- LATIN CAPITAL LETTER A WITH RING ABOVE AND ACUTE -->
      <map code="0x1fb" name="aringacute"/><!-- LATIN SMALL LETTER A WITH RING ABOVE AND ACUTE -->
      <map code="0x1fc" name="AEacute"/><!-- LATIN CAPITAL LETTER AE WITH ACUTE -->
      <map code="0x1fd" name="aeacute"/><!-- LATIN SMALL LETTER AE WITH ACUTE -->
      <map code="0x1fe" name="Oslashacute"/><!-- LATIN CAPITAL LETTER O WITH STROKE AND ACUTE -->
      <map code="0x1ff" name="oslashacute"/><!-- LATIN SMALL LETTER O WITH STROKE AND ACUTE -->
      <map code="0x218" name="uni0218"/><!-- LATIN CAPITAL LETTER S WITH COMMA BELOW -->
      <map code="0x219" name="uni0219"/><!-- LATIN SMALL LETTER S WITH COMMA BELOW -->
      <map code="0x21a" name="uni021A"/><!-- LATIN CAPITAL LETTER T WITH COMMA BELOW -->
      <map code="0x21b" name="uni021B"/><!-- LATIN SMALL LETTER T WITH COMMA BELOW -->
      <map code="0x237" name="uni0237"/><!-- LATIN SMALL LETTER DOTLESS J -->
      <map code="0x259" name="uni0259"/><!-- LATIN SMALL LETTER SCHWA -->
      <map code="0x2bc" name="uni02BC"/><!-- MODIFIER LETTER APOSTROPHE -->
      <map code="0x2c6" name="circumflex"/><!-- MODIFIER LETTER CIRCUMFLEX ACCENT -->
      <map code="0x2c7" name="caron"/><!-- CARON -->
      <map code="0x2c9" name="uni02C9"/><!-- MODIFIER LETTER MACRON -->
      <map code="0x2d8" name="breve"/><!-- BREVE -->
      <map code="0x2d9" name="dotaccent"/><!-- DOT ABOVE -->
      <map code="0x2da" name="ring"/><!-- RING ABOVE -->
      <map code="0x2db" name="ogonek"/><!-- OGONEK -->
      <map code="0x2dc" name="tilde"/><!-- SMALL TILDE -->
      <map code="0x2dd" name="hungarumlaut"/><!-- DOUBLE ACUTE ACCENT -->
      <map code="0x2f3" name="uni02F3"/><!-- MODIFIER LETTER LOW RING -->
      <map code="0x300" name="gravecomb"/><!-- COMBINING GRAVE ACCENT -->
      <map code="0x301" name="acutecomb"/><!-- COMBINING ACUTE ACCENT -->
      <map code="0x303" name="tildecomb"/><!-- COMBINING TILDE -->
      <map code="0x309" name="hookabovecomb"/><!-- COMBINING HOOK ABOVE -->
      <map code="0x30f" name="uni030F"/><!-- COMBINING DOUBLE GRAVE ACCENT -->
      <map code="0x323" name="dotbelowcomb"/><!-- COMBINING DOT BELOW -->
      <map code="0x384" name="tonos"/><!-- GREEK TONOS -->
      <map code="0x385" name="dieresistonos"/><!-- GREEK DIALYTIKA TONOS -->
      <map code="0x386" name="Alphatonos"/><!-- GREEK CAPITAL LETTER ALPHA WITH TONOS -->
      <map code="0x387" name="anoteleia"/><!-- GREEK ANO TELEIA -->
      <map code="0x388" name="Epsilontonos"/><!-- GREEK CAPITAL LETTER EPSILON WITH TONOS -->
      <map code="0x389" name="Etatonos"/><!-- GREEK CAPITAL LETTER ETA WITH TONOS -->
      <map code="0x38a" name="Iotatonos"/><!-- GREEK CAPITAL LETTER IOTA WITH TONOS -->
      <map code="0x38c" name="Omicrontonos"/><!-- GREEK CAPITAL LETTER OMICRON WITH TONOS -->
      <map code="0x38e" name="Upsilontonos"/><!-- GREEK CAPITAL LETTER UPSILON WITH TONOS -->
      <map code="0x38f" name="Omegatonos"/><!-- GREEK CAPITAL LETTER OMEGA WITH TONOS -->
      <map code="0x390" name="iotadieresistonos"/><!-- GREEK SMALL LETTER IOTA WITH DIALYTIKA AND TONOS -->
      <map code="0x391" name="Alpha"/><!-- GREEK CAPITAL LETTER ALPHA -->
      <map code="0x392" name="Beta"/><!-- GREEK CAPITAL LETTER BETA -->
      <map code="0x393" name="Gamma"/><!-- GREEK CAPITAL LETTER GAMMA -->
      <map code="0x394" name="uni0394"/><!-- GREEK CAPITAL LETTER DELTA -->
      <map code="0x395" name="Epsilon"/><!-- GREEK CAPITAL LETTER EPSILON -->
      <map code="0x396" name="Zeta"/><!-- GREEK CAPITAL LETTER ZETA -->
      <map code="0x397" name="Eta"/><!-- GREEK CAPITAL LETTER ETA -->
      <map code="0x398" name="Theta"/><!-- GREEK CAPITAL LETTER THETA -->
      <map code="0x399" name="Iota"/><!-- GREEK CAPITAL LETTER IOTA -->
      <map code="0x39a" name="Kappa"/><!-- GREEK CAPITAL LETTER KAPPA -->
      <map code="0x39b" name="Lambda"/><!-- GREEK CAPITAL LETTER LAMDA -->
      <map code="0x39c" name="Mu"/><!-- GREEK CAPITAL LETTER MU -->
      <map code="0x39d" name="Nu"/><!-- GREEK CAPITAL LETTER NU -->
      <map code="0x39e" name="Xi"/><!-- GREEK CAPITAL LETTER XI -->
      <map code="0x39f" name="Omicron"/><!-- GREEK CAPITAL LETTER OMICRON -->
      <map code="0x3a0" name="Pi"/><!-- GREEK CAPITAL LETTER PI -->
      <map code="0x3a1" name="Rho"/><!-- GREEK CAPITAL LETTER RHO -->
      <map code="0x3a3" name="Sigma"/><!-- GREEK CAPITAL LETTER SIGMA -->
      <map code="0x3a4" name="Tau"/><!-- GREEK CAPITAL LETTER TAU -->
      <map code="0x3a5" name="Upsilon"/><!-- GREEK CAPITAL LETTER UPSILON -->
      <map code="0x3a6" name="Phi"/><!-- GREEK CAPITAL LETTER PHI -->
      <map code="0x3a7" name="Chi"/><!-- GREEK CAPITAL LETTER CHI -->
      <map code="0x3a8" name="Psi"/><!-- GREEK CAPITAL LETTER PSI -->
      <map code="0x3a9" name="uni03A9"/><!-- GREEK CAPITAL LETTER OMEGA -->
      <map code="0x3aa" name="Iotadieresis"/><!-- GREEK CAPITAL LETTER IOTA WITH DIALYTIKA -->
      <map code="0x3ab" name="Upsilondieresis"/><!-- GREEK CAPITAL LETTER UPSILON WITH DIALYTIKA -->
      <map code="0x3ac" name="alphatonos"/><!-- GREEK SMALL LETTER ALPHA WITH TONOS -->
      <map code="0x3ad" name="epsilontonos"/><!-- GREEK SMALL LETTER EPSILON WITH TONOS -->
      <map code="0x3ae" name="etatonos"/><!-- GREEK SMALL LETTER ETA WITH TONOS -->
      <map code="0x3af" name="iotatonos"/><!-- GREEK SMALL LETTER IOTA WITH TONOS -->
      <map code="0x3b0" name="upsilondieresistonos"/><!-- GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND TONOS -->
      <map code="0x3b1" name="alpha"/><!-- GREEK SMALL LETTER ALPHA -->
      <map code="0x3b2" name="beta"/><!-- GREEK SMALL LETTER BETA -->
      <map code="0x3b3" name="gamma"/><!-- GREEK SMALL LETTER GAMMA -->
      <map code="0x3b4" name="delta"/><!-- GREEK SMALL LETTER DELTA -->
      <map code="0x3b5" name="epsilon"/><!-- GREEK SMALL LETTER EPSILON -->
      <map code="0x3b6" name="zeta"/><!-- GREEK SMALL LETTER ZETA -->
      <map code="0x3b7" name="eta"/><!-- GREEK SMALL LETTER ETA -->
      <map code="0x3b8" name="theta"/><!-- GREEK SMALL LETTER THETA -->
      <map code="0x3b9" name="iota"/><!-- GREEK SMALL LETTER IOTA -->
      <map code="0x3ba" name="kappa"/><!-- GREEK SMALL LETTER KAPPA -->
      <map code="0x3bb" name="lambda"/><!-- GREEK SMALL LETTER LAMDA -->
      <map code="0x3bc" name="uni03BC"/><!-- GREEK SMALL LETTER MU -->
      <map code="0x3bd" name="nu"/><!-- GREEK SMALL LETTER NU -->
      <map code="0x3be" name="xi"/><!-- GREEK SMALL LETTER XI -->
      <map code="0x3bf" name="omicron"/><!-- GREEK SMALL LETTER OMICRON -->
      <map code="0x3c0" name="pi"/><!-- GREEK SMALL LETTER PI -->
      <map code="0x3c1" name="rho"/><!-- GREEK SMALL LETTER RHO -->
      <map code="0x3c2" name="sigma1"/><!-- GREEK SMALL LETTER FINAL SIGMA -->
      <map code="0x3c3" name="sigma"/><!-- GREEK SMALL LETTER SIGMA -->
      <map code="0x3c4" name="tau"/><!-- GREEK SMALL LETTER TAU -->
      <map code="0x3c5" name="upsilon"/><!-- GREEK SMALL LETTER UPSILON -->
      <map code="0x3c6" name="phi"/><!-- GREEK SMALL LETTER PHI -->
      <map code="0x3c7" name="chi"/><!-- GREEK SMALL LETTER CHI -->
      <map code="0x3c8" name="psi"/><!-- GREEK SMALL LETTER PSI -->
      <map code="0x3c9" name="omega"/><!-- GREEK SMALL LETTER OMEGA -->
      <map code="0x3ca" name="iotadieresis"/><!-- GREEK SMALL LETTER IOTA WITH DIALYTIKA -->
      <map code="0x3cb" name="upsilondieresis"/><!-- GREEK SMALL LETTER UPSILON WITH DIALYTIKA -->
      <map code="0x3cc" name="omicrontonos"/><!-- GREEK SMALL LETTER OMICRON WITH TONOS -->
      <map code="0x3cd" name="upsilontonos"/><!-- GREEK SMALL LETTER UPSILON WITH TONOS -->
      <map code="0x3ce" name="omegatonos"/><!-- GREEK SMALL LETTER OMEGA WITH TONOS -->
      <map code="0x3d1" name="theta1"/><!-- GREEK THETA SYMBOL -->
      <map code="0x3d2" name="Upsilon1"/><!-- GREEK UPSILON WITH HOOK SYMBOL -->
      <map code="0x3d6" name="omega1"/><!-- GREEK PI SYMBOL -->
      <map code="0x400" name="uni0400"/><!-- CYRILLIC CAPITAL LETTER IE WITH GRAVE -->
      <map code="0x401" name="uni0401"/><!-- CYRILLIC CAPITAL LETTER IO -->
      <map code="0x402" name="uni0402"/><!-- CYRILLIC CAPITAL LETTER DJE -->
      <map code="0x403" name="uni0403"/><!-- CYRILLIC CAPITAL LETTER GJE -->
      <map code="0x404" name="uni0404"/><!-- CYRILLIC CAPITAL LETTER UKRAINIAN IE -->
      <map code="0x405" name="uni0405"/><!-- CYRILLIC CAPITAL LETTER DZE -->
      <map code="0x406" name="uni0406"/><!-- CYRILLIC CAPITAL LETTER BYELORUSSIAN-UKRAINIAN I -->
      <map code="0x407" name="uni0407"/><!-- CYRILLIC CAPITAL LETTER YI -->
      <map code="0x408" name="uni0408"/><!-- CYRILLIC CAPITAL LETTER JE -->
      <map code="0x409" name="uni0409"/><!-- CYRILLIC CAPITAL LETTER LJE -->
      <map code="0x40a" name="uni040A"/><!-- CYRILLIC CAPITAL LETTER NJE -->
      <map code="0x40b" name="uni040B"/><!-- CYRILLIC CAPITAL LETTER TSHE -->
      <map code="0x40c" name="uni040C"/><!-- CYRILLIC CAPITAL LETTER KJE -->
      <map code="0x40d" name="uni040D"/><!-- CYRILLIC CAPITAL LETTER I WITH GRAVE -->
      <map code="0x40e" name="uni040E"/><!-- CYRILLIC CAPITAL LETTER SHORT U -->
      <map code="0x40f" name="uni040F"/><!-- CYRILLIC CAPITAL LETTER DZHE -->
      <map code="0x410" name="uni0410"/><!-- CYRILLIC CAPITAL LETTER A -->
      <map code="0x411" name="uni0411"/><!-- CYRILLIC CAPITAL LETTER BE -->
      <map code="0x412" name="uni0412"/><!-- CYRILLIC CAPITAL LETTER VE -->
      <map code="0x413" name="uni0413"/><!-- CYRILLIC CAPITAL LETTER GHE -->
      <map code="0x414" name="uni0414"/><!-- CYRILLIC CAPITAL LETTER DE -->
      <map code="0x415" name="uni0415"/><!-- CYRILLIC CAPITAL LETTER IE -->
      <map code="0x416" name="uni0416"/><!-- CYRILLIC CAPITAL LETTER ZHE -->
      <map code="0x417" name="uni0417"/><!-- CYRILLIC CAPITAL LETTER ZE -->
      <map code="0x418" name="uni0418"/><!-- CYRILLIC CAPITAL LETTER I -->
      <map code="0x419" name="uni0419"/><!-- CYRILLIC CAPITAL LETTER SHORT I -->
      <map code="0x41a" name="uni041A"/><!-- CYRILLIC CAPITAL LETTER KA -->
      <map code="0x41b" name="uni041B"/><!-- CYRILLIC CAPITAL LETTER EL -->
      <map code="0x41c" name="uni041C"/><!-- CYRILLIC CAPITAL LETTER EM -->
      <map code="0x41d" name="uni041D"/><!-- CYRILLIC CAPITAL LETTER EN -->
      <map code="0x41e" name="uni041E"/><!-- CYRILLIC CAPITAL LETTER O -->
      <map code="0x41f" name="uni041F"/><!-- CYRILLIC CAPITAL LETTER PE -->
      <map code="0x420" name="uni0420"/><!-- CYRILLIC CAPITAL LETTER ER -->
      <map code="0x421" name="uni0421"/><!-- CYRILLIC CAPITAL LETTER ES -->
      <map code="0x422" name="uni0422"/><!-- CYRILLIC CAPITAL LETTER TE -->
      <map code="0x423" name="uni0423"/><!-- CYRILLIC CAPITAL LETTER U -->
      <map code="0x424" name="uni0424"/><!-- CYRILLIC CAPITAL LETTER EF -->
      <map code="0x425" name="uni0425"/><!-- CYRILLIC CAPITAL LETTER HA -->
      <map code="0x426" name="uni0426"/><!-- CYRILLIC CAPITAL LETTER TSE -->
      <map code="0x427" name="uni0427"/><!-- CYRILLIC CAPITAL LETTER CHE -->
      <map code="0x428" name="uni0428"/><!-- CYRILLIC CAPITAL LETTER SHA -->
      <map code="0x429" name="uni0429"/><!-- CYRILLIC CAPITAL LETTER SHCHA -->
      <map code="0x42a" name="uni042A"/><!-- CYRILLIC CAPITAL LETTER HARD SIGN -->
      <map code="0x42b" name="uni042B"/><!-- CYRILLIC CAPITAL LETTER YERU -->
      <map code="0x42c" name="uni042C"/><!-- CYRILLIC CAPITAL LETTER SOFT SIGN -->
      <map code="0x42d" name="uni042D"/><!-- CYRILLIC CAPITAL LETTER E -->
      <map code="0x42e" name="uni042E"/><!-- CYRILLIC CAPITAL LETTER YU -->
      <map code="0x42f" name="uni042F"/><!-- CYRILLIC CAPITAL LETTER YA -->
      <map code="0x430" name="uni0430"/><!-- CYRILLIC SMALL LETTER A -->
      <map code="0x431" name="uni0431"/><!-- CYRILLIC SMALL LETTER BE -->
      <map code="0x432" name="uni0432"/><!-- CYRILLIC SMALL LETTER VE -->
      <map code="0x433" name="uni0433"/><!-- CYRILLIC SMALL LETTER GHE -->
      <map code="0x434" name="uni0434"/><!-- CYRILLIC SMALL LETTER DE -->
      <map code="0x435" name="uni0435"/><!-- CYRILLIC SMALL LETTER IE -->
      <map code="0x436" name="uni0436"/><!-- CYRILLIC SMALL LETTER ZHE -->
      <map code="0x437" name="uni0437"/><!-- CYRILLIC SMALL LETTER ZE -->
      <map code="0x438" name="uni0438"/><!-- CYRILLIC SMALL LETTER I -->
      <map code="0x439" name="uni0439"/><!-- CYRILLIC SMALL LETTER SHORT I -->
      <map code="0x43a" name="uni043A"/><!-- CYRILLIC SMALL LETTER KA -->
      <map code="0x43b" name="uni043B"/><!-- CYRILLIC SMALL LETTER EL -->
      <map code="0x43c" name="uni043C"/><!-- CYRILLIC SMALL LETTER EM -->
      <map code="0x43d" name="uni043D"/><!-- CYRILLIC SMALL LETTER EN -->
      <map code="0x43e" name="uni043E"/><!-- CYRILLIC SMALL LETTER O -->
      <map code="0x43f" name="uni043F"/><!-- CYRILLIC SMALL LETTER PE -->
      <map code="0x440" name="uni0440"/><!-- CYRILLIC SMALL LETTER ER -->
      <map code="0x441" name="uni0441"/><!-- CYRILLIC SMALL LETTER ES -->
      <map code="0x442" name="uni0442"/><!-- CYRILLIC SMALL LETTER TE -->
      <map code="0x443" name="uni0443"/><!-- CYRILLIC SMALL LETTER U -->
      <map code="0x444" name="uni0444"/><!-- CYRILLIC SMALL LETTER EF -->
      <map code="0x445" name="uni0445"/><!-- CYRILLIC SMALL LETTER HA -->
      <map code="0x446" name="uni0446"/><!-- CYRILLIC SMALL LETTER TSE -->
      <map code="0x447" name="uni0447"/><!-- CYRILLIC SMALL LETTER CHE -->
      <map code="0x448" name="uni0448"/><!-- CYRILLIC SMALL LETTER SHA -->
      <map code="0x449" name="uni0449"/><!-- CYRILLIC SMALL LETTER SHCHA -->
      <map code="0x44a" name="uni044A"/><!-- CYRILLIC SMALL LETTER HARD SIGN -->
      <map code="0x44b" name="uni044B"/><!-- CYRILLIC SMALL LETTER YERU -->
      <map code="0x44c" name="uni044C"/><!-- CYRILLIC SMALL LETTER SOFT SIGN -->
      <map code="0x44d" name="uni044D"/><!-- CYRILLIC SMALL LETTER E -->
      <map code="0x44e" name="uni044E"/><!-- CYRILLIC SMALL LETTER YU -->
      <map code="0x44f" name="uni044F"/><!-- CYRILLIC SMALL LETTER YA -->
      <map code="0x450" name="uni0450"/><!-- CYRILLIC SMALL LETTER IE WITH GRAVE -->
      <map code="0x451" name="uni0451"/><!-- CYRILLIC SMALL LETTER IO -->
      <map code="0x452" name="uni0452"/><!-- CYRILLIC SMALL LETTER DJE -->
      <map code="0x453" name="uni0453"/><!-- CYRILLIC SMALL LETTER GJE -->
      <map code="0x454" name="uni0454"/><!-- CYRILLIC SMALL LETTER UKRAINIAN IE -->
      <map code="0x455" name="uni0455"/><!-- CYRILLIC SMALL LETTER DZE -->
      <map code="0x456" name="uni0456"/><!-- CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I -->
      <map code="0x457" name="uni0457"/><!-- CYRILLIC SMALL LETTER YI -->
      <map code="0x458" name="uni0458"/><!-- CYRILLIC SMALL LETTER JE -->
      <map code="0x459" name="uni0459"/><!-- CYRILLIC SMALL LETTER LJE -->
      <map code="0x45a" name="uni045A"/><!-- CYRILLIC SMALL LETTER NJE -->
      <map code="0x45b" name="uni045B"/><!-- CYRILLIC SMALL LETTER TSHE -->
      <map code="0x45c" name="uni045C"/><!-- CYRILLIC SMALL LETTER KJE -->
      <map code="0x45d" name="uni045D"/><!-- CYRILLIC SMALL LETTER I WITH GRAVE -->
      <map code="0x45e" name="uni045E"/><!-- CYRILLIC SMALL LETTER SHORT U -->
      <map code="0x45f" name="uni045F"/><!-- CYRILLIC SMALL LETTER DZHE -->
      <map code="0x460" name="uni0460"/><!-- CYRILLIC CAPITAL LETTER OMEGA -->
      <map code="0x461" name="uni0461"/><!-- CYRILLIC SMALL LETTER OMEGA -->
      <map code="0x462" name="uni0462"/><!-- CYRILLIC CAPITAL LETTER YAT -->
      <map code="0x463" name="uni0463"/><!-- CYRILLIC SMALL LETTER YAT -->
      <map code="0x464" name="uni0464"/><!-- CYRILLIC CAPITAL LETTER IOTIFIED E -->
      <map code="0x465" name="uni0465"/><!-- CYRILLIC SMALL LETTER IOTIFIED E -->
      <map code="0x466" name="uni0466"/><!-- CYRILLIC CAPITAL LETTER LITTLE YUS -->
      <map code="0x467" name="uni0467"/><!-- CYRILLIC SMALL LETTER LITTLE YUS -->
      <map code="0x468" name="uni0468"/><!-- CYRILLIC CAPITAL LETTER IOTIFIED LITTLE YUS -->
      <map code="0x469" name="uni0469"/><!-- CYRILLIC SMALL LETTER IOTIFIED LITTLE YUS -->
      <map code="0x46a" name="uni046A"/><!-- CYRILLIC CAPITAL LETTER BIG YUS -->
      <map code="0x46b" name="uni046B"/><!-- CYRILLIC SMALL LETTER BIG YUS -->
      <map code="0x46c" name="uni046C"/><!-- CYRILLIC CAPITAL LETTER IOTIFIED BIG YUS -->
      <map code="0x46d" name="uni046D"/><!-- CYRILLIC SMALL LETTER IOTIFIED BIG YUS -->
      <map code="0x46e" name="uni046E"/><!-- CYRILLIC CAPITAL LETTER KSI -->
      <map code="0x46f" name="uni046F"/><!-- CYRILLIC SMALL LETTER KSI -->
      <map code="0x470" name="uni0470"/><!-- CYRILLIC CAPITAL LETTER PSI -->
      <map code="0x471" name="uni0471"/><!-- CYRILLIC SMALL LETTER PSI -->
      <map code="0x472" name="uni0472"/><!-- CYRILLIC CAPITAL LETTER FITA -->
      <map code="0x473" name="uni0473"/><!-- CYRILLIC SMALL LETTER FITA -->
      <map code="0x474" name="uni0474"/><!-- CYRILLIC CAPITAL LETTER IZHITSA -->
      <map code="0x475" name="uni0475"/><!-- CYRILLIC SMALL LETTER IZHITSA -->
      <map code="0x476" name="uni0476"/><!-- CYRILLIC CAPITAL LETTER IZHITSA WITH DOUBLE GRAVE ACCENT -->
      <map code="0x477" name="uni0477"/><!-- CYRILLIC SMALL LETTER IZHITSA WITH DOUBLE GRAVE ACCENT -->
      <map code="0x478" name="uni0478"/><!-- CYRILLIC CAPITAL LETTER UK -->
      <map code="0x479" name="uni0479"/><!-- CYRILLIC SMALL LETTER UK -->
      <map code="0x47a" name="uni047A"/><!-- CYRILLIC CAPITAL LETTER ROUND OMEGA -->
      <map code="0x47b" name="uni047B"/><!-- CYRILLIC SMALL LETTER ROUND OMEGA -->
      <map code="0x47c" name="uni047C"/><!-- CYRILLIC CAPITAL LETTER OMEGA WITH TITLO -->
      <map code="0x47d" name="uni047D"/><!-- CYRILLIC SMALL LETTER OMEGA WITH TITLO -->
      <map code="0x47e" name="uni047E"/><!-- CYRILLIC CAPITAL LETTER OT -->
      <map code="0x47f" name="uni047F"/><!-- CYRILLIC SMALL LETTER OT -->
      <map code="0x480" name="uni0480"/><!-- CYRILLIC CAPITAL LETTER KOPPA -->
      <map code="0x481" name="uni0481"/><!-- CYRILLIC SMALL LETTER KOPPA -->
      <map code="0x482" name="uni0482"/><!-- CYRILLIC THOUSANDS SIGN -->
      <map code="0x483" name="uni0483"/><!-- COMBINING CYRILLIC TITLO -->
      <map code="0x484" name="uni0484"/><!-- COMBINING CYRILLIC PALATALIZATION -->
      <map code="0x485" name="uni0485"/><!-- COMBINING CYRILLIC DASIA PNEUMATA -->
      <map code="0x486" name="uni0486"/><!-- COMBINING CYRILLIC PSILI PNEUMATA -->
      <map code="0x488" name="uni0488"/><!-- COMBINING CYRILLIC HUNDRED THOUSANDS SIGN -->
      <map code="0x489" name="uni0489"/><!-- COMBINING CYRILLIC MILLIONS SIGN -->
      <map code="0x48a" name="uni048A"/><!-- CYRILLIC CAPITAL LETTER SHORT I WITH TAIL -->
      <map code="0x48b" name="uni048B"/><!-- CYRILLIC SMALL LETTER SHORT I WITH TAIL -->
      <map code="0x48c" name="uni048C"/><!-- CYRILLIC CAPITAL LETTER SEMISOFT SIGN -->
      <map code="0x48d" name="uni048D"/><!-- CYRILLIC SMALL LETTER SEMISOFT SIGN -->
      <map code="0x48e" name="uni048E"/><!-- CYRILLIC CAPITAL LETTER ER WITH TICK -->
      <map code="0x48f" name="uni048F"/><!-- CYRILLIC SMALL LETTER ER WITH TICK -->
      <map code="0x490" name="uni0490"/><!-- CYRILLIC CAPITAL LETTER GHE WITH UPTURN -->
      <map code="0x491" name="uni0491"/><!-- CYRILLIC SMALL LETTER GHE WITH UPTURN -->
      <map code="0x492" name="uni0492"/><!-- CYRILLIC CAPITAL LETTER GHE WITH STROKE -->
      <map code="0x493" name="uni0493"/><!-- CYRILLIC SMALL LETTER GHE WITH STROKE -->
      <map code="0x494" name="uni0494"/><!-- CYRILLIC CAPITAL LETTER GHE WITH MIDDLE HOOK -->
      <map code="0x495" name="uni0495"/><!-- CYRILLIC SMALL LETTER GHE WITH MIDDLE HOOK -->
      <map code="0x496" name="uni0496"/><!-- CYRILLIC CAPITAL LETTER ZHE WITH DESCENDER -->
      <map code="0x497" name="uni0497"/><!-- CYRILLIC SMALL LETTER ZHE WITH DESCENDER -->
      <map code="0x498" name="uni0498"/><!-- CYRILLIC CAPITAL LETTER ZE WITH DESCENDER -->
      <map code="0x499" name="uni0499"/><!-- CYRILLIC SMALL LETTER ZE WITH DESCENDER -->
      <map code="0x49a" name="uni049A"/><!-- CYRILLIC CAPITAL LETTER KA WITH DESCENDER -->
      <map code="0x49b" name="uni049B"/><!-- CYRILLIC SMALL LETTER KA WITH DESCENDER -->
      <map code="0x49c" name="uni049C"/><!-- CYRILLIC CAPITAL LETTER KA WITH VERTICAL STROKE -->
      <map code="0x49d" name="uni049D"/><!-- CYRILLIC SMALL LETTER KA WITH VERTICAL STROKE -->
      <map code="0x49e" name="uni049E"/><!-- CYRILLIC CAPITAL LETTER KA WITH STROKE -->
      <map code="0x49f" name="uni049F"/><!-- CYRILLIC SMALL LETTER KA WITH STROKE -->
      <map code="0x4a0" name="uni04A0"/><!-- CYRILLIC CAPITAL LETTER BASHKIR KA -->
      <map code="0x4a1" name="uni04A1"/><!-- CYRILLIC SMALL LETTER BASHKIR KA -->
      <map code="0x4a2" name="uni04A2"/><!-- CYRILLIC CAPITAL LETTER EN WITH DESCENDER -->
      <map code="0x4a3" name="uni04A3"/><!-- CYRILLIC SMALL LETTER EN WITH DESCENDER -->
      <map code="0x4a4" name="uni04A4"/><!-- CYRILLIC CAPITAL LIGATURE EN GHE -->
      <map code="0x4a5" name="uni04A5"/><!-- CYRILLIC SMALL LIGATURE EN GHE -->
      <map code="0x4a6" name="uni04A6"/><!-- CYRILLIC CAPITAL LETTER PE WITH MIDDLE HOOK -->
      <map code="0x4a7" name="uni04A7"/><!-- CYRILLIC SMALL LETTER PE WITH MIDDLE HOOK -->
      <map code="0x4a8" name="uni04A8"/><!-- CYRILLIC CAPITAL LETTER ABKHASIAN HA -->
      <map code="0x4a9" name="uni04A9"/><!-- CYRILLIC SMALL LETTER ABKHASIAN HA -->
      <map code="0x4aa" name="uni04AA"/><!-- CYRILLIC CAPITAL LETTER ES WITH DESCENDER -->
      <map code="0x4ab" name="uni04AB"/><!-- CYRILLIC SMALL LETTER ES WITH DESCENDER -->
      <map code="0x4ac" name="uni04AC"/><!-- CYRILLIC CAPITAL LETTER TE WITH DESCENDER -->
      <map code="0x4ad" name="uni04AD"/><!-- CYRILLIC SMALL LETTER TE WITH DESCENDER -->
      <map code="0x4ae" name="uni04AE"/><!-- CYRILLIC CAPITAL LETTER STRAIGHT U -->
      <map code="0x4af" name="uni04AF"/><!-- CYRILLIC SMALL LETTER STRAIGHT U -->
      <map code="0x4b0" name="uni04B0"/><!-- CYRILLIC CAPITAL LETTER STRAIGHT U WITH STROKE -->
      <map code="0x4b1" name="uni04B1"/><!-- CYRILLIC SMALL LETTER STRAIGHT U WITH STROKE -->
      <map code="0x4b2" name="uni04B2"/><!-- CYRILLIC CAPITAL LETTER HA WITH DESCENDER -->
      <map code="0x4b3" name="uni04B3"/><!-- CYRILLIC SMALL LETTER HA WITH DESCENDER -->
      <map code="0x4b4" name="uni04B4"/><!-- CYRILLIC CAPITAL LIGATURE TE TSE -->
      <map code="0x4b5" name="uni04B5"/><!-- CYRILLIC SMALL LIGATURE TE TSE -->
      <map code="0x4b6" name="uni04B6"/><!-- CYRILLIC CAPITAL LETTER CHE WITH DESCENDER -->
      <map code="0x4b7" name="uni04B7"/><!-- CYRILLIC SMALL LETTER CHE WITH DESCENDER -->
      <map code="0x4b8" name="uni04B8"/><!-- CYRILLIC CAPITAL LETTER CHE WITH VERTICAL STROKE -->
      <map code="0x4b9" name="uni04B9"/><!-- CYRILLIC SMALL LETTER CHE WITH VERTICAL STROKE -->
      <map code="0x4ba" name="uni04BA"/><!-- CYRILLIC CAPITAL LETTER SHHA -->
      <map code="0x4bb" name="uni04BB"/><!-- CYRILLIC SMALL LETTER SHHA -->
      <map code="0x4bc" name="uni04BC"/><!-- CYRILLIC CAPITAL LETTER ABKHASIAN CHE -->
      <map code="0x4bd" name="uni04BD"/><!-- CYRILLIC SMALL LETTER ABKHASIAN CHE -->
      <map code="0x4be" name="uni04BE"/><!-- CYRILLIC CAPITAL LETTER ABKHASIAN CHE WITH DESCENDER -->
      <map code="0x4bf" name="uni04BF"/><!-- CYRILLIC SMALL LETTER ABKHASIAN CHE WITH DESCENDER -->
      <map code="0x4c0" name="uni04C0"/><!-- CYRILLIC LETTER PALOCHKA -->
      <map code="0x4c1" name="uni04C1"/><!-- CYRILLIC CAPITAL LETTER ZHE WITH BREVE -->
      <map code="0x4c2" name="uni04C2"/><!-- CYRILLIC SMALL LETTER ZHE WITH BREVE -->
      <map code="0x4c3" name="uni04C3"/><!-- CYRILLIC CAPITAL LETTER KA WITH HOOK -->
      <map code="0x4c4" name="uni04C4"/><!-- CYRILLIC SMALL LETTER KA WITH HOOK -->
      <map code="0x4c5" name="uni04C5"/><!-- CYRILLIC CAPITAL LETTER EL WITH TAIL -->
      <map code="0x4c6" name="uni04C6"/><!-- CYRILLIC SMALL LETTER EL WITH TAIL -->
      <map code="0x4c7" name="uni04C7"/><!-- CYRILLIC CAPITAL LETTER EN WITH HOOK -->
      <map code="0x4c8" name="uni04C8"/><!-- CYRILLIC SMALL LETTER EN WITH HOOK -->
      <map code="0x4c9" name="uni04C9"/><!-- CYRILLIC CAPITAL LETTER EN WITH TAIL -->
      <map code="0x4ca" name="uni04CA"/><!-- CYRILLIC SMALL LETTER EN WITH TAIL -->
      <map code="0x4cb" name="uni04CB"/><!-- CYRILLIC CAPITAL LETTER KHAKASSIAN CHE -->
      <map code="0x4cc" name="uni04CC"/><!-- CYRILLIC SMALL LETTER KHAKASSIAN CHE -->
      <map code="0x4cd" name="uni04CD"/><!-- CYRILLIC CAPITAL LETTER EM WITH TAIL -->
      <map code="0x4ce" name="uni04CE"/><!-- CYRILLIC SMALL LETTER EM WITH TAIL -->
      <map code="0x4cf" name="uni04CF"/><!-- CYRILLIC SMALL LETTER PALOCHKA -->
      <map code="0x4d0" name="uni04D0"/><!-- CYRILLIC CAPITAL LETTER A WITH BREVE -->
      <map code="0x4d1" name="uni04D1"/><!-- CYRILLIC SMALL LETTER A WITH BREVE -->
      <map code="0x4d2" name="uni04D2"/><!-- CYRILLIC CAPITAL LETTER A WITH DIAERESIS -->
      <map code="0x4d3" name="uni04D3"/><!-- CYRILLIC SMALL LETTER A WITH DIAERESIS -->
      <map code="0x4d4" name="uni04D4"/><!-- CYRILLIC CAPITAL LIGATURE A IE -->
      <map code="0x4d5" name="uni04D5"/><!-- CYRILLIC SMALL LIGATURE A IE -->
      <map code="0x4d6" name="uni04D6"/><!-- CYRILLIC CAPITAL LETTER IE WITH BREVE -->
      <map code="0x4d7" name="uni04D7"/><!-- CYRILLIC SMALL LETTER IE WITH BREVE -->
      <map code="0x4d8" name="uni04D8"/><!-- CYRILLIC CAPITAL LETTER SCHWA -->
      <map code="0x4d9" name="uni04D9"/><!-- CYRILLIC SMALL LETTER SCHWA -->
      <map code="0x4da" name="uni04DA"/><!-- CYRILLIC CAPITAL LETTER SCHWA WITH DIAERESIS -->
      <map code="0x4db" name="uni04DB"/><!-- CYRILLIC SMALL LETTER SCHWA WITH DIAERESIS -->
      <map code="0x4dc" name="uni04DC"/><!-- CYRILLIC CAPITAL LETTER ZHE WITH DIAERESIS -->
      <map code="0x4dd" name="uni04DD"/><!-- CYRILLIC SMALL LETTER ZHE WITH DIAERESIS -->
      <map code="0x4de" name="uni04DE"/><!-- CYRILLIC CAPITAL LETTER ZE WITH DIAERESIS -->
      <map code="0x4df" name="uni04DF"/><!-- CYRILLIC SMALL LETTER ZE WITH DIAERESIS -->
      <map code="0x4e0" name="uni04E0"/><!-- CYRILLIC CAPITAL LETTER ABKHASIAN DZE -->
      <map code="0x4e1" name="uni04E1"/><!-- CYRILLIC SMALL LETTER ABKHASIAN DZE -->
      <map code="0x4e2" name="uni04E2"/><!-- CYRILLIC CAPITAL LETTER I WITH MACRON -->
      <map code="0x4e3" name="uni04E3"/><!-- CYRILLIC SMALL LETTER I WITH MACRON -->
      <map code="0x4e4" name="uni04E4"/><!-- CYRILLIC CAPITAL LETTER I WITH DIAERESIS -->
      <map code="0x4e5" name="uni04E5"/><!-- CYRILLIC SMALL LETTER I WITH DIAERESIS -->
      <map code="0x4e6" name="uni04E6"/><!-- CYRILLIC CAPITAL LETTER O WITH DIAERESIS -->
      <map code="0x4e7" name="uni04E7"/><!-- CYRILLIC SMALL LETTER O WITH DIAERESIS -->
      <map code="0x4e8" name="uni04E8"/><!-- CYRILLIC CAPITAL LETTER BARRED O -->
      <map code="0x4e9" name="uni04E9"/><!-- CYRILLIC SMALL LETTER BARRED O -->
      <map code="0x4ea" name="uni04EA"/><!-- CYRILLIC CAPITAL LETTER BARRED O WITH DIAERESIS -->
      <map code="0x4eb" name="uni04EB"/><!-- CYRILLIC SMALL LETTER BARRED O WITH DIAERESIS -->
      <map code="0x4ec" name="uni04EC"/><!-- CYRILLIC CAPITAL LETTER E WITH DIAERESIS -->
      <map code="0x4ed" name="uni04ED"/><!-- CYRILLIC SMALL LETTER E WITH DIAERESIS -->
      <map code="0x4ee" name="uni04EE"/><!-- CYRILLIC CAPITAL LETTER U WITH MACRON -->
      <map code="0x4ef" name="uni04EF"/><!-- CYRILLIC SMALL LETTER U WITH MACRON -->
      <map code="0x4f0" name="uni04F0"/><!-- CYRILLIC CAPITAL LETTER U WITH DIAERESIS -->
      <map code="0x4f1" name="uni04F1"/><!-- CYRILLIC SMALL LETTER U WITH DIAERESIS -->
      <map code="0x4f2" name="uni04F2"/><!-- CYRILLIC CAPITAL LETTER U WITH DOUBLE ACUTE -->
      <map code="0x4f3" name="uni04F3"/><!-- CYRILLIC SMALL LETTER U WITH DOUBLE ACUTE -->
      <map code="0x4f4" name="uni04F4"/><!-- CYRILLIC CAPITAL LETTER CHE WITH DIAERESIS -->
      <map code="0x4f5" name="uni04F5"/><!-- CYRILLIC SMALL LETTER CHE WITH DIAERESIS -->
      <map code="0x4f6" name="uni04F6"/><!-- CYRILLIC CAPITAL LETTER GHE WITH DESCENDER -->
      <map code="0x4f7" name="uni04F7"/><!-- CYRILLIC SMALL LETTER GHE WITH DESCENDER -->
      <map code="0x4f8" name="uni04F8"/><!-- CYRILLIC CAPITAL LETTER YERU WITH DIAERESIS -->
      <map code="0x4f9" name="uni04F9"/><!-- CYRILLIC SMALL LETTER YERU WITH DIAERESIS -->
      <map code="0x4fa" name="uni04FA"/><!-- CYRILLIC CAPITAL LETTER GHE WITH STROKE AND HOOK -->
      <map code="0x4fb" name="uni04FB"/><!-- CYRILLIC SMALL LETTER GHE WITH STROKE AND HOOK -->
      <map code="0x4fc" name="uni04FC"/><!-- CYRILLIC CAPITAL LETTER HA WITH HOOK -->
      <map code="0x4fd" name="uni04FD"/><!-- CYRILLIC SMALL LETTER HA WITH HOOK -->
      <map code="0x4fe" name="uni04FE"/><!-- CYRILLIC CAPITAL LETTER HA WITH STROKE -->
      <map code="0x4ff" name="uni04FF"/><!-- CYRILLIC SMALL LETTER HA WITH STROKE -->
      <map code="0x500" name="uni0500"/><!-- CYRILLIC CAPITAL LETTER KOMI DE -->
      <map code="0x501" name="uni0501"/><!-- CYRILLIC SMALL LETTER KOMI DE -->
      <map code="0x502" name="uni0502"/><!-- CYRILLIC CAPITAL LETTER KOMI DJE -->
      <map code="0x503" name="uni0503"/><!-- CYRILLIC SMALL LETTER KOMI DJE -->
      <map code="0x504" name="uni0504"/><!-- CYRILLIC CAPITAL LETTER KOMI ZJE -->
      <map code="0x505" name="uni0505"/><!-- CYRILLIC SMALL LETTER KOMI ZJE -->
      <map code="0x506" name="uni0506"/><!-- CYRILLIC CAPITAL LETTER KOMI DZJE -->
      <map code="0x507" name="uni0507"/><!-- CYRILLIC SMALL LETTER KOMI DZJE -->
      <map code="0x508" name="uni0508"/><!-- CYRILLIC CAPITAL LETTER KOMI LJE -->
      <map code="0x509" name="uni0509"/><!-- CYRILLIC SMALL LETTER KOMI LJE -->
      <map code="0x50a" name="uni050A"/><!-- CYRILLIC CAPITAL LETTER KOMI NJE -->
      <map code="0x50b" name="uni050B"/><!-- CYRILLIC SMALL LETTER KOMI NJE -->
      <map code="0x50c" name="uni050C"/><!-- CYRILLIC CAPITAL LETTER KOMI SJE -->
      <map code="0x50d" name="uni050D"/><!-- CYRILLIC SMALL LETTER KOMI SJE -->
      <map code="0x50e" name="uni050E"/><!-- CYRILLIC CAPITAL LETTER KOMI TJE -->
      <map code="0x50f" name="uni050F"/><!-- CYRILLIC SMALL LETTER KOMI TJE -->
      <map code="0x510" name="uni0510"/><!-- CYRILLIC CAPITAL LETTER REVERSED ZE -->
      <map code="0x511" name="uni0511"/><!-- CYRILLIC SMALL LETTER REVERSED ZE -->
      <map code="0x512" name="uni0512"/><!-- CYRILLIC CAPITAL LETTER EL WITH HOOK -->
      <map code="0x513" name="uni0513"/><!-- CYRILLIC SMALL LETTER EL WITH HOOK -->
      <map code="0x1e00" name="uni1E00"/><!-- LATIN CAPITAL LETTER A WITH RING BELOW -->
      <map code="0x1e01" name="uni1E01"/><!-- LATIN SMALL LETTER A WITH RING BELOW -->
      <map code="0x1e3e" name="uni1E3E"/><!-- LATIN CAPITAL LETTER M WITH ACUTE -->
      <map code="0x1e3f" name="uni1E3F"/><!-- LATIN SMALL LETTER M WITH ACUTE -->
      <map code="0x1e80" name="Wgrave"/><!-- LATIN CAPITAL LETTER W WITH GRAVE -->
      <map code="0x1e81" name="wgrave"/><!-- LATIN SMALL LETTER W WITH GRAVE -->
      <map code="0x1e82" name="Wacute"/><!-- LATIN CAPITAL LETTER W WITH ACUTE -->
      <map code="0x1e83" name="wacute"/><!-- LATIN SMALL LETTER W WITH ACUTE -->
      <map code="0x1e84" name="Wdieresis"/><!-- LATIN CAPITAL LETTER W WITH DIAERESIS -->
      <map code="0x1e85" name="wdieresis"/><!-- LATIN SMALL LETTER W WITH DIAERESIS -->
      <map code="0x1ea0" name="uni1EA0"/><!-- LATIN CAPITAL LETTER A WITH DOT BELOW -->
      <map code="0x1ea1" name="uni1EA1"/><!-- LATIN SMALL LETTER A WITH DOT BELOW -->
      <map code="0x1ea2" name="uni1EA2"/><!-- LATIN CAPITAL LETTER A WITH HOOK ABOVE -->
      <map code="0x1ea3" name="uni1EA3"/><!-- LATIN SMALL LETTER A WITH HOOK ABOVE -->
      <map code="0x1ea4" name="uni1EA4"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND ACUTE -->
      <map code="0x1ea5" name="uni1EA5"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX AND ACUTE -->
      <map code="0x1ea6" name="uni1EA6"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND GRAVE -->
      <map code="0x1ea7" name="uni1EA7"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX AND GRAVE -->
      <map code="0x1ea8" name="uni1EA8"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND HOOK ABOVE -->
      <map code="0x1ea9" name="uni1EA9"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX AND HOOK ABOVE -->
      <map code="0x1eaa" name="uni1EAA"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND TILDE -->
      <map code="0x1eab" name="uni1EAB"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX AND TILDE -->
      <map code="0x1eac" name="uni1EAC"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND DOT BELOW -->
      <map code="0x1ead" name="uni1EAD"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX AND DOT BELOW -->
      <map code="0x1eae" name="uni1EAE"/><!-- LATIN CAPITAL LETTER A WITH BREVE AND ACUTE -->
      <map code="0x1eaf" name="uni1EAF"/><!-- LATIN SMALL LETTER A WITH BREVE AND ACUTE -->
      <map code="0x1eb0" name="uni1EB0"/><!-- LATIN CAPITAL LETTER A WITH BREVE AND GRAVE -->
      <map code="0x1eb1" name="uni1EB1"/><!-- LATIN SMALL LETTER A WITH BREVE AND GRAVE -->
      <map code="0x1eb2" name="uni1EB2"/><!-- LATIN CAPITAL LETTER A WITH BREVE AND HOOK ABOVE -->
      <map code="0x1eb3" name="uni1EB3"/><!-- LATIN SMALL LETTER A WITH BREVE AND HOOK ABOVE -->
      <map code="0x1eb4" name="uni1EB4"/><!-- LATIN CAPITAL LETTER A WITH BREVE AND TILDE -->
      <map code="0x1eb5" name="uni1EB5"/><!-- LATIN SMALL LETTER A WITH BREVE AND TILDE -->
      <map code="0x1eb6" name="uni1EB6"/><!-- LATIN CAPITAL LETTER A WITH BREVE AND DOT BELOW -->
      <map code="0x1eb7" name="uni1EB7"/><!-- LATIN SMALL LETTER A WITH BREVE AND DOT BELOW -->
      <map code="0x1eb8" name="uni1EB8"/><!-- LATIN CAPITAL LETTER E WITH DOT BELOW -->
      <map code="0x1eb9" name="uni1EB9"/><!-- LATIN SMALL LETTER E WITH DOT BELOW -->
      <map code="0x1eba" name="uni1EBA"/><!-- LATIN CAPITAL LETTER E WITH HOOK ABOVE -->
      <map code="0x1ebb" name="uni1EBB"/><!-- LATIN SMALL LETTER E WITH HOOK ABOVE -->
      <map code="0x1ebc" name="uni1EBC"/><!-- LATIN CAPITAL LETTER E WITH TILDE -->
      <map code="0x1ebd" name="uni1EBD"/><!-- LATIN SMALL LETTER E WITH TILDE -->
      <map code="0x1ebe" name="uni1EBE"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND ACUTE -->
      <map code="0x1ebf" name="uni1EBF"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX AND ACUTE -->
      <map code="0x1ec0" name="uni1EC0"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND GRAVE -->
      <map code="0x1ec1" name="uni1EC1"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX AND GRAVE -->
      <map code="0x1ec2" name="uni1EC2"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND HOOK ABOVE -->
      <map code="0x1ec3" name="uni1EC3"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX AND HOOK ABOVE -->
      <map code="0x1ec4" name="uni1EC4"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND TILDE -->
      <map code="0x1ec5" name="uni1EC5"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX AND TILDE -->
      <map code="0x1ec6" name="uni1EC6"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND DOT BELOW -->
      <map code="0x1ec7" name="uni1EC7"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX AND DOT BELOW -->
      <map code="0x1ec8" name="uni1EC8"/><!-- LATIN CAPITAL LETTER I WITH HOOK ABOVE -->
      <map code="0x1ec9" name="uni1EC9"/><!-- LATIN SMALL LETTER I WITH HOOK ABOVE -->
      <map code="0x1eca" name="uni1ECA"/><!-- LATIN CAPITAL LETTER I WITH DOT BELOW -->
      <map code="0x1ecb" name="uni1ECB"/><!-- LATIN SMALL LETTER I WITH DOT BELOW -->
      <map code="0x1ecc" name="uni1ECC"/><!-- LATIN CAPITAL LETTER O WITH DOT BELOW -->
      <map code="0x1ecd" name="uni1ECD"/><!-- LATIN SMALL LETTER O WITH DOT BELOW -->
      <map code="0x1ece" name="uni1ECE"/><!-- LATIN CAPITAL LETTER O WITH HOOK ABOVE -->
      <map code="0x1ecf" name="uni1ECF"/><!-- LATIN SMALL LETTER O WITH HOOK ABOVE -->
      <map code="0x1ed0" name="uni1ED0"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND ACUTE -->
      <map code="0x1ed1" name="uni1ED1"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX AND ACUTE -->
      <map code="0x1ed2" name="uni1ED2"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND GRAVE -->
      <map code="0x1ed3" name="uni1ED3"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX AND GRAVE -->
      <map code="0x1ed4" name="uni1ED4"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND HOOK ABOVE -->
      <map code="0x1ed5" name="uni1ED5"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX AND HOOK ABOVE -->
      <map code="0x1ed6" name="uni1ED6"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND TILDE -->
      <map code="0x1ed7" name="uni1ED7"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX AND TILDE -->
      <map code="0x1ed8" name="uni1ED8"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND DOT BELOW -->
      <map code="0x1ed9" name="uni1ED9"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX AND DOT BELOW -->
      <map code="0x1eda" name="uni1EDA"/><!-- LATIN CAPITAL LETTER O WITH HORN AND ACUTE -->
      <map code="0x1edb" name="uni1EDB"/><!-- LATIN SMALL LETTER O WITH HORN AND ACUTE -->
      <map code="0x1edc" name="uni1EDC"/><!-- LATIN CAPITAL LETTER O WITH HORN AND GRAVE -->
      <map code="0x1edd" name="uni1EDD"/><!-- LATIN SMALL LETTER O WITH HORN AND GRAVE -->
      <map code="0x1ede" name="uni1EDE"/><!-- LATIN CAPITAL LETTER O WITH HORN AND HOOK ABOVE -->
      <map code="0x1edf" name="uni1EDF"/><!-- LATIN SMALL LETTER O WITH HORN AND HOOK ABOVE -->
      <map code="0x1ee0" name="uni1EE0"/><!-- LATIN CAPITAL LETTER O WITH HORN AND TILDE -->
      <map code="0x1ee1" name="uni1EE1"/><!-- LATIN SMALL LETTER O WITH HORN AND TILDE -->
      <map code="0x1ee2" name="uni1EE2"/><!-- LATIN CAPITAL LETTER O WITH HORN AND DOT BELOW -->
      <map code="0x1ee3" name="uni1EE3"/><!-- LATIN SMALL LETTER O WITH HORN AND DOT BELOW -->
      <map code="0x1ee4" name="uni1EE4"/><!-- LATIN CAPITAL LETTER U WITH DOT BELOW -->
      <map code="0x1ee5" name="uni1EE5"/><!-- LATIN SMALL LETTER U WITH DOT BELOW -->
      <map code="0x1ee6" name="uni1EE6"/><!-- LATIN CAPITAL LETTER U WITH HOOK ABOVE -->
      <map code="0x1ee7" name="uni1EE7"/><!-- LATIN SMALL LETTER U WITH HOOK ABOVE -->
      <map code="0x1ee8" name="uni1EE8"/><!-- LATIN CAPITAL LETTER U WITH HORN AND ACUTE -->
      <map code="0x1ee9" name="uni1EE9"/><!-- LATIN SMALL LETTER U WITH HORN AND ACUTE -->
      <map code="0x1eea" name="uni1EEA"/><!-- LATIN CAPITAL LETTER U WITH HORN AND GRAVE -->
      <map code="0x1eeb" name="uni1EEB"/><!-- LATIN SMALL LETTER U WITH HORN AND GRAVE -->
      <map code="0x1eec" name="uni1EEC"/><!-- LATIN CAPITAL LETTER U WITH HORN AND HOOK ABOVE -->
      <map code="0x1eed" name="uni1EED"/><!-- LATIN SMALL LETTER U WITH HORN AND HOOK ABOVE -->
      <map code="0x1eee" name="uni1EEE"/><!-- LATIN CAPITAL LETTER U WITH HORN AND TILDE -->
      <map code="0x1eef" name="uni1EEF"/><!-- LATIN SMALL LETTER U WITH HORN AND TILDE -->
      <map code="0x1ef0" name="uni1EF0"/><!-- LATIN CAPITAL LETTER U WITH HORN AND DOT BELOW -->
      <map code="0x1ef1" name="uni1EF1"/><!-- LATIN SMALL LETTER U WITH HORN AND DOT BELOW -->
      <map code="0x1ef2" name="Ygrave"/><!-- LATIN CAPITAL LETTER Y WITH GRAVE -->
      <map code="0x1ef3" name="ygrave"/><!-- LATIN SMALL LETTER Y WITH GRAVE -->
      <map code="0x1ef4" name="uni1EF4"/><!-- LATIN CAPITAL LETTER Y WITH DOT BELOW -->
      <map code="0x1ef5" name="uni1EF5"/><!-- LATIN SMALL LETTER Y WITH DOT BELOW -->
      <map code="0x1ef6" name="uni1EF6"/><!-- LATIN CAPITAL LETTER Y WITH HOOK ABOVE -->
      <map code="0x1ef7" name="uni1EF7"/><!-- LATIN SMALL LETTER Y WITH HOOK ABOVE -->
      <map code="0x1ef8" name="uni1EF8"/><!-- LATIN CAPITAL LETTER Y WITH TILDE -->
      <map code="0x1ef9" name="uni1EF9"/><!-- LATIN SMALL LETTER Y WITH TILDE -->
      <map code="0x1f4d" name="uni1F4D"/><!-- GREEK CAPITAL LETTER OMICRON WITH DASIA AND OXIA -->
      <map code="0x2000" name="uni2000"/><!-- EN QUAD -->
      <map code="0x2001" name="uni2001"/><!-- EM QUAD -->
      <map code="0x2002" name="uni2002"/><!-- EN SPACE -->
      <map code="0x2003" name="uni2003"/><!-- EM SPACE -->
      <map code="0x2004" name="uni2004"/><!-- THREE-PER-EM SPACE -->
      <map code="0x2005" name="uni2005"/><!-- FOUR-PER-EM SPACE -->
      <map code="0x2006" name="uni2006"/><!-- SIX-PER-EM SPACE -->
      <map code="0x2007" name="uni2007"/><!-- FIGURE SPACE -->
      <map code="0x2008" name="uni2008"/><!-- PUNCTUATION SPACE -->
      <map code="0x2009" name="uni2009"/><!-- THIN SPACE -->
      <map code="0x200a" name="uni200A"/><!-- HAIR SPACE -->
      <map code="0x200b" name="uni200B"/><!-- ZERO WIDTH SPACE -->
      <map code="0x2010" name="uni2010"/><!-- HYPHEN -->
      <map code="0x2011" name="uni2011"/><!-- NON-BREAKING HYPHEN -->
      <map code="0x2013" name="endash"/><!-- EN DASH -->
      <map code="0x2014" name="emdash"/><!-- EM DASH -->
      <map code="0x2015" name="uni2015"/><!-- HORIZONTAL BAR -->
      <map code="0x2017" name="underscoredbl"/><!-- DOUBLE LOW LINE -->
      <map code="0x2018" name="quoteleft"/><!-- LEFT SINGLE QUOTATION MARK -->
      <map code="0x2019" name="quoteright"/><!-- RIGHT SINGLE QUOTATION MARK -->
      <map code="0x201a" name="quotesinglbase"/><!-- SINGLE LOW-9 QUOTATION MARK -->
      <map code="0x201b" name="quotereversed"/><!-- SINGLE HIGH-REVERSED-9 QUOTATION MARK -->
      <map code="0x201c" name="quotedblleft"/><!-- LEFT DOUBLE QUOTATION MARK -->
      <map code="0x201d" name="quotedblright"/><!-- RIGHT DOUBLE QUOTATION MARK -->
      <map code="0x201e" name="quotedblbase"/><!-- DOUBLE LOW-9 QUOTATION MARK -->
      <map code="0x2020" name="dagger"/><!-- DAGGER -->
      <map code="0x2021" name="daggerdbl"/><!-- DOUBLE DAGGER -->
      <map code="0x2022" name="bullet"/><!-- BULLET -->
      <map code="0x2025" name="twodotenleader"/><!-- TWO DOT LEADER -->
      <map code="0x2026" name="ellipsis"/><!-- HORIZONTAL ELLIPSIS -->
      <map code="0x2027" name="uni2027"/><!-- HYPHENATION POINT -->
      <map code="0x2030" name="perthousand"/><!-- PER MILLE SIGN -->
      <map code="0x2032" name="minute"/><!-- PRIME -->
      <map code="0x2033" name="second"/><!-- DOUBLE PRIME -->
      <map code="0x2039" name="guilsinglleft"/><!-- SINGLE LEFT-POINTING ANGLE QUOTATION MARK -->
      <map code="0x203a" name="guilsinglright"/><!-- SINGLE RIGHT-POINTING ANGLE QUOTATION MARK -->
      <map code="0x203c" name="exclamdbl"/><!-- DOUBLE EXCLAMATION MARK -->
      <map code="0x2044" name="fraction"/><!-- FRACTION SLASH -->
      <map code="0x2074" name="uni2074"/><!-- SUPERSCRIPT FOUR -->
      <map code="0x207f" name="uni207F"/><!-- SUPERSCRIPT LATIN SMALL LETTER N -->
      <map code="0x20a3" name="franc"/><!-- FRENCH FRANC SIGN -->
      <map code="0x20a4" name="lira"/><!-- LIRA SIGN -->
      <map code="0x20a6" name="uni20A6"/><!-- NAIRA SIGN -->
      <map code="0x20a7" name="peseta"/><!-- PESETA SIGN -->
      <map code="0x20a8" name="uni20A8"/><!-- RUPEE SIGN -->
      <map code="0x20a9" name="uni20A9"/><!-- WON SIGN -->
      <map code="0x20aa" name="uni20AA"/><!-- NEW SHEQEL SIGN -->
      <map code="0x20ab" name="dong"/><!-- DONG SIGN -->
      <map code="0x20ac" name="Euro"/><!-- EURO SIGN -->
      <map code="0x20b1" name="uni20B1"/><!-- PESO SIGN -->
      <map code="0x20b9" name="uni20B9"/><!-- ???? -->
      <map code="0x20ba" name="uni20BA"/><!-- ???? -->
      <map code="0x20bc" name="uni20BC"/><!-- ???? -->
      <map code="0x20bd" name="uni20BD"/><!-- ???? -->
      <map code="0x2105" name="uni2105"/><!-- CARE OF -->
      <map code="0x2113" name="uni2113"/><!-- SCRIPT SMALL L -->
      <map code="0x2116" name="uni2116"/><!-- NUMERO SIGN -->
      <map code="0x2122" name="trademark"/><!-- TRADE MARK SIGN -->
      <map code="0x2126" name="uni03A9"/><!-- OHM SIGN -->
      <map code="0x212e" name="estimated"/><!-- ESTIMATED SYMBOL -->
      <map code="0x215b" name="oneeighth"/><!-- VULGAR FRACTION ONE EIGHTH -->
      <map code="0x215c" name="threeeighths"/><!-- VULGAR FRACTION THREE EIGHTHS -->
      <map code="0x215d" name="fiveeighths"/><!-- VULGAR FRACTION FIVE EIGHTHS -->
      <map code="0x215e" name="seveneighths"/><!-- VULGAR FRACTION SEVEN EIGHTHS -->
      <map code="0x2202" name="partialdiff"/><!-- PARTIAL DIFFERENTIAL -->
      <map code="0x2206" name="uni0394"/><!-- INCREMENT -->
      <map code="0x220f" name="product"/><!-- N-ARY PRODUCT -->
      <map code="0x2211" name="summation"/><!-- N-ARY SUMMATION -->
      <map code="0x2212" name="minus"/><!-- MINUS SIGN -->
      <map code="0x221a" name="radical"/><!-- SQUARE ROOT -->
      <map code="0x221e" name="infinity"/><!-- INFINITY -->
      <map code="0x222b" name="integral"/><!-- INTEGRAL -->
      <map code="0x2248" name="approxequal"/><!-- ALMOST EQUAL TO -->
      <map code="0x2260" name="notequal"/><!-- NOT EQUAL TO -->
      <map code="0x2264" name="lessequal"/><!-- LESS-THAN OR EQUAL TO -->
      <map code="0x2265" name="greaterequal"/><!-- GREATER-THAN OR EQUAL TO -->
      <map code="0x25ca" name="lozenge"/><!-- LOZENGE -->
      <map code="0xee01" name="uniEE01"/><!-- ???? -->
      <map code="0xee02" name="uniEE02"/><!-- ???? -->
      <map code="0xf6c3" name="uniF6C3"/><!-- ???? -->
      <map code="0xfb01" name="uniFB01"/><!-- LATIN SMALL LIGATURE FI -->
      <map code="0xfb02" name="uniFB02"/><!-- LATIN SMALL LIGATURE FL -->
      <map code="0xfb03" name="uniFB03"/><!-- LATIN SMALL LIGATURE FFI -->
      <map code="0xfb04" name="uniFB04"/><!-- LATIN SMALL LIGATURE FFL -->
      <map code="0xfeff" name="uniFEFF"/><!-- ZERO WIDTH NO-BREAK SPACE -->
      <map code="0xfffc" name="uniFFFC"/><!-- OBJECT REPLACEMENT CHARACTER -->
      <map code="0xfffd" name="uniFFFD"/><!-- REPLACEMENT CHARACTER -->
    </cmap_format_12>
  </cmap>

  <fpgm>
    <assembly>
      PUSH[ ]	/* 1 value pushed */
      0
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSH[ ]	/* 1 value pushed */
      9
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSH[ ]	/* 2 values pushed */
      1 1
      INSTCTRL[ ]	/* SetInstrExecControl */
      EIF[ ]	/* EndIf */
      PUSH[ ]	/* 1 value pushed */
      511
      SCANCTRL[ ]	/* ScanConversionControl */
      PUSH[ ]	/* 1 value pushed */
      132
      SCVTCI[ ]	/* SetCVTCutIn */
      PUSH[ ]	/* 2 values pushed */
      9 3
      SDS[ ]	/* SetDeltaShiftInGState */
      SDB[ ]	/* SetDeltaBaseInGState */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      1
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      ROUND[01]	/* Round */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSH[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      2
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      1
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      3
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      PUSH[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      EIF[ ]	/* EndIf */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      MD[0]	/* MeasureDistance */
      ABS[ ]	/* Absolute */
      ROLL[ ]	/* RollTopThreeStack */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      ROUND[00]	/* Round */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      PUSH[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      ROUND[00]	/* Round */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      NEG[ ]	/* Negate */
      ROLL[ ]	/* RollTopThreeStack */
      EIF[ ]	/* EndIf */
      MDAP[1]	/* MoveDirectAbsPt */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      0
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      ROUND[01]	/* Round */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      0
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSH[ ]	/* 1 value pushed */
      64
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      ROUND[01]	/* Round */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      0
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSH[ ]	/* 1 value pushed */
      64
      NEG[ ]	/* Negate */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      MSIRP[0]	/* MoveStackIndirRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      4
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      PUSH[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      EIF[ ]	/* EndIf */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      ROUND[10]	/* Round */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      PUSH[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      ROUND[10]	/* Round */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      EIF[ ]	/* EndIf */
      MDAP[1]	/* MoveDirectAbsPt */
      MIRP[11101]	/* MoveIndirectRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      5
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      3
      MINDEX[ ]	/* MoveXToTopStack */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      PUSH[ ]	/* 1 value pushed */
      128
      WCVTP[ ]	/* WriteCVTInPixels */
      ELSE[ ]	/* Else */
      PUSH[ ]	/* 1 value pushed */
      64
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      PUSH[ ]	/* 1 value pushed */
      192
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSH[ ]	/* 1 value pushed */
      192
      WCVTP[ ]	/* WriteCVTInPixels */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      6
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      ROUND[01]	/* Round */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSH[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      RDTG[ ]	/* RoundDownToGrid */
      ROUND[01]	/* Round */
      RTG[ ]	/* RoundToGrid */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSH[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      7
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      6
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      8
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      3
      MINDEX[ ]	/* MoveXToTopStack */
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      PUSH[ ]	/* 1 value pushed */
      64
      ELSE[ ]	/* Else */
      PUSH[ ]	/* 1 value pushed */
      0
      EIF[ ]	/* EndIf */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      3
      MINDEX[ ]	/* MoveXToTopStack */
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      PUSH[ ]	/* 1 value pushed */
      128
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      ELSE[ ]	/* Else */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      EIF[ ]	/* EndIf */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      3
      MINDEX[ ]	/* MoveXToTopStack */
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      PUSH[ ]	/* 1 value pushed */
      192
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      ELSE[ ]	/* Else */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      EIF[ ]	/* EndIf */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      3
      MINDEX[ ]	/* MoveXToTopStack */
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      PUSH[ ]	/* 1 value pushed */
      256
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      ELSE[ ]	/* Else */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      EIF[ ]	/* EndIf */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      3
      MINDEX[ ]	/* MoveXToTopStack */
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      PUSH[ ]	/* 1 value pushed */
      320
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      ELSE[ ]	/* Else */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      EIF[ ]	/* EndIf */
      DUP[ ]	/* DuplicateTopStack */
      PUSH[ ]	/* 1 value pushed */
      3
      MINDEX[ ]	/* MoveXToTopStack */
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      PUSH[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      RCVT[ ]	/* ReadCVT */
      PUSH[ ]	/* 1 value pushed */
      384
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      PUSH[ ]	/* 1 value pushed */
      384
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      PUSH[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      RCVT[ ]	/* ReadCVT */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      9
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      RCVT[ ]	/* ReadCVT */
      WCVTP[ ]	/* WriteCVTInPixels */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      10
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      40
      RCVT[ ]	/* ReadCVT */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      11
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      41
      RCVT[ ]	/* ReadCVT */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      12
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 2 values pushed */
      39 1
      GETINFO[ ]	/* GetInfo */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      PUSH[ ]	/* 2 values pushed */
      16384 1024
      MUL[ ]	/* Multiply */
      PUSH[ ]	/* 1 value pushed */
      2048
      GETINFO[ ]	/* GetInfo */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSH[ ]	/* 2 values pushed */
      40 1000
      WCVTF[ ]	/* WriteCVTInFUnits */
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      PUSH[ ]	/* 1 value pushed */
      35
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      PUSH[ ]	/* 1 value pushed */
      32
      GETINFO[ ]	/* GetInfo */
      PUSH[ ]	/* 1 value pushed */
      4096
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSH[ ]	/* 2 values pushed */
      40 1000
      WCVTF[ ]	/* WriteCVTInFUnits */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      13
      FDEF[ ]	/* FunctionDefinition */
      PUSH[ ]	/* 1 value pushed */
      64
      GETINFO[ ]	/* GetInfo */
      PUSH[ ]	/* 1 value pushed */
      8192
      AND[ ]	/* LogicalAnd */
      IF[ ]	/* If */
      PUSH[ ]	/* 2 values pushed */
      41 0
      WCVTP[ ]	/* WriteCVTInPixels */
      ELSE[ ]	/* Else */
      PUSH[ ]	/* 2 values pushed */
      41 1000
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
    </assembly>
  </fpgm>

  <prep>
    <assembly>
      PUSH[ ]	/* 1 value pushed */
      12
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 1 value pushed */
      0
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSH[ ]	/* 3 values pushed */
      1 16 2
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      PUSH[ ]	/* 3 values pushed */
      17 1 2
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      PUSH[ ]	/* 8 values pushed */
      17 58 48 37 27 16 0 8
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSH[ ]	/* 8 values pushed */
      1 72 59 46 33 20 0 8
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 8 values pushed */
      2 88 72 56 40 20 0 8
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 8 values pushed */
      3 82 67 52 37 22 0 8
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 8 values pushed */
      4 94 77 60 43 25 0 8
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 8 values pushed */
      5 54 44 34 25 15 0 8
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 8 values pushed */
      6 113 93 70 50 27 0 8
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 8 values pushed */
      7 145 119 92 58 35 0 8
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 8 values pushed */
      8 126 103 80 57 26 0 8
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 8 values pushed */
      9 84 69 54 38 20 0 8
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 8 values pushed */
      10 118 96 75 54 29 0 8
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 8 values pushed */
      11 131 100 78 58 35 0 8
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 8 values pushed */
      12 217 178 138 99 60 0 8
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 8 values pushed */
      13 20 16 12 9 6 0 8
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 8 values pushed */
      14 60 50 39 28 17 0 8
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 8 values pushed */
      15 64 52 41 29 20 0 8
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 8 values pushed */
      16 80 65 46 33 20 0 8
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSH[ ]	/* 3 values pushed */
      18 11 7
      CALL[ ]	/* CallFunction */
      PUSH[ ]	/* 1 value pushed */
      0
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      RDTG[ ]	/* RoundDownToGrid */
      ROUND[01]	/* Round */
      RTG[ ]	/* RoundToGrid */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSH[ ]	/* 3 values pushed */
      63 26 1
      DELTAC1[ ]	/* DeltaExceptionC1 */
      PUSH[ ]	/* 3 values pushed */
      95 26 1
      DELTAC1[ ]	/* DeltaExceptionC1 */
      PUSH[ ]	/* 3 values pushed */
      127 26 1
      DELTAC1[ ]	/* DeltaExceptionC1 */
      PUSH[ ]	/* 3 values pushed */
      47 26 1
      DELTAC2[ ]	/* DeltaExceptionC2 */
      PUSH[ ]	/* 3 values pushed */
      79 26 1
      DELTAC2[ ]	/* DeltaExceptionC2 */
      PUSH[ ]	/* 3 values pushed */
      111 26 1
      DELTAC2[ ]	/* DeltaExceptionC2 */
      PUSH[ ]	/* 3 values pushed */
      143 26 1
      DELTAC2[ ]	/* DeltaExceptionC2 */
      PUSH[ ]	/* 3 values pushed */
      175 26 1
      DELTAC2[ ]	/* DeltaExceptionC2 */
      PUSH[ ]	/* 3 values pushed */
      255 26 1
      DELTAC2[ ]	/* DeltaExceptionC2 */
      PUSH[ ]	/* 3 values pushed */
      31 26 1
      DELTAC3[ ]	/* DeltaExceptionC3 */
      PUSH[ ]	/* 3 values pushed */
      63 26 1
      DELTAC3[ ]	/* DeltaExceptionC3 */
      PUSH[ ]	/* 3 values pushed */
      95 26 1
      DELTAC3[ ]	/* DeltaExceptionC3 */
      PUSH[ ]	/* 3 values pushed */
      127 26 1
      DELTAC3[ ]	/* DeltaExceptionC3 */
      PUSH[ ]	/* 3 values pushed */
      15 30 1
      DELTAC1[ ]	/* DeltaExceptionC1 */
      PUSH[ ]	/* 3 values pushed */
      127 30 1
      DELTAC1[ ]	/* DeltaExceptionC1 */
      PUSH[ ]	/* 3 values pushed */
      239 30 1
      DELTAC1[ ]	/* DeltaExceptionC1 */
      PUSH[ ]	/* 3 values pushed */
      31 30 1
      DELTAC2[ ]	/* DeltaExceptionC2 */
      PUSH[ ]	/* 3 values pushed */
      95 30 1
      DELTAC2[ ]	/* DeltaExceptionC2 */
      PUSH[ ]	/* 3 values pushed */
      143 30 1
      DELTAC2[ ]	/* DeltaExceptionC2 */
      PUSH[ ]	/* 3 values pushed */
      207 30 1
      DELTAC2[ ]	/* DeltaExceptionC2 */
      PUSH[ ]	/* 3 values pushed */
      255 30 1
      DELTAC2[ ]	/* DeltaExceptionC2 */
      PUSH[ ]	/* 3 values pushed */
      63 30 1
      DELTAC3[ ]	/* DeltaExceptionC3 */
      PUSH[ ]	/* 3 values pushed */
      111 30 1
      DELTAC3[ ]	/* DeltaExceptionC3 */
      PUSH[ ]	/* 3 values pushed */
      47 32 1
      DELTAC1[ ]	/* DeltaExceptionC1 */
      PUSH[ ]	/* 3 values pushed */
      111 32 1
      DELTAC1[ ]	/* DeltaExceptionC1 */
    </assembly>
  </prep>

  <cvt>
    <cv index="0" value="42"/>
    <cv index="1" value="157"/>
    <cv index="2" value="128"/>
    <cv index="3" value="138"/>
    <cv index="4" value="120"/>
    <cv index="5" value="212"/>
    <cv index="6" value="100"/>
    <cv index="7" value="78"/>
    <cv index="8" value="90"/>
    <cv index="9" value="135"/>
    <cv index="10" value="96"/>
    <cv index="11" value="86"/>
    <cv index="12" value="52"/>
    <cv index="13" value="572"/>
    <cv index="14" value="188"/>
    <cv index="15" value="178"/>
    <cv index="16" value="142"/>
    <cv index="17" value="196"/>
    <cv index="18" value="0"/>
    <cv index="19" value="20"/>
    <cv index="20" value="-416"/>
    <cv index="21" value="20"/>
    <cv index="22" value="667"/>
    <cv index="23" value="32"/>
    <cv index="24" value="801"/>
    <cv index="25" value="11"/>
    <cv index="26" value="1082"/>
    <cv index="27" value="20"/>
    <cv index="28" value="1165"/>
    <cv index="29" value="16"/>
    <cv index="30" value="1456"/>
    <cv index="31" value="20"/>
    <cv index="32" value="1560"/>
    <cv index="33" value="21"/>
    <cv index="34" value="422"/>
    <cv index="35" value="17"/>
    <cv index="36" value="1728"/>
    <cv index="37" value="14"/>
    <cv index="38" value="1753"/>
    <cv index="39" value="6"/>
    <cv index="40" value="0"/>
    <cv index="41" value="0"/>
  </cvt>

  <loca>
    <!-- The 'loca' table will be calculated by the compiler -->
  </loca>

  <glyf>

    <!-- The xMin, yMin, xMax and yMax values
         will be recalculated by the compiler. -->

    <TTGlyph name=".notdef" xMin="100" yMin="0" xMax="808" yMax="1456">
      <contour>
        <pt x="808" y="0" on="1"/>
        <pt x="100" y="0" on="1"/>
        <pt x="100" y="1456" on="1"/>
        <pt x="808" y="1456" on="1"/>
      </contour>
      <contour>
        <pt x="754" y="84" on="1"/>
        <pt x="754" y="1371" on="1"/>
        <pt x="480" y="728" on="1"/>
      </contour>
      <contour>
        <pt x="154" y="1359" on="1"/>
        <pt x="154" y="96" on="1"/>
        <pt x="422" y="728" on="1"/>
      </contour>
      <contour>
        <pt x="194" y="54" on="1"/>
        <pt x="709" y="54" on="1"/>
        <pt x="451" y="660" on="1"/>
      </contour>
      <contour>
        <pt x="451" y="796" on="1"/>
        <pt x="709" y="1402" on="1"/>
        <pt x="194" y="1402" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          12 16 17
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          4 2 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          5 2 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          7 2 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          8 2 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 2 values pushed */
          10 12
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          12 2 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          13 2 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 2 values pushed */
          14 12
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="A" xMin="28" yMin="0" xMax="1309" yMax="1456">
      <contour>
        <pt x="973" y="380" on="1"/>
        <pt x="363" y="380" on="1"/>
        <pt x="226" y="0" on="1"/>
        <pt x="28" y="0" on="1"/>
        <pt x="584" y="1456" on="1"/>
        <pt x="752" y="1456" on="1"/>
        <pt x="1309" y="0" on="1"/>
        <pt x="1112" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="421" y="538" on="1"/>
        <pt x="916" y="538" on="1"/>
        <pt x="668" y="1219" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          10 11 12
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          8 4 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          10 4 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="AE" xMin="-14" yMin="0" xMax="1879" yMax="1456">
      <contour>
        <pt x="1879" y="0" on="1"/>
        <pt x="996" y="0" on="1"/>
        <pt x="981" y="353" on="1"/>
        <pt x="417" y="353" on="1"/>
        <pt x="212" y="0" on="1"/>
        <pt x="-14" y="0" on="1"/>
        <pt x="866" y="1456" on="1"/>
        <pt x="1817" y="1456" on="1"/>
        <pt x="1817" y="1304" on="1"/>
        <pt x="1126" y="1304" on="1"/>
        <pt x="1146" y="833" on="1"/>
        <pt x="1736" y="833" on="1"/>
        <pt x="1736" y="682" on="1"/>
        <pt x="1152" y="682" on="1"/>
        <pt x="1174" y="151" on="1"/>
        <pt x="1879" y="151" on="1"/>
      </contour>
      <contour>
        <pt x="518" y="527" on="1"/>
        <pt x="974" y="527" on="1"/>
        <pt x="943" y="1260" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          17 6 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          2 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          8 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          11 0 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          12 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          14 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          18 6 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="AEacute" xMin="-14" yMin="0" xMax="1879" yMax="1858">
      <component glyphName="AE" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="713" y="322" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          21 8
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Aacute" xMin="28" yMin="0" xMax="1309" yMax="1846">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="447" y="310" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          13 8
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Abreve" xMin="28" yMin="0" xMax="1309" yMax="1806">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="breve" x="244" y="311" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          13
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Acircumflex" xMin="28" yMin="0" xMax="1309" yMax="1846">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="201" y="310" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          15 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Adieresis" xMin="28" yMin="0" xMax="1309" yMax="1787">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="249" y="310" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          17 4
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          27
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Agrave" xMin="28" yMin="0" xMax="1309" yMax="1846">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="304" y="310" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          12 8
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Alpha" xMin="28" yMin="0" xMax="1309" yMax="1456">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="Alphatonos" xMin="28" yMin="0" xMax="1309" yMax="1599">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="tonos" x="4" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Amacron" xMin="28" yMin="0" xMax="1309" yMax="1763">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="macron" x="199" y="318" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          12
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Aogonek" xMin="28" yMin="-433" xMax="1309" yMax="1456">
      <contour>
        <pt x="752" y="1456" on="1"/>
        <pt x="1309" y="0" on="1"/>
        <pt x="1271" y="0" on="1"/>
        <pt x="1213" y="-45" on="1"/>
        <pt x="1100" y="-136" on="0"/>
        <pt x="1100" y="-222" on="1"/>
        <pt x="1100" y="-294" on="0"/>
        <pt x="1178" y="-294" on="1"/>
        <pt x="1226" y="-294" on="0"/>
        <pt x="1278" y="-268" on="1"/>
        <pt x="1291" y="-389" on="1"/>
        <pt x="1221" y="-433" on="0"/>
        <pt x="1131" y="-433" on="1"/>
        <pt x="1042" y="-433" on="0"/>
        <pt x="939" y="-329" on="0"/>
        <pt x="939" y="-243" on="1"/>
        <pt x="939" y="-99" on="0"/>
        <pt x="1108" y="9" on="1"/>
        <pt x="973" y="380" on="1"/>
        <pt x="363" y="380" on="1"/>
        <pt x="226" y="0" on="1"/>
        <pt x="28" y="0" on="1"/>
        <pt x="584" y="1456" on="1"/>
      </contour>
      <contour>
        <pt x="421" y="538" on="1"/>
        <pt x="916" y="538" on="1"/>
        <pt x="668" y="1219" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          22
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          22 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          20
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          20 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          7 3 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          23 20 22
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          19 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          25 22 20
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Aring" xMin="28" yMin="0" xMax="1309" yMax="1937">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="ring" x="336" y="321" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          14 6
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Aringacute" xMin="28" yMin="0" xMax="1309" yMax="1940">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="glyph00551" x="346" y="290" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Atilde" xMin="28" yMin="0" xMax="1309" yMax="1826">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="tilde" x="197" y="314" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          14 4
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="B" xMin="169" yMin="0" xMax="1160" yMax="1456">
      <contour>
        <pt x="169" y="0" on="1"/>
        <pt x="169" y="1456" on="1"/>
        <pt x="645" y="1456" on="1"/>
        <pt x="882" y="1456" on="0"/>
        <pt x="1121" y="1260" on="0"/>
        <pt x="1121" y="1068" on="1"/>
        <pt x="1121" y="966" on="0"/>
        <pt x="1005" y="809" on="0"/>
        <pt x="905" y="766" on="1"/>
        <pt x="1023" y="733" on="0"/>
        <pt x="1160" y="548" on="0"/>
        <pt x="1160" y="420" on="1"/>
        <pt x="1160" y="224" on="0"/>
        <pt x="906" y="0" on="0"/>
        <pt x="674" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="361" y="681" on="1"/>
        <pt x="361" y="157" on="1"/>
        <pt x="678" y="157" on="1"/>
        <pt x="812" y="157" on="0"/>
        <pt x="967" y="296" on="0"/>
        <pt x="967" y="418" on="1"/>
        <pt x="967" y="681" on="0"/>
        <pt x="681" y="681" on="1"/>
      </contour>
      <contour>
        <pt x="361" y="835" on="1"/>
        <pt x="651" y="835" on="1"/>
        <pt x="777" y="835" on="0"/>
        <pt x="928" y="961" on="0"/>
        <pt x="928" y="1069" on="1"/>
        <pt x="928" y="1189" on="0"/>
        <pt x="788" y="1298" on="0"/>
        <pt x="645" y="1298" on="1"/>
        <pt x="361" y="1298" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          23 0 1
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          15 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          8 15 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          16 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          31 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Beta" xMin="169" yMin="0" xMax="1160" yMax="1456">
      <component glyphName="B" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="C" xMin="119" yMin="-20" xMax="1240" yMax="1476">
      <contour>
        <pt x="1240" y="462" on="1"/>
        <pt x="1213" y="231" on="0"/>
        <pt x="926" y="-20" on="0"/>
        <pt x="688" y="-20" on="1"/>
        <pt x="430" y="-20" on="0"/>
        <pt x="119" y="350" on="0"/>
        <pt x="119" y="660" on="1"/>
        <pt x="119" y="800" on="1"/>
        <pt x="119" y="1003" on="0"/>
        <pt x="264" y="1311" on="0"/>
        <pt x="530" y="1476" on="0"/>
        <pt x="705" y="1476" on="1"/>
        <pt x="937" y="1476" on="0"/>
        <pt x="1217" y="1217" on="0"/>
        <pt x="1240" y="988" on="1"/>
        <pt x="1047" y="988" on="1"/>
        <pt x="1022" y="1162" on="0"/>
        <pt x="855" y="1318" on="0"/>
        <pt x="705" y="1318" on="1"/>
        <pt x="521" y="1318" on="0"/>
        <pt x="312" y="1046" on="0"/>
        <pt x="312" y="795" on="1"/>
        <pt x="312" y="654" on="1"/>
        <pt x="312" y="417" on="0"/>
        <pt x="510" y="137" on="0"/>
        <pt x="688" y="137" on="1"/>
        <pt x="848" y="137" on="0"/>
        <pt x="1019" y="282" on="0"/>
        <pt x="1047" y="462" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          18 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          25 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          28
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Cacute" xMin="119" yMin="-20" xMax="1240" yMax="1879">
      <component glyphName="C" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="454" y="343" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          31 8
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Ccaron" xMin="119" yMin="-20" xMax="1240" yMax="1879">
      <component glyphName="C" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="229" y="344" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          33 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Ccedilla" xMin="119" yMin="-444" xMax="1240" yMax="1476">
      <component glyphName="C" x="0" y="0" flags="0x204"/>
      <component glyphName="cedilla" x="466" y="-9" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Ccircumflex" xMin="119" yMin="-20" xMax="1240" yMax="1879">
      <component glyphName="C" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="208" y="343" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          31 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Cdotaccent" xMin="119" yMin="-20" xMax="1240" yMax="1817">
      <component glyphName="C" x="0" y="0" flags="0x204"/>
      <component glyphName="dotaccent" x="429" y="343" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          35 4
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Chi" xMin="57" yMin="0" xMax="1230" yMax="1456">
      <component glyphName="X" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="D" xMin="169" yMin="0" xMax="1222" yMax="1456">
      <contour>
        <pt x="169" y="0" on="1"/>
        <pt x="169" y="1456" on="1"/>
        <pt x="580" y="1456" on="1"/>
        <pt x="770" y="1456" on="0"/>
        <pt x="1062" y="1288" on="0"/>
        <pt x="1221" y="978" on="0"/>
        <pt x="1222" y="777" on="1"/>
        <pt x="1222" y="684" on="1"/>
        <pt x="1222" y="478" on="0"/>
        <pt x="1063" y="168" on="0"/>
        <pt x="768" y="2" on="0"/>
        <pt x="572" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="361" y="1298" on="1"/>
        <pt x="361" y="157" on="1"/>
        <pt x="563" y="157" on="1"/>
        <pt x="785" y="157" on="0"/>
        <pt x="1032" y="433" on="0"/>
        <pt x="1032" y="688" on="1"/>
        <pt x="1032" y="773" on="1"/>
        <pt x="1032" y="1021" on="0"/>
        <pt x="799" y="1296" on="0"/>
        <pt x="585" y="1298" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          12 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          13 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Dcaron" xMin="169" yMin="0" xMax="1222" yMax="1858">
      <component glyphName="D" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="158" y="323" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          27 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Dcroat" xMin="7" yMin="0" xMax="1252" yMax="1456">
      <contour>
        <pt x="199" y="0" on="1"/>
        <pt x="199" y="666" on="1"/>
        <pt x="7" y="666" on="1"/>
        <pt x="7" y="817" on="1"/>
        <pt x="199" y="817" on="1"/>
        <pt x="199" y="1456" on="1"/>
        <pt x="610" y="1456" on="1"/>
        <pt x="800" y="1456" on="0"/>
        <pt x="1092" y="1288" on="0"/>
        <pt x="1251" y="978" on="0"/>
        <pt x="1252" y="777" on="1"/>
        <pt x="1252" y="684" on="1"/>
        <pt x="1252" y="478" on="0"/>
        <pt x="1093" y="168" on="0"/>
        <pt x="798" y="2" on="0"/>
        <pt x="602" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="643" y="666" on="1"/>
        <pt x="391" y="666" on="1"/>
        <pt x="391" y="157" on="1"/>
        <pt x="592" y="157" on="1"/>
        <pt x="814" y="157" on="0"/>
        <pt x="1061" y="431" on="0"/>
        <pt x="1062" y="680" on="1"/>
        <pt x="1062" y="773" on="1"/>
        <pt x="1062" y="1021" on="0"/>
        <pt x="829" y="1296" on="0"/>
        <pt x="615" y="1298" on="1"/>
        <pt x="391" y="1298" on="1"/>
        <pt x="391" y="817" on="1"/>
        <pt x="643" y="817" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          4 0 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          207 4 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          47 4 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          159 4 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 3 values pushed */
          1 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          18 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          27 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          28
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="E" xMin="169" yMin="0" xMax="1094" yMax="1456">
      <contour>
        <pt x="992" y="673" on="1"/>
        <pt x="361" y="673" on="1"/>
        <pt x="361" y="157" on="1"/>
        <pt x="1094" y="157" on="1"/>
        <pt x="1094" y="0" on="1"/>
        <pt x="169" y="0" on="1"/>
        <pt x="169" y="1456" on="1"/>
        <pt x="1084" y="1456" on="1"/>
        <pt x="1084" y="1298" on="1"/>
        <pt x="361" y="1298" on="1"/>
        <pt x="361" y="830" on="1"/>
        <pt x="992" y="830" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          11 4 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          2 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          8 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Eacute" xMin="169" yMin="0" xMax="1094" yMax="1858">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="394" y="322" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          14 8
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Ebreve" xMin="169" yMin="0" xMax="1094" yMax="1818">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="breve" x="191" y="323" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          15
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Ecaron" xMin="169" yMin="0" xMax="1094" yMax="1858">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="169" y="323" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          17 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Ecircumflex" xMin="169" yMin="0" xMax="1094" yMax="1858">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="148" y="322" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          16 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Edieresis" xMin="169" yMin="0" xMax="1094" yMax="1799">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="196" y="322" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          18 4
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          27
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Edotaccent" xMin="169" yMin="0" xMax="1094" yMax="1796">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="dotaccent" x="369" y="322" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          19 4
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Egrave" xMin="169" yMin="0" xMax="1094" yMax="1858">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="251" y="322" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          13 8
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Emacron" xMin="169" yMin="0" xMax="1094" yMax="1775">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="macron" x="146" y="330" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          13
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Eng" xMin="162" yMin="-437" xMax="1265" yMax="1456">
      <contour>
        <pt x="1265" y="1456" on="1"/>
        <pt x="1265" y="-83" on="1"/>
        <pt x="1265" y="-251" on="0"/>
        <pt x="1094" y="-437" on="0"/>
        <pt x="938" y="-437" on="1"/>
        <pt x="877" y="-437" on="0"/>
        <pt x="823" y="-419" on="1"/>
        <pt x="837" y="-265" on="1"/>
        <pt x="874" y="-279" on="0"/>
        <pt x="935" y="-279" on="1"/>
        <pt x="1071" y="-279" on="0"/>
        <pt x="1071" y="-71" on="1"/>
        <pt x="1071" y="0" on="1"/>
        <pt x="354" y="1130" on="1"/>
        <pt x="354" y="0" on="1"/>
        <pt x="162" y="0" on="1"/>
        <pt x="162" y="1456" on="1"/>
        <pt x="354" y="1456" on="1"/>
        <pt x="1071" y="328" on="1"/>
        <pt x="1071" y="1456" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          6 20 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          16 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          14 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          9 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          13 14 16
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          18 14 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Eogonek" xMin="169" yMin="-433" xMax="1094" yMax="1456">
      <contour>
        <pt x="992" y="673" on="1"/>
        <pt x="361" y="673" on="1"/>
        <pt x="361" y="157" on="1"/>
        <pt x="1094" y="157" on="1"/>
        <pt x="1094" y="0" on="1"/>
        <pt x="1021" y="0" on="1"/>
        <pt x="963" y="-45" on="1"/>
        <pt x="850" y="-136" on="0"/>
        <pt x="850" y="-222" on="1"/>
        <pt x="850" y="-294" on="0"/>
        <pt x="928" y="-294" on="1"/>
        <pt x="976" y="-294" on="0"/>
        <pt x="1028" y="-268" on="1"/>
        <pt x="1041" y="-389" on="1"/>
        <pt x="971" y="-433" on="0"/>
        <pt x="881" y="-433" on="1"/>
        <pt x="792" y="-433" on="0"/>
        <pt x="689" y="-329" on="0"/>
        <pt x="689" y="-243" on="1"/>
        <pt x="689" y="-105" on="0"/>
        <pt x="844" y="0" on="1"/>
        <pt x="169" y="0" on="1"/>
        <pt x="169" y="1456" on="1"/>
        <pt x="1084" y="1456" on="1"/>
        <pt x="1084" y="1298" on="1"/>
        <pt x="361" y="1298" on="1"/>
        <pt x="361" y="830" on="1"/>
        <pt x="992" y="830" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          22
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          22 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          21 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          15 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          26 21 22
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          26
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          1 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          2 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          10 3 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          22
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          25 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Epsilon" xMin="169" yMin="0" xMax="1094" yMax="1456">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="Epsilontonos" xMin="-215" yMin="0" xMax="1094" yMax="1599">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="tonos" x="-398" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Eta" xMin="169" yMin="0" xMax="1288" yMax="1456">
      <component glyphName="H" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="Etatonos" xMin="-201" yMin="0" xMax="1288" yMax="1601">
      <component glyphName="H" x="0" y="0" flags="0x204"/>
      <component glyphName="tonos" x="-384" y="2" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Eth" xMin="7" yMin="0" xMax="1252" yMax="1456">
      <contour>
        <pt x="199" y="0" on="1"/>
        <pt x="199" y="666" on="1"/>
        <pt x="7" y="666" on="1"/>
        <pt x="7" y="817" on="1"/>
        <pt x="199" y="817" on="1"/>
        <pt x="199" y="1456" on="1"/>
        <pt x="610" y="1456" on="1"/>
        <pt x="800" y="1456" on="0"/>
        <pt x="1092" y="1288" on="0"/>
        <pt x="1251" y="978" on="0"/>
        <pt x="1252" y="777" on="1"/>
        <pt x="1252" y="684" on="1"/>
        <pt x="1252" y="478" on="0"/>
        <pt x="1093" y="168" on="0"/>
        <pt x="798" y="2" on="0"/>
        <pt x="602" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="643" y="666" on="1"/>
        <pt x="391" y="666" on="1"/>
        <pt x="391" y="157" on="1"/>
        <pt x="592" y="157" on="1"/>
        <pt x="814" y="157" on="0"/>
        <pt x="1061" y="431" on="0"/>
        <pt x="1062" y="680" on="1"/>
        <pt x="1062" y="773" on="1"/>
        <pt x="1062" y="1021" on="0"/>
        <pt x="829" y="1296" on="0"/>
        <pt x="615" y="1298" on="1"/>
        <pt x="391" y="1298" on="1"/>
        <pt x="391" y="817" on="1"/>
        <pt x="643" y="817" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          4 0 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          207 4 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          47 4 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          159 4 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 3 values pushed */
          1 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          18 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          27 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          28
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Euro" xMin="95" yMin="-20" xMax="1052" yMax="1476">
      <contour>
        <pt x="849" y="541" on="1"/>
        <pt x="465" y="541" on="1"/>
        <pt x="469" y="346" on="0"/>
        <pt x="649" y="136" on="0"/>
        <pt x="814" y="136" on="1"/>
        <pt x="930" y="136" on="0"/>
        <pt x="1032" y="170" on="1"/>
        <pt x="1052" y="10" on="1"/>
        <pt x="932" y="-20" on="0"/>
        <pt x="812" y="-20" on="1"/>
        <pt x="564" y="-20" on="0"/>
        <pt x="279" y="273" on="0"/>
        <pt x="273" y="541" on="1"/>
        <pt x="95" y="541" on="1"/>
        <pt x="95" y="665" on="1"/>
        <pt x="273" y="665" on="1"/>
        <pt x="273" y="802" on="1"/>
        <pt x="95" y="802" on="1"/>
        <pt x="95" y="927" on="1"/>
        <pt x="273" y="927" on="1"/>
        <pt x="283" y="1189" on="0"/>
        <pt x="568" y="1476" on="0"/>
        <pt x="811" y="1476" on="1"/>
        <pt x="917" y="1476" on="0"/>
        <pt x="1052" y="1445" on="1"/>
        <pt x="1032" y="1283" on="1"/>
        <pt x="923" y="1318" on="0"/>
        <pt x="813" y="1318" on="1"/>
        <pt x="649" y="1318" on="0"/>
        <pt x="472" y="1115" on="0"/>
        <pt x="466" y="927" on="1"/>
        <pt x="849" y="927" on="1"/>
        <pt x="849" y="802" on="1"/>
        <pt x="465" y="802" on="1"/>
        <pt x="465" y="665" on="1"/>
        <pt x="849" y="665" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          21 36 37
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          22
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          22 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          35 9 22
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          35
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          0 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          4 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          31
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          31
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 7 values pushed */
          15 31 31 31 47 31 3
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          32 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          22
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          27 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="F" xMin="169" yMin="0" xMax="1071" yMax="1456">
      <contour>
        <pt x="972" y="643" on="1"/>
        <pt x="361" y="643" on="1"/>
        <pt x="361" y="0" on="1"/>
        <pt x="169" y="0" on="1"/>
        <pt x="169" y="1456" on="1"/>
        <pt x="1071" y="1456" on="1"/>
        <pt x="1071" y="1298" on="1"/>
        <pt x="361" y="1298" on="1"/>
        <pt x="361" y="800" on="1"/>
        <pt x="972" y="800" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          9 2 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          6 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="G" xMin="122" yMin="-20" xMax="1244" yMax="1476">
      <contour>
        <pt x="1244" y="191" on="1"/>
        <pt x="1170" y="85" on="0"/>
        <pt x="905" y="-20" on="0"/>
        <pt x="729" y="-20" on="1"/>
        <pt x="551" y="-20" on="0"/>
        <pt x="275" y="147" on="0"/>
        <pt x="124" y="455" on="0"/>
        <pt x="122" y="658" on="1"/>
        <pt x="122" y="785" on="1"/>
        <pt x="122" y="1114" on="0"/>
        <pt x="429" y="1476" on="0"/>
        <pt x="707" y="1476" on="1"/>
        <pt x="935" y="1476" on="0"/>
        <pt x="1213" y="1243" on="0"/>
        <pt x="1244" y="1029" on="1"/>
        <pt x="1052" y="1029" on="1"/>
        <pt x="998" y="1318" on="0"/>
        <pt x="708" y="1318" on="1"/>
        <pt x="515" y="1318" on="0"/>
        <pt x="316" y="1047" on="0"/>
        <pt x="315" y="790" on="1"/>
        <pt x="315" y="671" on="1"/>
        <pt x="315" y="426" on="0"/>
        <pt x="539" y="137" on="0"/>
        <pt x="730" y="137" on="1"/>
        <pt x="838" y="137" on="0"/>
        <pt x="1000" y="185" on="0"/>
        <pt x="1053" y="242" on="1"/>
        <pt x="1053" y="569" on="1"/>
        <pt x="716" y="569" on="1"/>
        <pt x="716" y="725" on="1"/>
        <pt x="1244" y="725" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          17 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          24 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          30 3 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          30
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 5 values pushed */
          191 30 207 30 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          15 30 31 30 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          63 30 79 30 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          29 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Gamma" xMin="177" yMin="0" xMax="1072" yMax="1456">
      <contour>
        <pt x="1072" y="1298" on="1"/>
        <pt x="370" y="1298" on="1"/>
        <pt x="370" y="0" on="1"/>
        <pt x="177" y="0" on="1"/>
        <pt x="177" y="1456" on="1"/>
        <pt x="1072" y="1456" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Gbreve" xMin="122" yMin="-20" xMax="1244" yMax="1839">
      <component glyphName="G" x="0" y="0" flags="0x204"/>
      <component glyphName="breve" x="243" y="344" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          34
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Gcircumflex" xMin="122" yMin="-20" xMax="1244" yMax="1879">
      <component glyphName="G" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="200" y="343" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          34 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Gdotaccent" xMin="122" yMin="-20" xMax="1244" yMax="1817">
      <component glyphName="G" x="0" y="0" flags="0x204"/>
      <component glyphName="dotaccent" x="421" y="343" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          39 4
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="H" xMin="169" yMin="0" xMax="1288" yMax="1456">
      <contour>
        <pt x="1288" y="0" on="1"/>
        <pt x="1095" y="0" on="1"/>
        <pt x="1095" y="673" on="1"/>
        <pt x="361" y="673" on="1"/>
        <pt x="361" y="0" on="1"/>
        <pt x="169" y="0" on="1"/>
        <pt x="169" y="1456" on="1"/>
        <pt x="361" y="1456" on="1"/>
        <pt x="361" y="830" on="1"/>
        <pt x="1095" y="830" on="1"/>
        <pt x="1095" y="1456" on="1"/>
        <pt x="1288" y="1456" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          239 9 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          207 9 223 9 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 3 values pushed */
          143 9 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 3 values pushed */
          47 9 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          159 9 1
          DELTAP3[ ]	/* DeltaExceptionP3 */
          PUSH[ ]	/* 3 values pushed */
          2 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Hbar" xMin="29" yMin="0" xMax="1416" yMax="1456">
      <contour>
        <pt x="1282" y="1166" on="1"/>
        <pt x="1416" y="1166" on="1"/>
        <pt x="1416" y="1024" on="1"/>
        <pt x="1282" y="1024" on="1"/>
        <pt x="1282" y="0" on="1"/>
        <pt x="1089" y="0" on="1"/>
        <pt x="1089" y="673" on="1"/>
        <pt x="356" y="673" on="1"/>
        <pt x="356" y="0" on="1"/>
        <pt x="163" y="0" on="1"/>
        <pt x="163" y="1024" on="1"/>
        <pt x="29" y="1024" on="1"/>
        <pt x="29" y="1166" on="1"/>
        <pt x="163" y="1166" on="1"/>
        <pt x="163" y="1456" on="1"/>
        <pt x="356" y="1456" on="1"/>
        <pt x="356" y="1166" on="1"/>
        <pt x="1089" y="1166" on="1"/>
        <pt x="1089" y="1456" on="1"/>
        <pt x="1282" y="1456" on="1"/>
      </contour>
      <contour>
        <pt x="356" y="830" on="1"/>
        <pt x="1089" y="830" on="1"/>
        <pt x="1089" y="1024" on="1"/>
        <pt x="356" y="1024" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          15 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          20 8 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          20
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          16 20 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          23 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          7 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          10
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          18
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Hcircumflex" xMin="169" yMin="0" xMax="1288" yMax="1858">
      <component glyphName="H" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="241" y="322" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          16 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="I" xMin="183" yMin="0" xMax="375" yMax="1456">
      <contour>
        <pt x="375" y="0" on="1"/>
        <pt x="183" y="0" on="1"/>
        <pt x="183" y="1456" on="1"/>
        <pt x="375" y="1456" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="IJ" xMin="183" yMin="-20" xMax="1529" yMax="1456">
      <component glyphName="I" x="0" y="0" flags="0x4"/>
      <component glyphName="J" x="557" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Iacute" xMin="176" yMin="0" xMax="593" yMax="1858">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="53" y="322" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          6 8
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Ibreve" xMin="-20" yMin="0" xMax="579" yMax="1818">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="breve" x="-149" y="323" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          7
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Icircumflex" xMin="-23" yMin="0" xMax="582" yMax="1858">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="-192" y="322" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          8 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Idieresis" xMin="-43" yMin="0" xMax="606" yMax="1799">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="-144" y="322" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          10 4
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Idotaccent" xMin="169" yMin="0" xMax="388" yMax="1796">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="dotaccent" x="28" y="322" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          11 4
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Igrave" xMin="-32" yMin="0" xMax="385" yMax="1858">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="-89" y="322" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          5 8
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Imacron" xMin="-52" yMin="0" xMax="620" yMax="1775">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="macron" x="-194" y="330" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          5
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Iogonek" xMin="24" yMin="-424" xMax="376" yMax="1456">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="ogonek" x="-26" y="9" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Iota" xMin="183" yMin="0" xMax="375" yMax="1456">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="Iotadieresis" xMin="-43" yMin="0" xMax="606" yMax="1799">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="-144" y="322" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          11 4
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Iotatonos" xMin="-195" yMin="0" xMax="375" yMax="1600">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="tonos" x="-378" y="1" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Itilde" xMin="-73" yMin="0" xMax="634" yMax="1838">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="tilde" x="-196" y="326" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          7 4
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="J" xMin="53" yMin="-20" xMax="972" yMax="1456">
      <contour>
        <pt x="779" y="1456" on="1"/>
        <pt x="972" y="1456" on="1"/>
        <pt x="972" y="425" on="1"/>
        <pt x="972" y="216" on="0"/>
        <pt x="721" y="-20" on="0"/>
        <pt x="512" y="-20" on="1"/>
        <pt x="295" y="-20" on="0"/>
        <pt x="53" y="202" on="0"/>
        <pt x="53" y="402" on="1"/>
        <pt x="245" y="402" on="1"/>
        <pt x="245" y="277" on="0"/>
        <pt x="382" y="137" on="0"/>
        <pt x="512" y="137" on="1"/>
        <pt x="631" y="137" on="0"/>
        <pt x="778" y="287" on="0"/>
        <pt x="779" y="422" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          12 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Jcircumflex" xMin="53" yMin="-20" xMax="1154" yMax="1845">
      <component glyphName="J" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="380" y="309" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          20 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="K" xMin="169" yMin="0" xMax="1285" yMax="1456">
      <contour>
        <pt x="539" y="677" on="1"/>
        <pt x="361" y="492" on="1"/>
        <pt x="361" y="0" on="1"/>
        <pt x="169" y="0" on="1"/>
        <pt x="169" y="1456" on="1"/>
        <pt x="361" y="1456" on="1"/>
        <pt x="361" y="736" on="1"/>
        <pt x="1008" y="1456" on="1"/>
        <pt x="1240" y="1456" on="1"/>
        <pt x="667" y="813" on="1"/>
        <pt x="1285" y="0" on="1"/>
        <pt x="1055" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 2 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 17 values pushed */
          74 0 90 0 106 0 122 0 138 0 154 0 170 0 186 0 8
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          57 0 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          6 5 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 19 values pushed */
          54 6 70 6 86 6 102 6 118 6 134 6 150 6 166 6 182 6 9
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Kappa" xMin="169" yMin="0" xMax="1285" yMax="1456">
      <component glyphName="K" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="L" xMin="169" yMin="0" xMax="1052" yMax="1456">
      <contour>
        <pt x="362" y="157" on="1"/>
        <pt x="1052" y="157" on="1"/>
        <pt x="1052" y="0" on="1"/>
        <pt x="169" y="0" on="1"/>
        <pt x="169" y="1456" on="1"/>
        <pt x="362" y="1456" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Lacute" xMin="161" yMin="0" xMax="1052" yMax="1841">
      <component glyphName="L" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="38" y="305" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          8 8
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Lambda" xMin="50" yMin="0" xMax="1283" yMax="1456">
      <contour>
        <pt x="666" y="1161" on="1"/>
        <pt x="256" y="0" on="1"/>
        <pt x="50" y="0" on="1"/>
        <pt x="580" y="1456" on="1"/>
        <pt x="752" y="1456" on="1"/>
        <pt x="1283" y="0" on="1"/>
        <pt x="1076" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 3 1
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Lcaron" xMin="169" yMin="0" xMax="1052" yMax="1457">
      <component glyphName="L" x="0" y="0" flags="0x204"/>
      <component glyphName="uniF6C3" x="469" y="1218" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Ldot" xMin="169" yMin="0" xMax="1052" yMax="1456">
      <component glyphName="L" x="0" y="0" flags="0x204"/>
      <component glyphName="dotaccent" x="444" y="-571" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Lslash" xMin="34" yMin="0" xMax="1051" yMax="1456">
      <contour>
        <pt x="361" y="843" on="1"/>
        <pt x="624" y="927" on="1"/>
        <pt x="624" y="802" on="1"/>
        <pt x="361" y="718" on="1"/>
        <pt x="361" y="157" on="1"/>
        <pt x="1051" y="157" on="1"/>
        <pt x="1051" y="0" on="1"/>
        <pt x="168" y="0" on="1"/>
        <pt x="168" y="657" on="1"/>
        <pt x="34" y="615" on="1"/>
        <pt x="34" y="740" on="1"/>
        <pt x="168" y="782" on="1"/>
        <pt x="168" y="1456" on="1"/>
        <pt x="361" y="1456" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          1 12 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          2 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          4 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          10
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="M" xMin="169" yMin="0" xMax="1618" yMax="1456">
      <contour>
        <pt x="417" y="1456" on="1"/>
        <pt x="893" y="268" on="1"/>
        <pt x="1369" y="1456" on="1"/>
        <pt x="1618" y="1456" on="1"/>
        <pt x="1618" y="0" on="1"/>
        <pt x="1426" y="0" on="1"/>
        <pt x="1426" y="567" on="1"/>
        <pt x="1444" y="1179" on="1"/>
        <pt x="966" y="0" on="1"/>
        <pt x="819" y="0" on="1"/>
        <pt x="342" y="1176" on="1"/>
        <pt x="361" y="567" on="1"/>
        <pt x="361" y="0" on="1"/>
        <pt x="169" y="0" on="1"/>
        <pt x="169" y="1456" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          1 0 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          7 0 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          10 0 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Mu" xMin="169" yMin="0" xMax="1618" yMax="1456">
      <component glyphName="M" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="N" xMin="169" yMin="0" xMax="1288" yMax="1456">
      <contour>
        <pt x="1288" y="0" on="1"/>
        <pt x="1095" y="0" on="1"/>
        <pt x="362" y="1122" on="1"/>
        <pt x="362" y="0" on="1"/>
        <pt x="169" y="0" on="1"/>
        <pt x="169" y="1456" on="1"/>
        <pt x="362" y="1456" on="1"/>
        <pt x="1097" y="329" on="1"/>
        <pt x="1097" y="1456" on="1"/>
        <pt x="1288" y="1456" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          1 10 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          2 5 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          7 5 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Nacute" xMin="169" yMin="0" xMax="1288" yMax="1846">
      <component glyphName="N" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="501" y="310" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          12 8
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Ncaron" xMin="169" yMin="0" xMax="1288" yMax="1846">
      <component glyphName="N" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="276" y="311" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          15 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Ntilde" xMin="169" yMin="0" xMax="1288" yMax="1826">
      <component glyphName="N" x="0" y="0" flags="0x204"/>
      <component glyphName="tilde" x="251" y="314" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          13 4
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Nu" xMin="169" yMin="0" xMax="1288" yMax="1456">
      <component glyphName="N" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="O" xMin="118" yMin="-20" xMax="1289" yMax="1476">
      <contour>
        <pt x="1289" y="681" on="1"/>
        <pt x="1289" y="467" on="0"/>
        <pt x="1145" y="148" on="0"/>
        <pt x="881" y="-20" on="0"/>
        <pt x="705" y="-20" on="1"/>
        <pt x="533" y="-20" on="0"/>
        <pt x="267" y="149" on="0"/>
        <pt x="120" y="462" on="0"/>
        <pt x="118" y="668" on="1"/>
        <pt x="118" y="773" on="1"/>
        <pt x="118" y="983" on="0"/>
        <pt x="264" y="1305" on="0"/>
        <pt x="531" y="1476" on="0"/>
        <pt x="703" y="1476" on="1"/>
        <pt x="878" y="1476" on="0"/>
        <pt x="1145" y="1307" on="0"/>
        <pt x="1289" y="986" on="0"/>
        <pt x="1289" y="773" on="1"/>
      </contour>
      <contour>
        <pt x="1098" y="775" on="1"/>
        <pt x="1098" y="1034" on="0"/>
        <pt x="890" y="1311" on="0"/>
        <pt x="703" y="1311" on="1"/>
        <pt x="521" y="1311" on="0"/>
        <pt x="312" y="1034" on="0"/>
        <pt x="309" y="788" on="1"/>
        <pt x="309" y="681" on="1"/>
        <pt x="309" y="430" on="0"/>
        <pt x="520" y="143" on="0"/>
        <pt x="705" y="143" on="1"/>
        <pt x="891" y="143" on="0"/>
        <pt x="1095" y="414" on="0"/>
        <pt x="1098" y="667" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          21 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          28 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="OE" xMin="104" yMin="-21" xMax="1801" yMax="1476">
      <contour>
        <pt x="1801" y="0" on="1"/>
        <pt x="953" y="0" on="1"/>
        <pt x="775" y="-21" on="0"/>
        <pt x="661" y="-21" on="1"/>
        <pt x="499" y="-21" on="0"/>
        <pt x="245" y="129" on="0"/>
        <pt x="105" y="400" on="0"/>
        <pt x="104" y="571" on="1"/>
        <pt x="104" y="880" on="1"/>
        <pt x="104" y="1052" on="0"/>
        <pt x="243" y="1325" on="0"/>
        <pt x="497" y="1476" on="0"/>
        <pt x="659" y="1476" on="1"/>
        <pt x="783" y="1476" on="0"/>
        <pt x="953" y="1456" on="1"/>
        <pt x="1791" y="1456" on="1"/>
        <pt x="1791" y="1298" on="1"/>
        <pt x="1068" y="1298" on="1"/>
        <pt x="1068" y="830" on="1"/>
        <pt x="1699" y="830" on="1"/>
        <pt x="1699" y="673" on="1"/>
        <pt x="1068" y="673" on="1"/>
        <pt x="1068" y="157" on="1"/>
        <pt x="1801" y="157" on="1"/>
      </contour>
      <contour>
        <pt x="661" y="130" on="1"/>
        <pt x="774" y="130" on="0"/>
        <pt x="876" y="144" on="1"/>
        <pt x="876" y="1310" on="1"/>
        <pt x="767" y="1325" on="0"/>
        <pt x="659" y="1325" on="1"/>
        <pt x="486" y="1325" on="0"/>
        <pt x="292" y="1096" on="0"/>
        <pt x="290" y="889" on="1"/>
        <pt x="290" y="576" on="1"/>
        <pt x="290" y="365" on="0"/>
        <pt x="485" y="130" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          1 36 37
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          26
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          14 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          16 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          19 0 14
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          20 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          22 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          24 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          29 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Oacute" xMin="118" yMin="-20" xMax="1289" yMax="1848">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="481" y="312" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          34 8
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Obreve" xMin="118" yMin="-20" xMax="1289" yMax="1808">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="breve" x="278" y="313" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          34
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Ocircumflex" xMin="118" yMin="-20" xMax="1289" yMax="1848">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="235" y="312" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          34 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Odieresis" xMin="118" yMin="-20" xMax="1289" yMax="1789">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="283" y="312" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          39 4
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          48
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Ograve" xMin="118" yMin="-20" xMax="1289" yMax="1848">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="338" y="312" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          33 8
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Ohorn" xMin="101" yMin="-20" xMax="1437" yMax="1591">
      <contour>
        <pt x="1272" y="681" on="1"/>
        <pt x="1272" y="467" on="0"/>
        <pt x="1128" y="148" on="0"/>
        <pt x="864" y="-20" on="0"/>
        <pt x="688" y="-20" on="1"/>
        <pt x="517" y="-20" on="0"/>
        <pt x="251" y="148" on="0"/>
        <pt x="102" y="466" on="0"/>
        <pt x="101" y="673" on="1"/>
        <pt x="101" y="773" on="1"/>
        <pt x="101" y="983" on="0"/>
        <pt x="247" y="1304" on="0"/>
        <pt x="514" y="1476" on="0"/>
        <pt x="686" y="1476" on="1"/>
        <pt x="926" y="1476" on="0"/>
        <pt x="1081" y="1321" on="1"/>
        <pt x="1177" y="1328" on="0"/>
        <pt x="1270" y="1459" on="0"/>
        <pt x="1270" y="1591" on="1"/>
        <pt x="1437" y="1591" on="1"/>
        <pt x="1437" y="1258" on="0"/>
        <pt x="1174" y="1197" on="1"/>
        <pt x="1271" y="1025" on="0"/>
        <pt x="1272" y="779" on="1"/>
      </contour>
      <contour>
        <pt x="1082" y="775" on="1"/>
        <pt x="1082" y="1033" on="0"/>
        <pt x="875" y="1311" on="0"/>
        <pt x="686" y="1311" on="1"/>
        <pt x="504" y="1311" on="0"/>
        <pt x="295" y="1034" on="0"/>
        <pt x="292" y="788" on="1"/>
        <pt x="292" y="681" on="1"/>
        <pt x="292" y="430" on="0"/>
        <pt x="503" y="143" on="0"/>
        <pt x="688" y="143" on="1"/>
        <pt x="879" y="143" on="0"/>
        <pt x="1082" y="425" on="0"/>
        <pt x="1082" y="682" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          4 38 39
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          34
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          15 13 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          27 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          34 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Ohungarumlaut" xMin="118" yMin="-20" xMax="1289" yMax="1847">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="hungarumlaut" x="363" y="312" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          38 8
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          34
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Omacron" xMin="118" yMin="-20" xMax="1289" yMax="1765">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="macron" x="233" y="320" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          33
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Omegatonos" xMin="-23" yMin="0" xMax="1247" yMax="1599">
      <component glyphName="uni03A9" x="20" y="0" flags="0x4"/>
      <component glyphName="tonos" x="-206" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Omicron" xMin="118" yMin="-20" xMax="1289" yMax="1476">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="Omicrontonos" xMin="-26" yMin="-20" xMax="1309" yMax="1599">
      <component glyphName="O" x="20" y="0" flags="0x4"/>
      <component glyphName="tonos" x="-209" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Oslash" xMin="118" yMin="-93" xMax="1309" yMax="1516">
      <contour>
        <pt x="1289" y="681" on="1"/>
        <pt x="1289" y="467" on="0"/>
        <pt x="1145" y="148" on="0"/>
        <pt x="881" y="-20" on="0"/>
        <pt x="705" y="-20" on="1"/>
        <pt x="534" y="-20" on="0"/>
        <pt x="403" y="62" on="1"/>
        <pt x="306" y="-93" on="1"/>
        <pt x="164" y="-93" on="1"/>
        <pt x="308" y="138" on="1"/>
        <pt x="118" y="330" on="0"/>
        <pt x="118" y="690" on="1"/>
        <pt x="118" y="773" on="1"/>
        <pt x="118" y="983" on="0"/>
        <pt x="264" y="1305" on="0"/>
        <pt x="531" y="1476" on="0"/>
        <pt x="703" y="1476" on="1"/>
        <pt x="917" y="1476" on="0"/>
        <pt x="1065" y="1351" on="1"/>
        <pt x="1168" y="1516" on="1"/>
        <pt x="1309" y="1516" on="1"/>
        <pt x="1150" y="1261" on="1"/>
        <pt x="1287" y="1074" on="0"/>
        <pt x="1289" y="780" on="1"/>
      </contour>
      <contour>
        <pt x="309" y="681" on="1"/>
        <pt x="309" y="437" on="0"/>
        <pt x="407" y="296" on="1"/>
        <pt x="971" y="1200" on="1"/>
        <pt x="869" y="1311" on="0"/>
        <pt x="703" y="1311" on="1"/>
        <pt x="521" y="1311" on="0"/>
        <pt x="312" y="1034" on="0"/>
        <pt x="309" y="788" on="1"/>
      </contour>
      <contour>
        <pt x="1098" y="775" on="1"/>
        <pt x="1098" y="957" on="0"/>
        <pt x="1042" y="1088" on="1"/>
        <pt x="493" y="207" on="1"/>
        <pt x="584" y="143" on="0"/>
        <pt x="705" y="143" on="1"/>
        <pt x="891" y="143" on="0"/>
        <pt x="1095" y="414" on="0"/>
        <pt x="1098" y="667" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          4 42 43
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          29
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          38
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          16 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          26 16 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          35 16 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          27
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          29 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          26
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          36
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          38 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Oslashacute" xMin="118" yMin="-93" xMax="1309" yMax="1920">
      <component glyphName="Oslash" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="489" y="384" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          16 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          44 8
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Otilde" xMin="118" yMin="-20" xMax="1289" yMax="1828">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="tilde" x="231" y="316" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          35 4
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="P" xMin="169" yMin="0" xMax="1216" yMax="1456">
      <contour>
        <pt x="361" y="570" on="1"/>
        <pt x="361" y="0" on="1"/>
        <pt x="169" y="0" on="1"/>
        <pt x="169" y="1456" on="1"/>
        <pt x="706" y="1456" on="1"/>
        <pt x="945" y="1456" on="0"/>
        <pt x="1216" y="1212" on="0"/>
        <pt x="1216" y="1011" on="1"/>
        <pt x="1216" y="799" on="0"/>
        <pt x="951" y="570" on="0"/>
        <pt x="704" y="570" on="1"/>
      </contour>
      <contour>
        <pt x="361" y="727" on="1"/>
        <pt x="706" y="727" on="1"/>
        <pt x="860" y="727" on="0"/>
        <pt x="1024" y="872" on="0"/>
        <pt x="1024" y="1009" on="1"/>
        <pt x="1024" y="1139" on="0"/>
        <pt x="860" y="1295" on="0"/>
        <pt x="717" y="1298" on="1"/>
        <pt x="361" y="1298" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          10 20 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          11 3 1
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          18 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Phi" xMin="77" yMin="0" xMax="1396" yMax="1456">
      <contour>
        <pt x="834" y="1271" on="1"/>
        <pt x="995" y="1268" on="0"/>
        <pt x="1252" y="1130" on="0"/>
        <pt x="1396" y="880" on="0"/>
        <pt x="1396" y="724" on="1"/>
        <pt x="1396" y="566" on="0"/>
        <pt x="1253" y="316" on="0"/>
        <pt x="998" y="179" on="0"/>
        <pt x="834" y="175" on="1"/>
        <pt x="834" y="0" on="1"/>
        <pt x="640" y="0" on="1"/>
        <pt x="640" y="175" on="1"/>
        <pt x="389" y="179" on="0"/>
        <pt x="77" y="482" on="0"/>
        <pt x="77" y="722" on="1"/>
        <pt x="77" y="870" on="0"/>
        <pt x="202" y="1108" on="0"/>
        <pt x="318" y="1181" on="1"/>
        <pt x="457" y="1268" on="0"/>
        <pt x="640" y="1271" on="1"/>
        <pt x="640" y="1456" on="1"/>
        <pt x="834" y="1456" on="1"/>
      </contour>
      <contour>
        <pt x="268" y="722" on="1"/>
        <pt x="268" y="538" on="0"/>
        <pt x="462" y="338" on="0"/>
        <pt x="640" y="334" on="1"/>
        <pt x="640" y="1111" on="1"/>
        <pt x="460" y="1107" on="0"/>
        <pt x="268" y="905" on="0"/>
      </contour>
      <contour>
        <pt x="1205" y="724" on="1"/>
        <pt x="1205" y="905" on="0"/>
        <pt x="1012" y="1107" on="0"/>
        <pt x="834" y="1111" on="1"/>
        <pt x="834" y="334" on="1"/>
        <pt x="1014" y="338" on="0"/>
        <pt x="1205" y="541" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          10 36 37
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          25
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          32
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          20
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          20 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          19 20 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          8 9 20
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          33 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          25
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          26 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          32
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Pi" xMin="178" yMin="0" xMax="1281" yMax="1456">
      <contour>
        <pt x="1281" y="0" on="1"/>
        <pt x="1088" y="0" on="1"/>
        <pt x="1088" y="1298" on="1"/>
        <pt x="370" y="1298" on="1"/>
        <pt x="370" y="0" on="1"/>
        <pt x="178" y="0" on="1"/>
        <pt x="178" y="1456" on="1"/>
        <pt x="1281" y="1456" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          2 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Psi" xMin="90" yMin="0" xMax="1313" yMax="1456">
      <contour>
        <pt x="790" y="523" on="1"/>
        <pt x="946" y="546" on="0"/>
        <pt x="1120" y="761" on="0"/>
        <pt x="1120" y="931" on="1"/>
        <pt x="1120" y="1456" on="1"/>
        <pt x="1313" y="1456" on="1"/>
        <pt x="1313" y="928" on="1"/>
        <pt x="1313" y="769" on="0"/>
        <pt x="1186" y="524" on="0"/>
        <pt x="949" y="377" on="0"/>
        <pt x="790" y="362" on="1"/>
        <pt x="790" y="0" on="1"/>
        <pt x="597" y="0" on="1"/>
        <pt x="597" y="362" on="1"/>
        <pt x="366" y="385" on="0"/>
        <pt x="93" y="683" on="0"/>
        <pt x="90" y="920" on="1"/>
        <pt x="90" y="1456" on="1"/>
        <pt x="282" y="1456" on="1"/>
        <pt x="282" y="927" on="1"/>
        <pt x="283" y="764" on="0"/>
        <pt x="448" y="549" on="0"/>
        <pt x="597" y="524" on="1"/>
        <pt x="597" y="1456" on="1"/>
        <pt x="790" y="1456" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          0 25 26
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          17 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          23 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          22 4 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          22
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          22
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          13 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          10
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Q" xMin="109" yMin="-246" xMax="1286" yMax="1476">
      <contour>
        <pt x="1281" y="681" on="1"/>
        <pt x="1281" y="470" on="0"/>
        <pt x="1147" y="165" on="0"/>
        <pt x="1026" y="79" on="1"/>
        <pt x="1286" y="-125" on="1"/>
        <pt x="1155" y="-246" on="1"/>
        <pt x="848" y="-2" on="1"/>
        <pt x="776" y="-20" on="0"/>
        <pt x="696" y="-20" on="1"/>
        <pt x="524" y="-20" on="0"/>
        <pt x="258" y="149" on="0"/>
        <pt x="111" y="462" on="0"/>
        <pt x="109" y="668" on="1"/>
        <pt x="109" y="773" on="1"/>
        <pt x="109" y="983" on="0"/>
        <pt x="255" y="1305" on="0"/>
        <pt x="522" y="1476" on="0"/>
        <pt x="694" y="1476" on="1"/>
        <pt x="870" y="1476" on="0"/>
        <pt x="1137" y="1306" on="0"/>
        <pt x="1281" y="987" on="0"/>
        <pt x="1281" y="774" on="1"/>
      </contour>
      <contour>
        <pt x="1089" y="775" on="1"/>
        <pt x="1089" y="1032" on="0"/>
        <pt x="884" y="1311" on="0"/>
        <pt x="694" y="1311" on="1"/>
        <pt x="513" y="1311" on="0"/>
        <pt x="304" y="1034" on="0"/>
        <pt x="301" y="788" on="1"/>
        <pt x="301" y="681" on="1"/>
        <pt x="301" y="431" on="0"/>
        <pt x="510" y="143" on="0"/>
        <pt x="882" y="143" on="0"/>
        <pt x="1086" y="414" on="0"/>
        <pt x="1089" y="667" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          8 35 36
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          25
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          17 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          3 8 17
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          17
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          25 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          32 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="R" xMin="168" yMin="0" xMax="1225" yMax="1456">
      <contour>
        <pt x="703" y="589" on="1"/>
        <pt x="361" y="589" on="1"/>
        <pt x="361" y="0" on="1"/>
        <pt x="168" y="0" on="1"/>
        <pt x="168" y="1456" on="1"/>
        <pt x="650" y="1456" on="1"/>
        <pt x="896" y="1456" on="0"/>
        <pt x="1161" y="1232" on="0"/>
        <pt x="1161" y="1018" on="1"/>
        <pt x="1161" y="882" on="0"/>
        <pt x="1014" y="680" on="0"/>
        <pt x="883" y="630" on="1"/>
        <pt x="1225" y="12" on="1"/>
        <pt x="1225" y="0" on="1"/>
        <pt x="1019" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="361" y="746" on="1"/>
        <pt x="656" y="746" on="1"/>
        <pt x="799" y="746" on="0"/>
        <pt x="968" y="894" on="0"/>
        <pt x="968" y="1018" on="1"/>
        <pt x="968" y="1153" on="0"/>
        <pt x="807" y="1297" on="0"/>
        <pt x="655" y="1298" on="1"/>
        <pt x="361" y="1298" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          5 24 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          16 4 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          11 0 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          22 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Racute" xMin="168" yMin="0" xMax="1225" yMax="1846">
      <component glyphName="R" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="384" y="310" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          26 8
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Rcaron" xMin="168" yMin="0" xMax="1225" yMax="1846">
      <component glyphName="R" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="159" y="311" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          29 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Rho" xMin="169" yMin="0" xMax="1216" yMax="1456">
      <component glyphName="P" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="S" xMin="80" yMin="-20" xMax="1138" yMax="1476">
      <contour>
        <pt x="598" y="649" on="1"/>
        <pt x="351" y="720" on="0"/>
        <pt x="126" y="927" on="0"/>
        <pt x="126" y="1079" on="1"/>
        <pt x="126" y="1251" on="0"/>
        <pt x="401" y="1476" on="0"/>
        <pt x="621" y="1476" on="1"/>
        <pt x="771" y="1476" on="0"/>
        <pt x="1006" y="1360" on="0"/>
        <pt x="1135" y="1156" on="0"/>
        <pt x="1135" y="1035" on="1"/>
        <pt x="942" y="1035" on="1"/>
        <pt x="942" y="1167" on="0"/>
        <pt x="774" y="1318" on="0"/>
        <pt x="621" y="1318" on="1"/>
        <pt x="479" y="1318" on="0"/>
        <pt x="320" y="1193" on="0"/>
        <pt x="320" y="1082" on="1"/>
        <pt x="320" y="993" on="0"/>
        <pt x="471" y="870" on="0"/>
        <pt x="834" y="768" on="0"/>
        <pt x="1039" y="645" on="0"/>
        <pt x="1138" y="481" on="0"/>
        <pt x="1138" y="370" on="1"/>
        <pt x="1138" y="193" on="0"/>
        <pt x="862" y="-20" on="0"/>
        <pt x="631" y="-20" on="1"/>
        <pt x="481" y="-20" on="0"/>
        <pt x="221" y="95" on="0"/>
        <pt x="80" y="295" on="0"/>
        <pt x="80" y="422" on="1"/>
        <pt x="273" y="422" on="1"/>
        <pt x="273" y="290" on="0"/>
        <pt x="468" y="137" on="0"/>
        <pt x="631" y="137" on="1"/>
        <pt x="783" y="137" on="0"/>
        <pt x="945" y="261" on="0"/>
        <pt x="945" y="475" on="0"/>
        <pt x="795" y="592" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          0 39 40
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          26
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          26 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          14 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          38 26 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          38
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          20 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          26
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          31
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          26
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          34 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Sacute" xMin="80" yMin="-20" xMax="1138" yMax="1848">
      <component glyphName="S" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="397" y="312" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          41 8
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Scaron" xMin="80" yMin="-20" xMax="1138" yMax="1848">
      <component glyphName="S" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="172" y="313" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          43 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Scedilla" xMin="80" yMin="-435" xMax="1138" yMax="1476">
      <component glyphName="S" x="0" y="0" flags="0x204"/>
      <component glyphName="cedilla" x="415" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Scircumflex" xMin="80" yMin="-20" xMax="1138" yMax="1848">
      <component glyphName="S" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="151" y="312" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          41 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Sigma" xMin="69" yMin="0" xMax="1092" yMax="1456">
      <contour>
        <pt x="754" y="718" on="1"/>
        <pt x="309" y="157" on="1"/>
        <pt x="1092" y="157" on="1"/>
        <pt x="1092" y="0" on="1"/>
        <pt x="69" y="0" on="1"/>
        <pt x="69" y="143" on="1"/>
        <pt x="550" y="729" on="1"/>
        <pt x="69" y="1312" on="1"/>
        <pt x="69" y="1456" on="1"/>
        <pt x="1043" y="1456" on="1"/>
        <pt x="1043" y="1298" on="1"/>
        <pt x="311" y="1298" on="1"/>
        <pt x="754" y="742" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          1 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          10 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="T" xMin="49" yMin="0" xMax="1175" yMax="1456">
      <contour>
        <pt x="1175" y="1298" on="1"/>
        <pt x="707" y="1298" on="1"/>
        <pt x="707" y="0" on="1"/>
        <pt x="516" y="0" on="1"/>
        <pt x="516" y="1298" on="1"/>
        <pt x="49" y="1298" on="1"/>
        <pt x="49" y="1456" on="1"/>
        <pt x="1175" y="1456" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Tau" xMin="49" yMin="0" xMax="1175" yMax="1456">
      <component glyphName="T" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="Tbar" xMin="49" yMin="0" xMax="1175" yMax="1456">
      <contour>
        <pt x="938" y="823" on="1"/>
        <pt x="707" y="823" on="1"/>
        <pt x="707" y="0" on="1"/>
        <pt x="516" y="0" on="1"/>
        <pt x="516" y="823" on="1"/>
        <pt x="302" y="823" on="1"/>
        <pt x="302" y="974" on="1"/>
        <pt x="516" y="974" on="1"/>
        <pt x="516" y="1298" on="1"/>
        <pt x="49" y="1298" on="1"/>
        <pt x="49" y="1456" on="1"/>
        <pt x="1175" y="1456" on="1"/>
        <pt x="1175" y="1298" on="1"/>
        <pt x="707" y="1298" on="1"/>
        <pt x="707" y="974" on="1"/>
        <pt x="938" y="974" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          15 10 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          8 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Tcaron" xMin="49" yMin="0" xMax="1175" yMax="1846">
      <component glyphName="T" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="161" y="311" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          13 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Theta" xMin="103" yMin="-20" xMax="1274" yMax="1476">
      <contour>
        <pt x="960" y="659" on="1"/>
        <pt x="443" y="659" on="1"/>
        <pt x="443" y="811" on="1"/>
        <pt x="960" y="811" on="1"/>
      </contour>
      <contour>
        <pt x="1274" y="681" on="1"/>
        <pt x="1274" y="468" on="0"/>
        <pt x="1131" y="150" on="0"/>
        <pt x="867" y="-20" on="0"/>
        <pt x="690" y="-20" on="1"/>
        <pt x="518" y="-20" on="0"/>
        <pt x="252" y="149" on="0"/>
        <pt x="105" y="462" on="0"/>
        <pt x="103" y="668" on="1"/>
        <pt x="103" y="773" on="1"/>
        <pt x="103" y="983" on="0"/>
        <pt x="249" y="1305" on="0"/>
        <pt x="516" y="1476" on="0"/>
        <pt x="688" y="1476" on="1"/>
        <pt x="863" y="1476" on="0"/>
        <pt x="1127" y="1308" on="0"/>
        <pt x="1272" y="993" on="0"/>
        <pt x="1274" y="786" on="1"/>
      </contour>
      <contour>
        <pt x="1083" y="775" on="1"/>
        <pt x="1083" y="1034" on="0"/>
        <pt x="875" y="1311" on="0"/>
        <pt x="688" y="1311" on="1"/>
        <pt x="506" y="1311" on="0"/>
        <pt x="297" y="1034" on="0"/>
        <pt x="294" y="788" on="1"/>
        <pt x="294" y="681" on="1"/>
        <pt x="294" y="431" on="0"/>
        <pt x="503" y="143" on="0"/>
        <pt x="690" y="143" on="1"/>
        <pt x="876" y="143" on="0"/>
        <pt x="1080" y="414" on="0"/>
        <pt x="1083" y="667" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          8 36 37
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          1
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          32
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          17 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          2 8 17
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          207 2 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          255 2 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          47 2 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          191 2 207 2 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 3 values pushed */
          1 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          17
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          25 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          32 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Thorn" xMin="166" yMin="0" xMax="1117" yMax="1456">
      <contour>
        <pt x="352" y="1456" on="1"/>
        <pt x="352" y="1163" on="1"/>
        <pt x="631" y="1163" on="1"/>
        <pt x="778" y="1163" on="0"/>
        <pt x="998" y="1058" on="0"/>
        <pt x="1117" y="864" on="0"/>
        <pt x="1117" y="738" on="1"/>
        <pt x="1117" y="544" on="0"/>
        <pt x="853" y="313" on="0"/>
        <pt x="626" y="313" on="1"/>
        <pt x="352" y="313" on="1"/>
        <pt x="352" y="0" on="1"/>
        <pt x="166" y="0" on="1"/>
        <pt x="166" y="1456" on="1"/>
      </contour>
      <contour>
        <pt x="352" y="1011" on="1"/>
        <pt x="352" y="465" on="1"/>
        <pt x="629" y="465" on="1"/>
        <pt x="771" y="465" on="0"/>
        <pt x="931" y="616" on="0"/>
        <pt x="931" y="736" on="1"/>
        <pt x="931" y="859" on="0"/>
        <pt x="771" y="1010" on="0"/>
        <pt x="635" y="1011" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          9 23 24
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          1 0 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          16 0 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          9 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          14 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="U" xMin="140" yMin="-20" xMax="1194" yMax="1456">
      <contour>
        <pt x="1194" y="1456" on="1"/>
        <pt x="1194" y="466" on="1"/>
        <pt x="1193" y="260" on="0"/>
        <pt x="936" y="-2" on="0"/>
        <pt x="716" y="-18" on="1"/>
        <pt x="665" y="-20" on="1"/>
        <pt x="426" y="-20" on="0"/>
        <pt x="142" y="238" on="0"/>
        <pt x="140" y="464" on="1"/>
        <pt x="140" y="1456" on="1"/>
        <pt x="330" y="1456" on="1"/>
        <pt x="330" y="470" on="1"/>
        <pt x="330" y="312" on="0"/>
        <pt x="504" y="137" on="0"/>
        <pt x="665" y="137" on="1"/>
        <pt x="828" y="137" on="0"/>
        <pt x="1001" y="311" on="0"/>
        <pt x="1001" y="469" on="1"/>
        <pt x="1001" y="1456" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          5 19 20
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          14 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Uacute" xMin="140" yMin="-20" xMax="1194" yMax="1846">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="442" y="310" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          18
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          18 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          21 8
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Ubreve" xMin="140" yMin="-20" xMax="1194" yMax="1806">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="breve" x="239" y="311" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          22
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Ucircumflex" xMin="140" yMin="-20" xMax="1194" yMax="1846">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="196" y="310" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          23 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Udieresis" xMin="140" yMin="-20" xMax="1194" yMax="1787">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="244" y="310" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          25 4
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          35
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Ugrave" xMin="140" yMin="-20" xMax="1194" yMax="1846">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="299" y="310" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          20 8
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Uhorn" xMin="140" yMin="-20" xMax="1565" yMax="1538">
      <contour>
        <pt x="1194" y="1456" on="1"/>
        <pt x="1194" y="1243" on="1"/>
        <pt x="1309" y="1254" on="0"/>
        <pt x="1406" y="1391" on="0"/>
        <pt x="1406" y="1538" on="1"/>
        <pt x="1565" y="1538" on="1"/>
        <pt x="1565" y="1328" on="0"/>
        <pt x="1388" y="1119" on="0"/>
        <pt x="1194" y="1107" on="1"/>
        <pt x="1194" y="465" on="1"/>
        <pt x="1193" y="266" on="0"/>
        <pt x="949" y="6" on="0"/>
        <pt x="738" y="-16" on="1"/>
        <pt x="665" y="-20" on="1"/>
        <pt x="426" y="-20" on="0"/>
        <pt x="142" y="238" on="0"/>
        <pt x="140" y="464" on="1"/>
        <pt x="140" y="1456" on="1"/>
        <pt x="330" y="1456" on="1"/>
        <pt x="330" y="470" on="1"/>
        <pt x="330" y="312" on="0"/>
        <pt x="504" y="137" on="0"/>
        <pt x="665" y="137" on="1"/>
        <pt x="828" y="137" on="0"/>
        <pt x="1001" y="311" on="0"/>
        <pt x="1001" y="469" on="1"/>
        <pt x="1001" y="1456" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          12 27 28
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          18
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          18 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          26
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          26 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          1 13 26
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          22 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Uhungarumlaut" xMin="140" yMin="-20" xMax="1194" yMax="1845">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="hungarumlaut" x="324" y="310" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          18
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          18 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          21 8
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          25
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Umacron" xMin="140" yMin="-20" xMax="1194" yMax="1763">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="macron" x="194" y="318" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          18
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          18 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          19
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Uogonek" xMin="140" yMin="-389" xMax="1194" yMax="1456">
      <contour>
        <pt x="1194" y="1456" on="1"/>
        <pt x="1194" y="465" on="1"/>
        <pt x="1193" y="317" on="0"/>
        <pt x="1055" y="91" on="0"/>
        <pt x="924" y="32" on="1"/>
        <pt x="769" y="-82" on="0"/>
        <pt x="769" y="-178" on="1"/>
        <pt x="769" y="-250" on="0"/>
        <pt x="847" y="-250" on="1"/>
        <pt x="895" y="-250" on="0"/>
        <pt x="947" y="-224" on="1"/>
        <pt x="960" y="-345" on="1"/>
        <pt x="890" y="-389" on="0"/>
        <pt x="800" y="-389" on="1"/>
        <pt x="711" y="-389" on="0"/>
        <pt x="608" y="-285" on="0"/>
        <pt x="608" y="-199" on="1"/>
        <pt x="608" y="-102" on="0"/>
        <pt x="687" y="-19" on="1"/>
        <pt x="665" y="-20" on="1"/>
        <pt x="426" y="-20" on="0"/>
        <pt x="142" y="238" on="0"/>
        <pt x="140" y="464" on="1"/>
        <pt x="140" y="1456" on="1"/>
        <pt x="330" y="1456" on="1"/>
        <pt x="330" y="470" on="1"/>
        <pt x="330" y="312" on="0"/>
        <pt x="504" y="137" on="0"/>
        <pt x="665" y="137" on="1"/>
        <pt x="828" y="137" on="0"/>
        <pt x="1001" y="311" on="0"/>
        <pt x="1001" y="469" on="1"/>
        <pt x="1001" y="1456" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          24
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          24 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          19 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          24
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          32
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          4 19 32
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          8 3 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          28 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Upsilon" xMin="15" yMin="0" xMax="1211" yMax="1456">
      <component glyphName="Y" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="Upsilon1" xMin="-38" yMin="0" xMax="1134" yMax="1468">
      <contour>
        <pt x="548" y="774" on="1"/>
        <pt x="773" y="1281" on="1"/>
        <pt x="816" y="1380" on="0"/>
        <pt x="923" y="1468" on="0"/>
        <pt x="1010" y="1468" on="1"/>
        <pt x="1082" y="1468" on="0"/>
        <pt x="1134" y="1441" on="1"/>
        <pt x="1098" y="1290" on="1"/>
        <pt x="1085" y="1298" on="0"/>
        <pt x="1046" y="1298" on="1"/>
        <pt x="976" y="1298" on="0"/>
        <pt x="940" y="1219" on="1"/>
        <pt x="643" y="570" on="1"/>
        <pt x="643" y="0" on="1"/>
        <pt x="452" y="0" on="1"/>
        <pt x="452" y="572" on="1"/>
        <pt x="156" y="1219" on="1"/>
        <pt x="117" y="1298" on="0"/>
        <pt x="50" y="1298" on="1"/>
        <pt x="11" y="1298" on="0"/>
        <pt x="-2" y="1290" on="1"/>
        <pt x="-38" y="1440" on="1"/>
        <pt x="14" y="1468" on="0"/>
        <pt x="85" y="1468" on="1"/>
        <pt x="173" y="1468" on="0"/>
        <pt x="280" y="1384" on="0"/>
        <pt x="322" y="1291" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          0 27 28
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          23 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 4 13
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          9 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          18
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Upsilondieresis" xMin="15" yMin="0" xMax="1211" yMax="1787">
      <component glyphName="Y" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="194" y="310" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          16 4
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          25
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Upsilontonos" xMin="-236" yMin="0" xMax="1311" yMax="1599">
      <component glyphName="Y" x="100" y="0" flags="0x4"/>
      <component glyphName="tonos" x="-419" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Uring" xMin="140" yMin="-20" xMax="1194" yMax="1937">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="ring" x="331" y="321" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          22 6
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          32
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Utilde" xMin="140" yMin="-20" xMax="1194" yMax="1826">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="tilde" x="192" y="314" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          18
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          18 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          22 4
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="V" xMin="28" yMin="0" xMax="1277" yMax="1456">
      <contour>
        <pt x="651" y="255" on="1"/>
        <pt x="1067" y="1456" on="1"/>
        <pt x="1277" y="1456" on="1"/>
        <pt x="737" y="0" on="1"/>
        <pt x="567" y="0" on="1"/>
        <pt x="28" y="1456" on="1"/>
        <pt x="237" y="1456" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          0 7 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 1 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="W" xMin="61" yMin="0" xMax="1773" yMax="1456">
      <contour>
        <pt x="483" y="459" on="1"/>
        <pt x="511" y="267" on="1"/>
        <pt x="552" y="440" on="1"/>
        <pt x="840" y="1456" on="1"/>
        <pt x="1002" y="1456" on="1"/>
        <pt x="1283" y="440" on="1"/>
        <pt x="1323" y="264" on="1"/>
        <pt x="1354" y="460" on="1"/>
        <pt x="1580" y="1456" on="1"/>
        <pt x="1773" y="1456" on="1"/>
        <pt x="1420" y="0" on="1"/>
        <pt x="1245" y="0" on="1"/>
        <pt x="945" y="1061" on="1"/>
        <pt x="922" y="1172" on="1"/>
        <pt x="899" y="1061" on="1"/>
        <pt x="588" y="0" on="1"/>
        <pt x="413" y="0" on="1"/>
        <pt x="61" y="1456" on="1"/>
        <pt x="253" y="1456" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          17 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          15 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          1 3 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          6 3 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          13 3 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Wacute" xMin="61" yMin="0" xMax="1773" yMax="1846">
      <component glyphName="W" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="699" y="310" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          21 8
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Wcircumflex" xMin="61" yMin="0" xMax="1773" yMax="1846">
      <component glyphName="W" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="453" y="310" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          23 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Wdieresis" xMin="61" yMin="0" xMax="1773" yMax="1787">
      <component glyphName="W" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="501" y="310" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          26 4
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          35
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Wgrave" xMin="61" yMin="0" xMax="1773" yMax="1846">
      <component glyphName="W" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="556" y="310" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          20 8
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="X" xMin="57" yMin="0" xMax="1230" yMax="1456">
      <contour>
        <pt x="644" y="898" on="1"/>
        <pt x="993" y="1456" on="1"/>
        <pt x="1219" y="1456" on="1"/>
        <pt x="759" y="734" on="1"/>
        <pt x="1230" y="0" on="1"/>
        <pt x="1002" y="0" on="1"/>
        <pt x="644" y="568" on="1"/>
        <pt x="284" y="0" on="1"/>
        <pt x="57" y="0" on="1"/>
        <pt x="529" y="734" on="1"/>
        <pt x="68" y="1456" on="1"/>
        <pt x="293" y="1456" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 1 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 9 values pushed */
          134 0 150 0 166 0 182 0 4
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          6 1 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 9 values pushed */
          137 6 153 6 169 6 185 6 4
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          3 0 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          9 6 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Xi" xMin="120" yMin="0" xMax="1057" yMax="1456">
      <contour>
        <pt x="120" y="157" on="1"/>
        <pt x="1057" y="157" on="1"/>
        <pt x="1057" y="0" on="1"/>
        <pt x="120" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="207" y="831" on="1"/>
        <pt x="961" y="831" on="1"/>
        <pt x="961" y="674" on="1"/>
        <pt x="207" y="674" on="1"/>
      </contour>
      <contour>
        <pt x="124" y="1456" on="1"/>
        <pt x="1040" y="1456" on="1"/>
        <pt x="1040" y="1298" on="1"/>
        <pt x="124" y="1298" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          47 5 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          6 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          10 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Y" xMin="15" yMin="0" xMax="1211" yMax="1456">
      <contour>
        <pt x="613" y="725" on="1"/>
        <pt x="993" y="1456" on="1"/>
        <pt x="1211" y="1456" on="1"/>
        <pt x="709" y="543" on="1"/>
        <pt x="709" y="0" on="1"/>
        <pt x="517" y="0" on="1"/>
        <pt x="517" y="543" on="1"/>
        <pt x="15" y="1456" on="1"/>
        <pt x="235" y="1456" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 1 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Yacute" xMin="15" yMin="0" xMax="1211" yMax="1846">
      <component glyphName="Y" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="392" y="310" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          11 8
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Ycircumflex" xMin="15" yMin="0" xMax="1211" yMax="1846">
      <component glyphName="Y" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="146" y="310" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          11 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Ydieresis" xMin="15" yMin="0" xMax="1211" yMax="1787">
      <component glyphName="Y" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="194" y="310" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          16 4
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          25
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Ygrave" xMin="15" yMin="0" xMax="1211" yMax="1846">
      <component glyphName="Y" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="249" y="310" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          10 8
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Z" xMin="86" yMin="0" xMax="1146" yMax="1456">
      <contour>
        <pt x="313" y="157" on="1"/>
        <pt x="1146" y="157" on="1"/>
        <pt x="1146" y="0" on="1"/>
        <pt x="86" y="0" on="1"/>
        <pt x="86" y="144" on="1"/>
        <pt x="884" y="1298" on="1"/>
        <pt x="99" y="1298" on="1"/>
        <pt x="99" y="1456" on="1"/>
        <pt x="1114" y="1456" on="1"/>
        <pt x="1114" y="1315" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          4 0 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          5 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          9 5 7
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Zacute" xMin="86" yMin="0" xMax="1146" yMax="1846">
      <component glyphName="Z" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="391" y="310" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          12 8
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Zcaron" xMin="86" yMin="0" xMax="1146" yMax="1846">
      <component glyphName="Z" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="166" y="311" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          15 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Zdotaccent" xMin="86" yMin="0" xMax="1146" yMax="1784">
      <component glyphName="Z" x="0" y="0" flags="0x204"/>
      <component glyphName="dotaccent" x="366" y="310" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          17 4
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Zeta" xMin="86" yMin="0" xMax="1146" yMax="1456">
      <component glyphName="Z" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="a" xMin="109" yMin="-20" xMax="1002" yMax="1102">
      <contour>
        <pt x="808" y="0" on="1"/>
        <pt x="792" y="32" on="0"/>
        <pt x="782" y="114" on="1"/>
        <pt x="653" y="-20" on="0"/>
        <pt x="474" y="-20" on="1"/>
        <pt x="314" y="-20" on="0"/>
        <pt x="109" y="161" on="0"/>
        <pt x="109" y="300" on="1"/>
        <pt x="109" y="469" on="0"/>
        <pt x="366" y="656" on="0"/>
        <pt x="599" y="656" on="1"/>
        <pt x="779" y="656" on="1"/>
        <pt x="779" y="741" on="1"/>
        <pt x="779" y="838" on="0"/>
        <pt x="663" y="953" on="0"/>
        <pt x="550" y="953" on="1"/>
        <pt x="451" y="953" on="0"/>
        <pt x="317" y="853" on="0"/>
        <pt x="317" y="782" on="1"/>
        <pt x="131" y="782" on="1"/>
        <pt x="131" y="863" on="0"/>
        <pt x="246" y="1014" on="0"/>
        <pt x="443" y="1102" on="0"/>
        <pt x="561" y="1102" on="1"/>
        <pt x="748" y="1102" on="0"/>
        <pt x="960" y="915" on="0"/>
        <pt x="964" y="751" on="1"/>
        <pt x="964" y="253" on="1"/>
        <pt x="964" y="104" on="0"/>
        <pt x="1002" y="16" on="1"/>
        <pt x="1002" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="501" y="141" on="1"/>
        <pt x="588" y="141" on="0"/>
        <pt x="744" y="231" on="0"/>
        <pt x="779" y="303" on="1"/>
        <pt x="779" y="525" on="1"/>
        <pt x="634" y="525" on="1"/>
        <pt x="294" y="525" on="0"/>
        <pt x="294" y="326" on="1"/>
        <pt x="294" y="239" on="0"/>
        <pt x="410" y="141" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          23 41 42
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          32
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          23 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          2 23 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          11 23 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          15 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          18 11 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          31 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          35 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="aacute" xMin="109" yMin="-20" xMax="1002" yMax="1536">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="356" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          23 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          43 9
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="abreve" xMin="109" yMin="-20" xMax="1002" yMax="1496">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="breve" x="153" y="1" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          23 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          43
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="acircumflex" xMin="109" yMin="-20" xMax="1002" yMax="1536">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="110" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          23 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          43 1
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="acute" xMin="123" yMin="1242" xMax="540" yMax="1536">
      <contour>
        <pt x="316" y="1536" on="1"/>
        <pt x="540" y="1536" on="1"/>
        <pt x="272" y="1242" on="1"/>
        <pt x="123" y="1242" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          15 2 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 5 values pushed */
          15 0 31 0 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="acutecomb" xMin="-657" yMin="1242" xMax="-240" yMax="1536">
      <contour>
        <pt x="-464" y="1536" on="1"/>
        <pt x="-240" y="1536" on="1"/>
        <pt x="-508" y="1242" on="1"/>
        <pt x="-657" y="1242" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          1
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 5 values pushed */
          15 1 31 1 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="adieresis" xMin="109" yMin="-20" xMax="1002" yMax="1477">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="158" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          23 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          48 1
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          57
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ae" xMin="78" yMin="-20" xMax="1660" yMax="1102">
      <contour>
        <pt x="1262" y="-20" on="1"/>
        <pt x="1001" y="-20" on="0"/>
        <pt x="865" y="160" on="1"/>
        <pt x="800" y="74" on="0"/>
        <pt x="574" y="-20" on="0"/>
        <pt x="433" y="-20" on="1"/>
        <pt x="266" y="-20" on="0"/>
        <pt x="78" y="153" on="0"/>
        <pt x="78" y="304" on="1"/>
        <pt x="78" y="461" on="0"/>
        <pt x="305" y="635" on="0"/>
        <pt x="526" y="635" on="1"/>
        <pt x="749" y="635" on="1"/>
        <pt x="749" y="720" on="1"/>
        <pt x="749" y="827" on="0"/>
        <pt x="639" y="950" on="0"/>
        <pt x="535" y="950" on="1"/>
        <pt x="430" y="950" on="0"/>
        <pt x="290" y="840" on="0"/>
        <pt x="290" y="759" on="1"/>
        <pt x="106" y="778" on="1"/>
        <pt x="106" y="921" on="0"/>
        <pt x="348" y="1102" on="0"/>
        <pt x="535" y="1102" on="1"/>
        <pt x="650" y="1102" on="0"/>
        <pt x="826" y="1019" on="0"/>
        <pt x="876" y="936" on="1"/>
        <pt x="939" y="1015" on="0"/>
        <pt x="1113" y="1102" on="0"/>
        <pt x="1218" y="1102" on="1"/>
        <pt x="1428" y="1102" on="0"/>
        <pt x="1660" y="845" on="0"/>
        <pt x="1660" y="612" on="1"/>
        <pt x="1660" y="497" on="1"/>
        <pt x="932" y="497" on="1"/>
        <pt x="939" y="321" on="0"/>
        <pt x="1113" y="130" on="0"/>
        <pt x="1262" y="130" on="1"/>
        <pt x="1410" y="130" on="0"/>
        <pt x="1531" y="206" on="1"/>
        <pt x="1578" y="237" on="1"/>
        <pt x="1642" y="101" on="1"/>
        <pt x="1484" y="-20" on="0"/>
      </contour>
      <contour>
        <pt x="469" y="130" on="1"/>
        <pt x="541" y="130" on="0"/>
        <pt x="699" y="204" on="0"/>
        <pt x="749" y="258" on="1"/>
        <pt x="749" y="495" on="1"/>
        <pt x="521" y="495" on="1"/>
        <pt x="404" y="493" on="0"/>
        <pt x="264" y="383" on="0"/>
        <pt x="264" y="300" on="1"/>
        <pt x="264" y="223" on="0"/>
        <pt x="370" y="130" on="0"/>
      </contour>
      <contour>
        <pt x="1218" y="950" on="1"/>
        <pt x="1103" y="950" on="0"/>
        <pt x="954" y="779" on="0"/>
        <pt x="937" y="640" on="1"/>
        <pt x="1475" y="640" on="1"/>
        <pt x="1475" y="671" on="1"/>
        <pt x="1475" y="803" on="0"/>
        <pt x="1341" y="950" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          2 62 63
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          46
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          57
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          23 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          29
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          29 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          2 29 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          12 5 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 5 values pushed */
          191 12 207 12 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          16 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          19 12 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          26 29 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          58 29 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          58
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 5 values pushed */
          191 58 207 58 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          33 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          37 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          40 29 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          43
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          47 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          54
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="aeacute" xMin="78" yMin="-20" xMax="1660" yMax="1537">
      <component glyphName="ae" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="634" y="1" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          29
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          29 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          64 9
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="agrave" xMin="109" yMin="-20" xMax="1002" yMax="1536">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="213" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          23 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          42 9
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="alpha" xMin="100" yMin="-21" xMax="1143" yMax="1102">
      <contour>
        <pt x="1006" y="1082" on="1"/>
        <pt x="1006" y="285" on="1"/>
        <pt x="1008" y="145" on="0"/>
        <pt x="1086" y="145" on="1"/>
        <pt x="1105" y="145" on="0"/>
        <pt x="1120" y="150" on="1"/>
        <pt x="1143" y="13" on="1"/>
        <pt x="1095" y="-21" on="0"/>
        <pt x="1021" y="-21" on="1"/>
        <pt x="874" y="-21" on="0"/>
        <pt x="836" y="144" on="1"/>
        <pt x="729" y="-21" on="0"/>
        <pt x="520" y="-21" on="1"/>
        <pt x="328" y="-21" on="0"/>
        <pt x="100" y="262" on="0"/>
        <pt x="100" y="506" on="1"/>
        <pt x="100" y="521" on="1"/>
        <pt x="100" y="785" on="0"/>
        <pt x="326" y="1102" on="0"/>
        <pt x="522" y="1102" on="1"/>
        <pt x="725" y="1102" on="0"/>
        <pt x="832" y="941" on="1"/>
        <pt x="849" y="1082" on="1"/>
      </contour>
      <contour>
        <pt x="285" y="500" on="1"/>
        <pt x="285" y="325" on="0"/>
        <pt x="431" y="130" on="0"/>
        <pt x="566" y="130" on="1"/>
        <pt x="739" y="130" on="0"/>
        <pt x="821" y="316" on="1"/>
        <pt x="821" y="762" on="1"/>
        <pt x="736" y="950" on="0"/>
        <pt x="568" y="950" on="1"/>
        <pt x="434" y="950" on="0"/>
        <pt x="285" y="723" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          31 34 35
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          19 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          22
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          22 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          3 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          10 19 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          21 19 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          26 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          31 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="alphatonos" xMin="100" yMin="-21" xMax="1143" yMax="1594">
      <component glyphName="alpha" x="0" y="0" flags="0x204"/>
      <component glyphName="tonos" x="373" y="-5" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          19 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          36 1
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="amacron" xMin="109" yMin="-20" xMax="1002" yMax="1453">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="macron" x="108" y="8" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          23 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          42
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ampersand" xMin="101" yMin="-20" xMax="1267" yMax="1476">
      <contour>
        <pt x="101" y="391" on="1"/>
        <pt x="101" y="496" on="0"/>
        <pt x="218" y="672" on="0"/>
        <pt x="383" y="789" on="1"/>
        <pt x="286" y="907" on="0"/>
        <pt x="220" y="1051" on="0"/>
        <pt x="220" y="1122" on="1"/>
        <pt x="220" y="1288" on="0"/>
        <pt x="416" y="1476" on="0"/>
        <pt x="584" y="1476" on="1"/>
        <pt x="734" y="1476" on="0"/>
        <pt x="930" y="1301" on="0"/>
        <pt x="930" y="1168" on="1"/>
        <pt x="930" y="1080" on="0"/>
        <pt x="841" y="931" on="0"/>
        <pt x="730" y="849" on="1"/>
        <pt x="623" y="770" on="1"/>
        <pt x="947" y="383" on="1"/>
        <pt x="1015" y="513" on="0"/>
        <pt x="1015" y="672" on="1"/>
        <pt x="1182" y="672" on="1"/>
        <pt x="1182" y="417" on="0"/>
        <pt x="1059" y="249" on="1"/>
        <pt x="1267" y="0" on="1"/>
        <pt x="1045" y="0" on="1"/>
        <pt x="948" y="115" on="1"/>
        <pt x="874" y="49" on="0"/>
        <pt x="675" y="-20" on="0"/>
        <pt x="572" y="-20" on="1"/>
        <pt x="359" y="-20" on="0"/>
        <pt x="101" y="206" on="0"/>
      </contour>
      <contour>
        <pt x="572" y="131" on="1"/>
        <pt x="719" y="131" on="0"/>
        <pt x="841" y="243" on="1"/>
        <pt x="486" y="668" on="1"/>
        <pt x="453" y="644" on="1"/>
        <pt x="286" y="521" on="0"/>
        <pt x="286" y="391" on="1"/>
        <pt x="286" y="273" on="0"/>
        <pt x="439" y="131" on="0"/>
      </contour>
      <contour>
        <pt x="405" y="1128" on="1"/>
        <pt x="405" y="1032" on="0"/>
        <pt x="523" y="888" on="1"/>
        <pt x="641" y="971" on="1"/>
        <pt x="709" y="1019" on="0"/>
        <pt x="759" y="1106" on="0"/>
        <pt x="759" y="1168" on="1"/>
        <pt x="759" y="1235" on="0"/>
        <pt x="659" y="1324" on="0"/>
        <pt x="583" y="1324" on="1"/>
        <pt x="501" y="1324" on="0"/>
        <pt x="405" y="1213" on="0"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          28
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          28 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          24
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          24 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          34 28 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          42 9 28
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          3 34 42
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          16 42 34
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          17 9 28
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          19 28 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          25 28 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          22 17 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          31 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          33 31 17
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          49 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="anoteleia" xMin="147" yMin="619" xMax="377" yMax="841">
      <component glyphName="periodcentered" x="0" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="aogonek" xMin="109" yMin="-433" xMax="1002" yMax="1102">
      <contour>
        <pt x="804" y="7" on="1"/>
        <pt x="789" y="45" on="0"/>
        <pt x="782" y="114" on="1"/>
        <pt x="653" y="-20" on="0"/>
        <pt x="474" y="-20" on="1"/>
        <pt x="314" y="-20" on="0"/>
        <pt x="109" y="161" on="0"/>
        <pt x="109" y="300" on="1"/>
        <pt x="109" y="469" on="0"/>
        <pt x="366" y="656" on="0"/>
        <pt x="599" y="656" on="1"/>
        <pt x="779" y="656" on="1"/>
        <pt x="779" y="741" on="1"/>
        <pt x="779" y="838" on="0"/>
        <pt x="663" y="953" on="0"/>
        <pt x="550" y="953" on="1"/>
        <pt x="451" y="953" on="0"/>
        <pt x="317" y="853" on="0"/>
        <pt x="317" y="782" on="1"/>
        <pt x="131" y="782" on="1"/>
        <pt x="131" y="863" on="0"/>
        <pt x="246" y="1014" on="0"/>
        <pt x="443" y="1102" on="0"/>
        <pt x="561" y="1102" on="1"/>
        <pt x="748" y="1102" on="0"/>
        <pt x="960" y="915" on="0"/>
        <pt x="964" y="751" on="1"/>
        <pt x="964" y="253" on="1"/>
        <pt x="964" y="104" on="0"/>
        <pt x="1002" y="16" on="1"/>
        <pt x="1002" y="0" on="1"/>
        <pt x="969" y="0" on="1"/>
        <pt x="911" y="-45" on="1"/>
        <pt x="798" y="-136" on="0"/>
        <pt x="798" y="-222" on="1"/>
        <pt x="798" y="-294" on="0"/>
        <pt x="876" y="-294" on="1"/>
        <pt x="924" y="-294" on="0"/>
        <pt x="976" y="-268" on="1"/>
        <pt x="989" y="-389" on="1"/>
        <pt x="919" y="-433" on="0"/>
        <pt x="829" y="-433" on="1"/>
        <pt x="740" y="-433" on="0"/>
        <pt x="637" y="-329" on="0"/>
        <pt x="637" y="-243" on="1"/>
        <pt x="637" y="-99" on="0"/>
      </contour>
      <contour>
        <pt x="501" y="141" on="1"/>
        <pt x="588" y="141" on="0"/>
        <pt x="744" y="231" on="0"/>
        <pt x="779" y="303" on="1"/>
        <pt x="779" y="525" on="1"/>
        <pt x="634" y="525" on="1"/>
        <pt x="294" y="525" on="0"/>
        <pt x="294" y="326" on="1"/>
        <pt x="294" y="239" on="0"/>
        <pt x="410" y="141" on="0"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          23 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          30
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          30 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          41
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          41 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          30
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          2 4 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          11 23 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          15 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          18 11 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          41
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          36 3 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          46 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          51 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="approxequal" xMin="101" yMin="280" xMax="1035" yMax="1012">
      <contour>
        <pt x="102" y="901" on="1"/>
        <pt x="150" y="952" on="0"/>
        <pt x="281" y="1010" on="0"/>
        <pt x="347" y="1010" on="1"/>
        <pt x="429" y="1012" on="0"/>
        <pt x="503" y="977" on="1"/>
        <pt x="655" y="899" on="1"/>
        <pt x="721" y="868" on="0"/>
        <pt x="799" y="868" on="1"/>
        <pt x="933" y="868" on="0"/>
        <pt x="1035" y="996" on="1"/>
        <pt x="1035" y="806" on="1"/>
        <pt x="932" y="697" on="0"/>
        <pt x="799" y="697" on="1"/>
        <pt x="721" y="697" on="0"/>
        <pt x="655" y="728" on="1"/>
        <pt x="494" y="811" on="1"/>
        <pt x="426" y="842" on="0"/>
        <pt x="347" y="840" on="1"/>
        <pt x="281" y="840" on="0"/>
        <pt x="150" y="772" on="0"/>
        <pt x="102" y="712" on="1"/>
      </contour>
      <contour>
        <pt x="101" y="483" on="1"/>
        <pt x="149" y="534" on="0"/>
        <pt x="279" y="593" on="0"/>
        <pt x="345" y="593" on="1"/>
        <pt x="427" y="595" on="0"/>
        <pt x="501" y="560" on="1"/>
        <pt x="650" y="483" on="1"/>
        <pt x="718" y="450" on="0"/>
        <pt x="798" y="450" on="1"/>
        <pt x="931" y="450" on="0"/>
        <pt x="1033" y="578" on="1"/>
        <pt x="1034" y="389" on="1"/>
        <pt x="931" y="280" on="0"/>
        <pt x="798" y="280" on="1"/>
        <pt x="720" y="280" on="0"/>
        <pt x="654" y="311" on="1"/>
        <pt x="502" y="389" on="1"/>
        <pt x="428" y="424" on="0"/>
        <pt x="346" y="422" on="1"/>
        <pt x="280" y="422" on="0"/>
        <pt x="149" y="354" on="0"/>
        <pt x="101" y="294" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          28 44 45
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          15 3 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          0 13 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          8 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          10
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          18 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          25
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          25
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          35
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          35
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          0 35 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          30 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          32
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          32
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          40 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          43
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          43
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="aring" xMin="109" yMin="-20" xMax="1002" yMax="1627">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="ring" x="245" y="11" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          23 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          44 4
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          54
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="aringacute" xMin="109" yMin="-20" xMax="1002" yMax="1631">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="glyph00551" x="255" y="-19" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="asciicircum" xMin="64" yMin="729" xMax="788" yMax="1456">
      <contour>
        <pt x="426" y="1211" on="1"/>
        <pt x="236" y="729" on="1"/>
        <pt x="64" y="729" on="1"/>
        <pt x="363" y="1456" on="1"/>
        <pt x="490" y="1456" on="1"/>
        <pt x="788" y="729" on="1"/>
        <pt x="617" y="729" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          0 7 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          1 7 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="asciitilde" xMin="131" yMin="402" xMax="1263" yMax="802">
      <contour>
        <pt x="1263" y="777" on="1"/>
        <pt x="1263" y="619" on="0"/>
        <pt x="1076" y="402" on="0"/>
        <pt x="939" y="402" on="1"/>
        <pt x="867" y="402" on="0"/>
        <pt x="739" y="455" on="0"/>
        <pt x="570" y="603" on="0"/>
        <pt x="496" y="639" on="0"/>
        <pt x="454" y="639" on="1"/>
        <pt x="376" y="639" on="0"/>
        <pt x="292" y="532" on="0"/>
        <pt x="292" y="438" on="1"/>
        <pt x="131" y="436" on="1"/>
        <pt x="131" y="596" on="0"/>
        <pt x="315" y="802" on="0"/>
        <pt x="454" y="802" on="1"/>
        <pt x="530" y="802" on="0"/>
        <pt x="670" y="738" on="0"/>
        <pt x="846" y="577" on="0"/>
        <pt x="910" y="567" on="1"/>
        <pt x="939" y="565" on="1"/>
        <pt x="1015" y="565" on="0"/>
        <pt x="1110" y="681" on="0"/>
        <pt x="1110" y="776" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          17 24 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          15 24
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          20
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          3 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          8 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="asterisk" xMin="28" yMin="609" xMax="853" yMax="1456">
      <contour>
        <pt x="330" y="983" on="1"/>
        <pt x="28" y="1073" on="1"/>
        <pt x="74" y="1224" on="1"/>
        <pt x="376" y="1112" on="1"/>
        <pt x="367" y="1456" on="1"/>
        <pt x="520" y="1456" on="1"/>
        <pt x="510" y="1107" on="1"/>
        <pt x="807" y="1217" on="1"/>
        <pt x="853" y="1065" on="1"/>
        <pt x="546" y="974" on="1"/>
        <pt x="744" y="703" on="1"/>
        <pt x="620" y="609" on="1"/>
        <pt x="434" y="897" on="1"/>
        <pt x="254" y="616" on="1"/>
        <pt x="129" y="707" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSH[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="at" xMin="106" yMin="-453" xMax="1750" yMax="1431">
      <contour>
        <pt x="1738" y="502" on="1"/>
        <pt x="1726" y="260" on="0"/>
        <pt x="1510" y="-20" on="0"/>
        <pt x="1329" y="-20" on="1"/>
        <pt x="1142" y="-20" on="0"/>
        <pt x="1089" y="148" on="1"/>
        <pt x="1035" y="63" on="0"/>
        <pt x="896" y="-20" on="0"/>
        <pt x="822" y="-20" on="1"/>
        <pt x="680" y="-20" on="0"/>
        <pt x="534" y="212" on="0"/>
        <pt x="553" y="417" on="1"/>
        <pt x="568" y="582" on="0"/>
        <pt x="689" y="841" on="0"/>
        <pt x="880" y="989" on="0"/>
        <pt x="985" y="989" on="1"/>
        <pt x="1066" y="989" on="0"/>
        <pt x="1194" y="946" on="0"/>
        <pt x="1274" y="883" on="1"/>
        <pt x="1222" y="329" on="1"/>
        <pt x="1203" y="98" on="0"/>
        <pt x="1350" y="98" on="1"/>
        <pt x="1463" y="98" on="0"/>
        <pt x="1603" y="322" on="0"/>
        <pt x="1609" y="502" on="1"/>
        <pt x="1628" y="891" on="0"/>
        <pt x="1301" y="1299" on="0"/>
        <pt x="967" y="1299" on="1"/>
        <pt x="766" y="1299" on="0"/>
        <pt x="454" y="1100" on="0"/>
        <pt x="274" y="724" on="0"/>
        <pt x="263" y="478" on="1"/>
        <pt x="251" y="230" on="0"/>
        <pt x="395" y="-135" on="0"/>
        <pt x="690" y="-328" on="0"/>
        <pt x="899" y="-328" on="1"/>
        <pt x="989" y="-328" on="0"/>
        <pt x="1170" y="-284" on="0"/>
        <pt x="1230" y="-249" on="1"/>
        <pt x="1267" y="-364" on="1"/>
        <pt x="1205" y="-403" on="0"/>
        <pt x="1000" y="-453" on="0"/>
        <pt x="895" y="-453" on="1"/>
        <pt x="645" y="-453" on="0"/>
        <pt x="285" y="-228" on="0"/>
        <pt x="106" y="195" on="0"/>
        <pt x="118" y="478" on="1"/>
        <pt x="130" y="753" on="0"/>
        <pt x="352" y="1192" on="0"/>
        <pt x="732" y="1431" on="0"/>
        <pt x="971" y="1431" on="1"/>
        <pt x="1220" y="1431" on="0"/>
        <pt x="1576" y="1207" on="0"/>
        <pt x="1750" y="785" on="0"/>
      </contour>
      <contour>
        <pt x="712" y="417" on="1"/>
        <pt x="698" y="275" on="0"/>
        <pt x="779" y="123" on="0"/>
        <pt x="867" y="123" on="1"/>
        <pt x="927" y="123" on="0"/>
        <pt x="1038" y="225" on="0"/>
        <pt x="1074" y="320" on="1"/>
        <pt x="1075" y="329" on="1"/>
        <pt x="1121" y="832" on="1"/>
        <pt x="1065" y="861" on="0"/>
        <pt x="1001" y="861" on="1"/>
        <pt x="884" y="861" on="0"/>
        <pt x="731" y="623" on="0"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          50
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          15 50 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          5 8 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          57 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          50
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          27 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          42
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          42
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          35 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          64 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="atilde" xMin="109" yMin="-20" xMax="1002" yMax="1516">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="tilde" x="106" y="4" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          23 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          44 1
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="b" xMin="140" yMin="-20" xMax="1056" yMax="1536">
      <contour>
        <pt x="1056" y="529" on="1"/>
        <pt x="1056" y="281" on="0"/>
        <pt x="828" y="-20" on="0"/>
        <pt x="636" y="-20" on="1"/>
        <pt x="431" y="-20" on="0"/>
        <pt x="319" y="125" on="1"/>
        <pt x="310" y="0" on="1"/>
        <pt x="140" y="0" on="1"/>
        <pt x="140" y="1536" on="1"/>
        <pt x="325" y="1536" on="1"/>
        <pt x="325" y="963" on="1"/>
        <pt x="437" y="1102" on="0"/>
        <pt x="831" y="1102" on="0"/>
        <pt x="1056" y="804" on="0"/>
        <pt x="1056" y="545" on="1"/>
      </contour>
      <contour>
        <pt x="871" y="550" on="1"/>
        <pt x="871" y="739" on="0"/>
        <pt x="725" y="945" on="0"/>
        <pt x="588" y="945" on="1"/>
        <pt x="405" y="945" on="0"/>
        <pt x="325" y="775" on="1"/>
        <pt x="325" y="307" on="1"/>
        <pt x="410" y="137" on="0"/>
        <pt x="590" y="137" on="1"/>
        <pt x="723" y="137" on="0"/>
        <pt x="871" y="343" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          18 26 27
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          5 8 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          10 12 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          18 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          23 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="backslash" xMin="40" yMin="-125" xMax="824" yMax="1456">
      <contour>
        <pt x="40" y="1456" on="1"/>
        <pt x="216" y="1456" on="1"/>
        <pt x="824" y="-125" on="1"/>
        <pt x="648" y="-125" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="bar" xMin="175" yMin="-270" xMax="324" yMax="1456">
      <contour>
        <pt x="324" y="-270" on="1"/>
        <pt x="175" y="-270" on="1"/>
        <pt x="175" y="1456" on="1"/>
        <pt x="324" y="1456" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="beta" xMin="160" yMin="-384" xMax="1101" yMax="1476">
      <contour>
        <pt x="605" y="1476" on="1"/>
        <pt x="798" y="1476" on="0"/>
        <pt x="1033" y="1257" on="0"/>
        <pt x="1033" y="1083" on="1"/>
        <pt x="1033" y="992" on="0"/>
        <pt x="935" y="840" on="0"/>
        <pt x="847" y="794" on="1"/>
        <pt x="970" y="749" on="0"/>
        <pt x="1101" y="554" on="0"/>
        <pt x="1101" y="424" on="1"/>
        <pt x="1101" y="219" on="0"/>
        <pt x="852" y="-20" on="0"/>
        <pt x="647" y="-20" on="1"/>
        <pt x="466" y="-20" on="0"/>
        <pt x="346" y="75" on="1"/>
        <pt x="346" y="-384" on="1"/>
        <pt x="160" y="-384" on="1"/>
        <pt x="160" y="1073" on="1"/>
        <pt x="160" y="1181" on="0"/>
        <pt x="282" y="1369" on="0"/>
        <pt x="489" y="1476" on="0"/>
      </contour>
      <contour>
        <pt x="848" y="1087" on="1"/>
        <pt x="848" y="1189" on="0"/>
        <pt x="712" y="1324" on="0"/>
        <pt x="605" y="1324" on="1"/>
        <pt x="497" y="1324" on="0"/>
        <pt x="347" y="1182" on="0"/>
        <pt x="346" y="1075" on="1"/>
        <pt x="346" y="246" on="1"/>
        <pt x="390" y="194" on="0"/>
        <pt x="534" y="131" on="0"/>
        <pt x="628" y="131" on="1"/>
        <pt x="762" y="131" on="0"/>
        <pt x="916" y="291" on="0"/>
        <pt x="916" y="420" on="1"/>
        <pt x="916" y="538" on="0"/>
        <pt x="776" y="703" on="0"/>
        <pt x="667" y="706" on="1"/>
        <pt x="517" y="706" on="1"/>
        <pt x="517" y="858" on="1"/>
        <pt x="602" y="858" on="1"/>
        <pt x="722" y="858" on="0"/>
        <pt x="848" y="977" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          0 43 44
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          40 0 12
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          40
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          37 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          6 37 40
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          14 12 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          24 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          31 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="braceleft" xMin="64" yMin="-366" xMax="670" yMax="1597">
      <contour>
        <pt x="632" y="-366" on="1"/>
        <pt x="455" y="-316" on="0"/>
        <pt x="276" y="-87" on="0"/>
        <pt x="276" y="101" on="1"/>
        <pt x="276" y="300" on="1"/>
        <pt x="276" y="543" on="0"/>
        <pt x="64" y="543" on="1"/>
        <pt x="64" y="688" on="1"/>
        <pt x="276" y="688" on="0"/>
        <pt x="276" y="930" on="1"/>
        <pt x="276" y="1138" on="1"/>
        <pt x="278" y="1321" on="0"/>
        <pt x="453" y="1546" on="0"/>
        <pt x="632" y="1597" on="1"/>
        <pt x="670" y="1482" on="1"/>
        <pt x="461" y="1415" on="0"/>
        <pt x="461" y="1133" on="1"/>
        <pt x="461" y="931" on="1"/>
        <pt x="461" y="704" on="0"/>
        <pt x="294" y="615" on="1"/>
        <pt x="461" y="525" on="0"/>
        <pt x="461" y="296" on="1"/>
        <pt x="461" y="90" on="1"/>
        <pt x="464" y="-185" on="0"/>
        <pt x="670" y="-251" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          19 25 26
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          7 13 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          31 7 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          6 3 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          19 6 7
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="braceright" xMin="19" yMin="-366" xMax="626" yMax="1597">
      <contour>
        <pt x="19" y="-251" on="1"/>
        <pt x="222" y="-186" on="0"/>
        <pt x="229" y="80" on="1"/>
        <pt x="229" y="300" on="1"/>
        <pt x="229" y="531" on="0"/>
        <pt x="410" y="615" on="1"/>
        <pt x="229" y="697" on="0"/>
        <pt x="229" y="930" on="1"/>
        <pt x="229" y="1133" on="1"/>
        <pt x="229" y="1415" on="0"/>
        <pt x="20" y="1482" on="1"/>
        <pt x="58" y="1597" on="1"/>
        <pt x="235" y="1547" on="0"/>
        <pt x="413" y="1322" on="0"/>
        <pt x="414" y="1137" on="1"/>
        <pt x="414" y="927" on="1"/>
        <pt x="414" y="688" on="0"/>
        <pt x="626" y="688" on="1"/>
        <pt x="626" y="543" on="1"/>
        <pt x="414" y="543" on="0"/>
        <pt x="414" y="300" on="1"/>
        <pt x="414" y="98" on="1"/>
        <pt x="414" y="-90" on="0"/>
        <pt x="233" y="-316" on="0"/>
        <pt x="58" y="-366" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          5 25 26
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          24
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          17 11 24
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          31 17 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          18 3 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          5 18 17
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="bracketleft" xMin="146" yMin="-312" xMax="523" yMax="1664">
      <contour>
        <pt x="523" y="1512" on="1"/>
        <pt x="332" y="1512" on="1"/>
        <pt x="332" y="-160" on="1"/>
        <pt x="523" y="-160" on="1"/>
        <pt x="523" y="-312" on="1"/>
        <pt x="146" y="-312" on="1"/>
        <pt x="146" y="1664" on="1"/>
        <pt x="523" y="1664" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          3 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="bracketright" xMin="9" yMin="-312" xMax="387" yMax="1664">
      <contour>
        <pt x="9" y="1664" on="1"/>
        <pt x="387" y="1664" on="1"/>
        <pt x="387" y="-312" on="1"/>
        <pt x="9" y="-312" on="1"/>
        <pt x="9" y="-160" on="1"/>
        <pt x="202" y="-160" on="1"/>
        <pt x="202" y="1512" on="1"/>
        <pt x="9" y="1512" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          5 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          6 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="breve" xMin="129" yMin="1227" xMax="728" yMax="1495">
      <contour>
        <pt x="728" y="1495" on="1"/>
        <pt x="728" y="1374" on="0"/>
        <pt x="563" y="1227" on="0"/>
        <pt x="295" y="1227" on="0"/>
        <pt x="129" y="1375" on="0"/>
        <pt x="129" y="1495" on="1"/>
        <pt x="280" y="1495" on="1"/>
        <pt x="280" y="1425" on="0"/>
        <pt x="356" y="1346" on="0"/>
        <pt x="429" y="1346" on="1"/>
        <pt x="499" y="1346" on="0"/>
        <pt x="578" y="1424" on="0"/>
        <pt x="578" y="1495" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          9 13 14
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          15 3 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          9 4 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="brokenbar" xMin="147" yMin="-270" xMax="333" yMax="1456">
      <contour>
        <pt x="147" y="-270" on="1"/>
        <pt x="147" y="521" on="1"/>
        <pt x="333" y="521" on="1"/>
        <pt x="333" y="-270" on="1"/>
      </contour>
      <contour>
        <pt x="333" y="698" on="1"/>
        <pt x="147" y="698" on="1"/>
        <pt x="147" y="1456" on="1"/>
        <pt x="333" y="1456" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          5 1 3
          CALL[ ]	/* CallFunction */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="bullet" xMin="138" yMin="535" xMax="546" yMax="971">
      <contour>
        <pt x="138" y="772" on="1"/>
        <pt x="138" y="859" on="0"/>
        <pt x="249" y="971" on="0"/>
        <pt x="341" y="971" on="1"/>
        <pt x="432" y="971" on="0"/>
        <pt x="546" y="862" on="0"/>
        <pt x="546" y="769" on="1"/>
        <pt x="546" y="732" on="1"/>
        <pt x="546" y="645" on="0"/>
        <pt x="436" y="535" on="0"/>
        <pt x="342" y="535" on="1"/>
        <pt x="249" y="535" on="0"/>
        <pt x="138" y="646" on="0"/>
        <pt x="138" y="734" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          10 14 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 2 values pushed */
          10 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MDRP[11100]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="c" xMin="92" yMin="-20" xMax="1004" yMax="1102">
      <contour>
        <pt x="574" y="131" on="1"/>
        <pt x="673" y="131" on="0"/>
        <pt x="821" y="251" on="0"/>
        <pt x="829" y="341" on="1"/>
        <pt x="1004" y="341" on="1"/>
        <pt x="999" y="248" on="0"/>
        <pt x="881" y="80" on="0"/>
        <pt x="684" y="-20" on="0"/>
        <pt x="574" y="-20" on="1"/>
        <pt x="353" y="-20" on="0"/>
        <pt x="92" y="275" on="0"/>
        <pt x="92" y="531" on="1"/>
        <pt x="92" y="562" on="1"/>
        <pt x="92" y="720" on="0"/>
        <pt x="208" y="966" on="0"/>
        <pt x="425" y="1102" on="0"/>
        <pt x="573" y="1102" on="1"/>
        <pt x="755" y="1102" on="0"/>
        <pt x="996" y="884" on="0"/>
        <pt x="1004" y="710" on="1"/>
        <pt x="829" y="710" on="1"/>
        <pt x="821" y="815" on="0"/>
        <pt x="678" y="950" on="0"/>
        <pt x="573" y="950" on="1"/>
        <pt x="432" y="950" on="0"/>
        <pt x="277" y="747" on="0"/>
        <pt x="277" y="555" on="1"/>
        <pt x="277" y="520" on="1"/>
        <pt x="277" y="333" on="0"/>
        <pt x="431" y="131" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          16 30 31
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          16 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          23 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="cacute" xMin="92" yMin="-20" xMax="1004" yMax="1536">
      <component glyphName="c" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="307" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          16 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          32 9
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="caron" xMin="141" yMin="1251" xMax="759" yMax="1535">
      <contour>
        <pt x="449" y="1365" on="1"/>
        <pt x="599" y="1535" on="1"/>
        <pt x="759" y="1535" on="1"/>
        <pt x="759" y="1525" on="1"/>
        <pt x="505" y="1251" on="1"/>
        <pt x="392" y="1251" on="1"/>
        <pt x="141" y="1525" on="1"/>
        <pt x="141" y="1535" on="1"/>
        <pt x="298" y="1535" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          1
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 5 values pushed */
          15 1 31 1 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          0 4 1
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ccaron" xMin="92" yMin="-20" xMax="1004" yMax="1536">
      <component glyphName="c" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="82" y="1" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          16 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          34 1
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ccedilla" xMin="92" yMin="-444" xMax="1004" yMax="1102">
      <component glyphName="c" x="0" y="0" flags="0x204"/>
      <component glyphName="cedilla" x="319" y="-9" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="ccircumflex" xMin="92" yMin="-20" xMax="1004" yMax="1536">
      <component glyphName="c" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="61" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          16 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          32 1
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="cdotaccent" xMin="92" yMin="-20" xMax="1004" yMax="1474">
      <component glyphName="c" x="0" y="0" flags="0x204"/>
      <component glyphName="dotaccent" x="282" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          16 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          36 1
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="cedilla" xMin="116" yMin="-435" xMax="426" yMax="0">
      <contour>
        <pt x="285" y="0" on="1"/>
        <pt x="273" y="-52" on="1"/>
        <pt x="426" y="-79" on="0"/>
        <pt x="426" y="-225" on="1"/>
        <pt x="426" y="-322" on="0"/>
        <pt x="266" y="-435" on="0"/>
        <pt x="123" y="-435" on="1"/>
        <pt x="116" y="-328" on="1"/>
        <pt x="195" y="-328" on="0"/>
        <pt x="282" y="-276" on="0"/>
        <pt x="282" y="-229" on="1"/>
        <pt x="282" y="-185" on="0"/>
        <pt x="218" y="-143" on="0"/>
        <pt x="120" y="-134" on="1"/>
        <pt x="152" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          5 15 16
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 5 values pushed */
          19 6 35 6 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          1 6 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 2 values pushed */
          7 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MDRP[11100]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="cent" xMin="105" yMin="-245" xMax="1017" yMax="1318">
      <contour>
        <pt x="586" y="131" on="1"/>
        <pt x="686" y="131" on="0"/>
        <pt x="834" y="252" on="0"/>
        <pt x="842" y="341" on="1"/>
        <pt x="1017" y="341" on="1"/>
        <pt x="1011" y="215" on="0"/>
        <pt x="813" y="14" on="0"/>
        <pt x="669" y="-12" on="1"/>
        <pt x="669" y="-245" on="1"/>
        <pt x="484" y="-245" on="1"/>
        <pt x="484" y="-11" on="1"/>
        <pt x="305" y="23" on="0"/>
        <pt x="105" y="307" on="0"/>
        <pt x="105" y="527" on="1"/>
        <pt x="105" y="562" on="1"/>
        <pt x="105" y="774" on="0"/>
        <pt x="307" y="1059" on="0"/>
        <pt x="484" y="1092" on="1"/>
        <pt x="484" y="1318" on="1"/>
        <pt x="669" y="1318" on="1"/>
        <pt x="669" y="1095" on="1"/>
        <pt x="819" y="1072" on="0"/>
        <pt x="1011" y="860" on="0"/>
        <pt x="1017" y="710" on="1"/>
        <pt x="842" y="710" on="1"/>
        <pt x="834" y="815" on="0"/>
        <pt x="691" y="950" on="0"/>
        <pt x="586" y="950" on="1"/>
        <pt x="445" y="950" on="0"/>
        <pt x="290" y="747" on="0"/>
        <pt x="290" y="555" on="1"/>
        <pt x="290" y="520" on="1"/>
        <pt x="290" y="333" on="0"/>
        <pt x="445" y="131" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          0 34 35
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          20
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          20 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          27 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="chi" xMin="90" yMin="-436" xMax="1140" yMax="1097">
      <contour>
        <pt x="194" y="1097" on="1"/>
        <pt x="368" y="1097" on="0"/>
        <pt x="456" y="905" on="1"/>
        <pt x="605" y="566" on="1"/>
        <pt x="860" y="1082" on="1"/>
        <pt x="1047" y="1082" on="1"/>
        <pt x="695" y="361" on="1"/>
        <pt x="913" y="-137" on="1"/>
        <pt x="974" y="-265" on="0"/>
        <pt x="1042" y="-268" on="1"/>
        <pt x="1068" y="-268" on="1"/>
        <pt x="1140" y="-263" on="1"/>
        <pt x="1093" y="-421" on="1"/>
        <pt x="1069" y="-436" on="0"/>
        <pt x="1032" y="-436" on="1"/>
        <pt x="941" y="-436" on="0"/>
        <pt x="821" y="-342" on="0"/>
        <pt x="759" y="-208" on="1"/>
        <pt x="597" y="162" on="1"/>
        <pt x="316" y="-415" on="1"/>
        <pt x="120" y="-415" on="1"/>
        <pt x="507" y="369" on="1"/>
        <pt x="339" y="756" on="1"/>
        <pt x="266" y="939" on="0"/>
        <pt x="159" y="939" on="1"/>
        <pt x="91" y="934" on="1"/>
        <pt x="90" y="1082" on="1"/>
        <pt x="158" y="1097" on="0"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          19 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          14 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          3 4 19
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          18 19 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          6 3 18
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          9 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          21 18 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          24 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="circumflex" xMin="169" yMin="1252" xMax="774" yMax="1536">
      <contour>
        <pt x="774" y="1262" on="1"/>
        <pt x="774" y="1252" on="1"/>
        <pt x="621" y="1252" on="1"/>
        <pt x="471" y="1422" on="1"/>
        <pt x="322" y="1252" on="1"/>
        <pt x="169" y="1252" on="1"/>
        <pt x="169" y="1264" on="1"/>
        <pt x="415" y="1536" on="1"/>
        <pt x="527" y="1536" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 5 values pushed */
          15 7 31 7 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          5 4 7
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSH[ ]	/* 1 value pushed */
          1
          MDRP[10000]	/* MoveDirectRelPt */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          3 4 7
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="colon" xMin="134" yMin="-11" xMax="365" yMax="1092">
      <component glyphName="period" x="-10" y="0" flags="0x4"/>
      <component glyphName="period" x="-9" y="883" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="comma" xMin="29" yMin="-290" xMax="308" yMax="219">
      <contour>
        <pt x="134" y="-290" on="1"/>
        <pt x="29" y="-218" on="1"/>
        <pt x="123" y="-87" on="0"/>
        <pt x="127" y="52" on="1"/>
        <pt x="127" y="219" on="1"/>
        <pt x="308" y="219" on="1"/>
        <pt x="308" y="74" on="1"/>
        <pt x="308" y="-27" on="0"/>
        <pt x="209" y="-229" on="0"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          4 5 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="copyright" xMin="91" yMin="-21" xMax="1510" yMax="1476">
      <contour>
        <pt x="1119" y="597" on="1"/>
        <pt x="1119" y="444" on="0"/>
        <pt x="946" y="283" on="0"/>
        <pt x="788" y="283" on="1"/>
        <pt x="631" y="283" on="0"/>
        <pt x="442" y="494" on="0"/>
        <pt x="442" y="676" on="1"/>
        <pt x="442" y="786" on="1"/>
        <pt x="442" y="962" on="0"/>
        <pt x="633" y="1173" on="0"/>
        <pt x="788" y="1173" on="1"/>
        <pt x="948" y="1173" on="0"/>
        <pt x="1120" y="1009" on="0"/>
        <pt x="1120" y="860" on="1"/>
        <pt x="974" y="860" on="1"/>
        <pt x="974" y="959" on="0"/>
        <pt x="879" y="1044" on="0"/>
        <pt x="788" y="1044" on="1"/>
        <pt x="694" y="1044" on="0"/>
        <pt x="586" y="906" on="0"/>
        <pt x="586" y="783" on="1"/>
        <pt x="586" y="670" on="1"/>
        <pt x="586" y="550" on="0"/>
        <pt x="694" y="412" on="0"/>
        <pt x="788" y="412" on="1"/>
        <pt x="880" y="412" on="0"/>
        <pt x="973" y="496" on="0"/>
        <pt x="973" y="597" on="1"/>
      </contour>
      <contour>
        <pt x="206" y="729" on="1"/>
        <pt x="206" y="557" on="0"/>
        <pt x="366" y="264" on="0"/>
        <pt x="641" y="98" on="0"/>
        <pt x="961" y="98" on="0"/>
        <pt x="1235" y="264" on="0"/>
        <pt x="1395" y="557" on="0"/>
        <pt x="1395" y="729" on="1"/>
        <pt x="1395" y="899" on="0"/>
        <pt x="1237" y="1189" on="0"/>
        <pt x="962" y="1356" on="0"/>
        <pt x="801" y="1356" on="1"/>
        <pt x="641" y="1356" on="0"/>
        <pt x="365" y="1191" on="0"/>
        <pt x="206" y="899" on="0"/>
      </contour>
      <contour>
        <pt x="91" y="729" on="1"/>
        <pt x="91" y="931" on="0"/>
        <pt x="278" y="1277" on="0"/>
        <pt x="609" y="1476" on="0"/>
        <pt x="993" y="1476" on="0"/>
        <pt x="1323" y="1277" on="0"/>
        <pt x="1510" y="931" on="0"/>
        <pt x="1510" y="729" on="1"/>
        <pt x="1510" y="532" on="0"/>
        <pt x="1330" y="188" on="0"/>
        <pt x="999" y="-21" on="0"/>
        <pt x="801" y="-21" on="1"/>
        <pt x="604" y="-21" on="0"/>
        <pt x="273" y="186" on="0"/>
        <pt x="91" y="530" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          39 58 59
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          39
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          39
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          54
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          46
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          46 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          54
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          54 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          3 54 46
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 5 values pushed */
          15 3 31 3 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          10 46 54
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 5 values pushed */
          0 10 16 10 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          14 10 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          17 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          24 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          27 3 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          54
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          32 4 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          46
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          39 4 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="currency" xMin="105" yMin="-27" xMax="1371" yMax="1265">
      <contour>
        <pt x="1103" y="112" on="1"/>
        <pt x="944" y="-20" on="0"/>
        <pt x="735" y="-20" on="1"/>
        <pt x="528" y="-20" on="0"/>
        <pt x="369" y="110" on="1"/>
        <pt x="235" y="-26" on="1"/>
        <pt x="105" y="109" on="1"/>
        <pt x="244" y="250" on="1"/>
        <pt x="140" y="406" on="0"/>
        <pt x="140" y="608" on="1"/>
        <pt x="140" y="814" on="0"/>
        <pt x="252" y="977" on="1"/>
        <pt x="105" y="1128" on="1"/>
        <pt x="235" y="1264" on="1"/>
        <pt x="382" y="1114" on="1"/>
        <pt x="540" y="1234" on="0"/>
        <pt x="735" y="1234" on="1"/>
        <pt x="931" y="1234" on="0"/>
        <pt x="1090" y="1113" on="1"/>
        <pt x="1239" y="1265" on="1"/>
        <pt x="1371" y="1128" on="1"/>
        <pt x="1220" y="974" on="1"/>
        <pt x="1330" y="811" on="0"/>
        <pt x="1330" y="608" on="1"/>
        <pt x="1330" y="412" on="0"/>
        <pt x="1228" y="253" on="1"/>
        <pt x="1371" y="109" on="1"/>
        <pt x="1239" y="-27" on="1"/>
      </contour>
      <contour>
        <pt x="311" y="608" on="1"/>
        <pt x="311" y="485" on="0"/>
        <pt x="426" y="273" on="0"/>
        <pt x="622" y="151" on="0"/>
        <pt x="848" y="151" on="0"/>
        <pt x="1044" y="274" on="0"/>
        <pt x="1157" y="485" on="0"/>
        <pt x="1157" y="608" on="1"/>
        <pt x="1157" y="730" on="0"/>
        <pt x="1044" y="941" on="0"/>
        <pt x="847" y="1062" on="0"/>
        <pt x="735" y="1062" on="1"/>
        <pt x="622" y="1062" on="0"/>
        <pt x="426" y="942" on="0"/>
        <pt x="311" y="730" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          2 43 44
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          39
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          31 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          39 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="d" xMin="95" yMin="-20" xMax="1008" yMax="1536">
      <contour>
        <pt x="95" y="550" on="1"/>
        <pt x="95" y="799" on="0"/>
        <pt x="331" y="1102" on="0"/>
        <pt x="522" y="1102" on="1"/>
        <pt x="712" y="1102" on="0"/>
        <pt x="823" y="972" on="1"/>
        <pt x="823" y="1536" on="1"/>
        <pt x="1008" y="1536" on="1"/>
        <pt x="1008" y="0" on="1"/>
        <pt x="838" y="0" on="1"/>
        <pt x="829" y="116" on="1"/>
        <pt x="718" y="-20" on="0"/>
        <pt x="520" y="-20" on="1"/>
        <pt x="332" y="-20" on="0"/>
        <pt x="95" y="288" on="0"/>
        <pt x="95" y="536" on="1"/>
      </contour>
      <contour>
        <pt x="280" y="529" on="1"/>
        <pt x="280" y="345" on="0"/>
        <pt x="432" y="137" on="0"/>
        <pt x="566" y="137" on="1"/>
        <pt x="742" y="137" on="0"/>
        <pt x="823" y="295" on="1"/>
        <pt x="823" y="792" on="1"/>
        <pt x="740" y="945" on="0"/>
        <pt x="568" y="945" on="1"/>
        <pt x="432" y="945" on="0"/>
        <pt x="280" y="735" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          24 27 28
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          24
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          5 3 12
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          10 3 12
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          19 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          24 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="dagger" xMin="70" yMin="0" xMax="1060" yMax="1456">
      <contour>
        <pt x="1060" y="929" on="1"/>
        <pt x="656" y="929" on="1"/>
        <pt x="656" y="0" on="1"/>
        <pt x="470" y="0" on="1"/>
        <pt x="470" y="929" on="1"/>
        <pt x="70" y="929" on="1"/>
        <pt x="70" y="1082" on="1"/>
        <pt x="470" y="1082" on="1"/>
        <pt x="470" y="1456" on="1"/>
        <pt x="656" y="1456" on="1"/>
        <pt x="656" y="1082" on="1"/>
        <pt x="1060" y="1082" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="daggerdbl" xMin="87" yMin="-416" xMax="1076" yMax="1456">
      <contour>
        <pt x="1076" y="0" on="1"/>
        <pt x="670" y="0" on="1"/>
        <pt x="670" y="-416" on="1"/>
        <pt x="484" y="-416" on="1"/>
        <pt x="484" y="0" on="1"/>
        <pt x="87" y="0" on="1"/>
        <pt x="87" y="151" on="1"/>
        <pt x="484" y="151" on="1"/>
        <pt x="484" y="929" on="1"/>
        <pt x="87" y="929" on="1"/>
        <pt x="87" y="1082" on="1"/>
        <pt x="484" y="1082" on="1"/>
        <pt x="484" y="1456" on="1"/>
        <pt x="670" y="1456" on="1"/>
        <pt x="670" y="1082" on="1"/>
        <pt x="1076" y="1082" on="1"/>
        <pt x="1076" y="929" on="1"/>
        <pt x="670" y="929" on="1"/>
        <pt x="670" y="151" on="1"/>
        <pt x="1076" y="151" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          14 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          6 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          8 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          18
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="dcaron" xMin="95" yMin="-20" xMax="1323" yMax="1538">
      <component glyphName="d" x="0" y="0" flags="0x4"/>
      <component glyphName="uniF6C3" x="980" y="1299" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 3 values pushed */
          240 31 1
          DELTAP3[ ]	/* DeltaExceptionP3 */
          PUSH[ ]	/* 3 values pushed */
          31 31 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          159 31 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          31 31 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 5 values pushed */
          207 31 223 31 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 3 values pushed */
          223 31 1
          DELTAP3[ ]	/* DeltaExceptionP3 */
          PUSH[ ]	/* 3 values pushed */
          95 31 1
          DELTAP3[ ]	/* DeltaExceptionP3 */
          PUSH[ ]	/* 3 values pushed */
          79 31 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 3 values pushed */
          207 31 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          79 31 95 31 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          96 31 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          224 31 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 3 values pushed */
          224 31 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="dcroat" xMin="95" yMin="-20" xMax="1196" yMax="1536">
      <contour>
        <pt x="1196" y="1233" on="1"/>
        <pt x="1008" y="1233" on="1"/>
        <pt x="1008" y="0" on="1"/>
        <pt x="838" y="0" on="1"/>
        <pt x="829" y="116" on="1"/>
        <pt x="718" y="-20" on="0"/>
        <pt x="520" y="-20" on="1"/>
        <pt x="332" y="-20" on="0"/>
        <pt x="95" y="288" on="0"/>
        <pt x="95" y="536" on="1"/>
        <pt x="95" y="550" on="1"/>
        <pt x="95" y="799" on="0"/>
        <pt x="331" y="1102" on="0"/>
        <pt x="522" y="1102" on="1"/>
        <pt x="712" y="1102" on="0"/>
        <pt x="823" y="972" on="1"/>
        <pt x="823" y="1233" on="1"/>
        <pt x="559" y="1233" on="1"/>
        <pt x="559" y="1384" on="1"/>
        <pt x="823" y="1384" on="1"/>
        <pt x="823" y="1536" on="1"/>
        <pt x="1008" y="1536" on="1"/>
        <pt x="1008" y="1384" on="1"/>
        <pt x="1196" y="1384" on="1"/>
      </contour>
      <contour>
        <pt x="280" y="529" on="1"/>
        <pt x="280" y="345" on="0"/>
        <pt x="432" y="137" on="0"/>
        <pt x="566" y="137" on="1"/>
        <pt x="742" y="137" on="0"/>
        <pt x="823" y="295" on="1"/>
        <pt x="823" y="792" on="1"/>
        <pt x="740" y="945" on="0"/>
        <pt x="568" y="945" on="1"/>
        <pt x="432" y="945" on="0"/>
        <pt x="280" y="735" on="0"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          20
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          15 20 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          47 20 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          19 3 20
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          16 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          1
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          4 6 13
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          15 13 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          27 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          32 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="degree" xMin="130" yMin="960" xMax="636" yMax="1476">
      <contour>
        <pt x="130" y="1216" on="1"/>
        <pt x="130" y="1320" on="0"/>
        <pt x="279" y="1476" on="0"/>
        <pt x="385" y="1476" on="1"/>
        <pt x="489" y="1476" on="0"/>
        <pt x="636" y="1321" on="0"/>
        <pt x="636" y="1216" on="1"/>
        <pt x="636" y="1110" on="0"/>
        <pt x="489" y="960" on="0"/>
        <pt x="385" y="960" on="1"/>
        <pt x="280" y="960" on="0"/>
        <pt x="130" y="1110" on="0"/>
      </contour>
      <contour>
        <pt x="385" y="1088" on="1"/>
        <pt x="439" y="1088" on="0"/>
        <pt x="513" y="1159" on="0"/>
        <pt x="513" y="1216" on="1"/>
        <pt x="513" y="1274" on="0"/>
        <pt x="439" y="1349" on="0"/>
        <pt x="385" y="1349" on="1"/>
        <pt x="330" y="1349" on="0"/>
        <pt x="255" y="1270" on="0"/>
        <pt x="255" y="1162" on="0"/>
        <pt x="330" y="1088" on="0"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          9 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          18 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="delta" xMin="96" yMin="-20" xMax="1063" yMax="1564">
      <contour>
        <pt x="221" y="1269" on="1"/>
        <pt x="221" y="1405" on="0"/>
        <pt x="424" y="1564" on="0"/>
        <pt x="599" y="1564" on="1"/>
        <pt x="738" y="1564" on="0"/>
        <pt x="872" y="1509" on="1"/>
        <pt x="870" y="1349" on="1"/>
        <pt x="719" y="1408" on="0"/>
        <pt x="595" y="1408" on="1"/>
        <pt x="509" y="1408" on="0"/>
        <pt x="408" y="1336" on="0"/>
        <pt x="408" y="1274" on="1"/>
        <pt x="408" y="1166" on="0"/>
        <pt x="851" y="1013" on="0"/>
        <pt x="1058" y="744" on="0"/>
        <pt x="1063" y="548" on="1"/>
        <pt x="1063" y="509" on="1"/>
        <pt x="1063" y="356" on="0"/>
        <pt x="945" y="113" on="0"/>
        <pt x="726" y="-20" on="0"/>
        <pt x="581" y="-20" on="1"/>
        <pt x="359" y="-20" on="0"/>
        <pt x="96" y="275" on="0"/>
        <pt x="96" y="517" on="1"/>
        <pt x="96" y="530" on="1"/>
        <pt x="96" y="695" on="0"/>
        <pt x="284" y="959" on="0"/>
        <pt x="428" y="994" on="1"/>
        <pt x="427" y="999" on="1"/>
        <pt x="328" y="1038" on="0"/>
        <pt x="221" y="1178" on="0"/>
      </contour>
      <contour>
        <pt x="283" y="509" on="1"/>
        <pt x="283" y="333" on="0"/>
        <pt x="444" y="130" on="0"/>
        <pt x="581" y="130" on="1"/>
        <pt x="717" y="130" on="0"/>
        <pt x="877" y="332" on="0"/>
        <pt x="877" y="530" on="1"/>
        <pt x="877" y="666" on="0"/>
        <pt x="708" y="885" on="0"/>
        <pt x="583" y="910" on="1"/>
        <pt x="447" y="910" on="0"/>
        <pt x="283" y="705" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          20 43 44
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          34
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 32
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          20
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          20 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          8 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          27 20 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          27
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          40 11 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          34 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="dieresis" xMin="101" yMin="1264" xMax="750" yMax="1477">
      <contour>
        <pt x="101" y="1371" on="1"/>
        <pt x="101" y="1416" on="0"/>
        <pt x="156" y="1477" on="0"/>
        <pt x="264" y="1477" on="0"/>
        <pt x="320" y="1416" on="0"/>
        <pt x="320" y="1326" on="0"/>
        <pt x="264" y="1266" on="0"/>
        <pt x="156" y="1266" on="0"/>
        <pt x="101" y="1326" on="0"/>
      </contour>
      <contour>
        <pt x="531" y="1369" on="1"/>
        <pt x="531" y="1414" on="0"/>
        <pt x="586" y="1476" on="0"/>
        <pt x="694" y="1476" on="0"/>
        <pt x="750" y="1414" on="0"/>
        <pt x="750" y="1324" on="0"/>
        <pt x="694" y="1264" on="0"/>
        <pt x="586" y="1264" on="0"/>
        <pt x="531" y="1324" on="0"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          2 5 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="dieresistonos" xMin="113" yMin="1264" xMax="899" yMax="1672">
      <contour>
        <pt x="481" y="1672" on="1"/>
        <pt x="669" y="1672" on="1"/>
        <pt x="568" y="1408" on="1"/>
        <pt x="433" y="1408" on="1"/>
      </contour>
      <contour>
        <pt x="113" y="1371" on="1"/>
        <pt x="113" y="1416" on="0"/>
        <pt x="168" y="1477" on="0"/>
        <pt x="276" y="1477" on="0"/>
        <pt x="332" y="1416" on="0"/>
        <pt x="332" y="1326" on="0"/>
        <pt x="276" y="1266" on="0"/>
        <pt x="168" y="1266" on="0"/>
        <pt x="113" y="1326" on="0"/>
      </contour>
      <contour>
        <pt x="680" y="1369" on="1"/>
        <pt x="680" y="1414" on="0"/>
        <pt x="735" y="1476" on="0"/>
        <pt x="843" y="1476" on="0"/>
        <pt x="899" y="1414" on="0"/>
        <pt x="899" y="1324" on="0"/>
        <pt x="843" y="1264" on="0"/>
        <pt x="735" y="1264" on="0"/>
        <pt x="680" y="1324" on="0"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          1
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSH[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          6 5 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          20
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="divide" xMin="71" yMin="172" xMax="1069" yMax="1210">
      <contour>
        <pt x="1069" y="600" on="1"/>
        <pt x="71" y="600" on="1"/>
        <pt x="71" y="784" on="1"/>
        <pt x="1069" y="784" on="1"/>
      </contour>
      <contour>
        <pt x="461" y="1098" on="1"/>
        <pt x="461" y="1146" on="0"/>
        <pt x="518" y="1210" on="0"/>
        <pt x="632" y="1210" on="0"/>
        <pt x="691" y="1146" on="0"/>
        <pt x="691" y="1098" on="1"/>
        <pt x="691" y="1051" on="0"/>
        <pt x="632" y="989" on="0"/>
        <pt x="518" y="989" on="0"/>
        <pt x="461" y="1051" on="0"/>
      </contour>
      <contour>
        <pt x="461" y="281" on="1"/>
        <pt x="461" y="329" on="0"/>
        <pt x="518" y="393" on="0"/>
        <pt x="632" y="393" on="0"/>
        <pt x="691" y="329" on="0"/>
        <pt x="691" y="281" on="1"/>
        <pt x="691" y="235" on="0"/>
        <pt x="632" y="172" on="0"/>
        <pt x="518" y="172" on="0"/>
        <pt x="461" y="235" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          7 24 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          1 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 2 values pushed */
          12 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MDRP[11100]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          6 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MDRP[11100]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 2 values pushed */
          16 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MDRP[11100]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          22 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MDRP[11100]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="dollar" xMin="110" yMin="-208" xMax="1041" yMax="1692">
      <contour>
        <pt x="856" y="375" on="1"/>
        <pt x="856" y="467" on="0"/>
        <pt x="727" y="593" on="0"/>
        <pt x="574" y="644" on="1"/>
        <pt x="361" y="709" on="0"/>
        <pt x="166" y="918" on="0"/>
        <pt x="166" y="1079" on="1"/>
        <pt x="166" y="1243" on="0"/>
        <pt x="357" y="1453" on="0"/>
        <pt x="524" y="1473" on="1"/>
        <pt x="524" y="1692" on="1"/>
        <pt x="673" y="1692" on="1"/>
        <pt x="673" y="1472" on="1"/>
        <pt x="841" y="1449" on="0"/>
        <pt x="1028" y="1213" on="0"/>
        <pt x="1028" y="1008" on="1"/>
        <pt x="844" y="1008" on="1"/>
        <pt x="844" y="1149" on="0"/>
        <pt x="710" y="1315" on="0"/>
        <pt x="596" y="1315" on="1"/>
        <pt x="477" y="1315" on="0"/>
        <pt x="351" y="1192" on="0"/>
        <pt x="351" y="1082" on="1"/>
        <pt x="351" y="980" on="0"/>
        <pt x="484" y="859" on="0"/>
        <pt x="789" y="760" on="0"/>
        <pt x="960" y="641" on="0"/>
        <pt x="1041" y="483" on="0"/>
        <pt x="1041" y="377" on="1"/>
        <pt x="1041" y="208" on="0"/>
        <pt x="838" y="2" on="0"/>
        <pt x="655" y="-17" on="1"/>
        <pt x="655" y="-208" on="1"/>
        <pt x="507" y="-208" on="1"/>
        <pt x="507" y="-17" on="1"/>
        <pt x="321" y="0" on="0"/>
        <pt x="110" y="231" on="0"/>
        <pt x="110" y="429" on="1"/>
        <pt x="295" y="429" on="1"/>
        <pt x="295" y="290" on="0"/>
        <pt x="441" y="140" on="0"/>
        <pt x="575" y="140" on="1"/>
        <pt x="706" y="140" on="0"/>
        <pt x="856" y="266" on="0"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          34
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          34 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          2 34 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          19 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          25 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          34
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          31
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          34
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          38
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          34
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          41 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="dong" xMin="95" yMin="-307" xMax="1196" yMax="1536">
      <component glyphName="d" x="0" y="0" flags="0x4"/>
      <component glyphName="glyph00550" x="417" y="583" flags="0x4"/>
      <component glyphName="underscore" x="159" y="-156" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 3 values pushed */
          47 30 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="dotaccent" xMin="141" yMin="1262" xMax="360" yMax="1474">
      <contour>
        <pt x="141" y="1367" on="1"/>
        <pt x="141" y="1412" on="0"/>
        <pt x="196" y="1474" on="0"/>
        <pt x="304" y="1474" on="0"/>
        <pt x="360" y="1412" on="0"/>
        <pt x="360" y="1322" on="0"/>
        <pt x="304" y="1262" on="0"/>
        <pt x="196" y="1262" on="0"/>
        <pt x="141" y="1322" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          2 9 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          2 5 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="dotbelowcomb" xMin="-712" yMin="-350" xMax="-493" yMax="-138">
      <contour>
        <pt x="-712" y="-245" on="1"/>
        <pt x="-712" y="-200" on="0"/>
        <pt x="-657" y="-138" on="0"/>
        <pt x="-549" y="-138" on="0"/>
        <pt x="-493" y="-200" on="0"/>
        <pt x="-493" y="-290" on="0"/>
        <pt x="-549" y="-350" on="0"/>
        <pt x="-657" y="-350" on="0"/>
        <pt x="-712" y="-290" on="0"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          7 5 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="dotlessi" xMin="155" yMin="0" xMax="341" yMax="1082">
      <contour>
        <pt x="341" y="0" on="1"/>
        <pt x="155" y="0" on="1"/>
        <pt x="155" y="1082" on="1"/>
        <pt x="341" y="1082" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="e" xMin="93" yMin="-20" xMax="1011" yMax="1102">
      <contour>
        <pt x="589" y="-20" on="1"/>
        <pt x="369" y="-20" on="0"/>
        <pt x="93" y="269" on="0"/>
        <pt x="93" y="511" on="1"/>
        <pt x="93" y="545" on="1"/>
        <pt x="93" y="706" on="0"/>
        <pt x="216" y="959" on="0"/>
        <pt x="437" y="1102" on="0"/>
        <pt x="566" y="1102" on="1"/>
        <pt x="777" y="1102" on="0"/>
        <pt x="1011" y="824" on="0"/>
        <pt x="1011" y="565" on="1"/>
        <pt x="1011" y="488" on="1"/>
        <pt x="278" y="488" on="1"/>
        <pt x="282" y="328" on="0"/>
        <pt x="461" y="131" on="0"/>
        <pt x="599" y="131" on="1"/>
        <pt x="697" y="131" on="0"/>
        <pt x="833" y="211" on="0"/>
        <pt x="884" y="277" on="1"/>
        <pt x="997" y="189" on="1"/>
        <pt x="861" y="-20" on="0"/>
      </contour>
      <contour>
        <pt x="566" y="950" on="1"/>
        <pt x="454" y="950" on="0"/>
        <pt x="302" y="787" on="0"/>
        <pt x="284" y="640" on="1"/>
        <pt x="826" y="640" on="1"/>
        <pt x="826" y="654" on="1"/>
        <pt x="818" y="795" on="0"/>
        <pt x="682" y="950" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          8 30 31
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          26 8 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          26
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 5 values pushed */
          191 26 207 26 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          12 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          16 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          19 8 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          22 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="eacute" xMin="93" yMin="-20" xMax="1011" yMax="1536">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="340" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          32 9
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ebreve" xMin="93" yMin="-20" xMax="1011" yMax="1496">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="breve" x="137" y="1" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          33
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ecaron" xMin="93" yMin="-20" xMax="1011" yMax="1536">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="115" y="1" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          34 1
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ecircumflex" xMin="93" yMin="-20" xMax="1011" yMax="1536">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="94" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          32 1
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="edieresis" xMin="93" yMin="-20" xMax="1011" yMax="1477">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="142" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          37 1
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          46
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="edotaccent" xMin="93" yMin="-20" xMax="1011" yMax="1474">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="dotaccent" x="315" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          37 1
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="egrave" xMin="93" yMin="-20" xMax="1011" yMax="1536">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="197" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          31 9
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="eight" xMin="112" yMin="-20" xMax="1038" yMax="1476">
      <contour>
        <pt x="1004" y="1076" on="1"/>
        <pt x="1004" y="967" on="0"/>
        <pt x="889" y="797" on="0"/>
        <pt x="791" y="749" on="1"/>
        <pt x="905" y="700" on="0"/>
        <pt x="1038" y="512" on="0"/>
        <pt x="1038" y="393" on="1"/>
        <pt x="1038" y="204" on="0"/>
        <pt x="783" y="-20" on="0"/>
        <pt x="575" y="-20" on="1"/>
        <pt x="365" y="-20" on="0"/>
        <pt x="112" y="205" on="0"/>
        <pt x="112" y="393" on="1"/>
        <pt x="112" y="511" on="0"/>
        <pt x="241" y="701" on="0"/>
        <pt x="355" y="750" on="1"/>
        <pt x="258" y="798" on="0"/>
        <pt x="146" y="968" on="0"/>
        <pt x="146" y="1076" on="1"/>
        <pt x="146" y="1260" on="0"/>
        <pt x="382" y="1476" on="0"/>
        <pt x="575" y="1476" on="1"/>
        <pt x="767" y="1476" on="0"/>
        <pt x="1004" y="1260" on="0"/>
      </contour>
      <contour>
        <pt x="853" y="397" on="1"/>
        <pt x="853" y="519" on="0"/>
        <pt x="698" y="673" on="0"/>
        <pt x="448" y="673" on="0"/>
        <pt x="297" y="521" on="0"/>
        <pt x="297" y="273" on="0"/>
        <pt x="444" y="131" on="0"/>
        <pt x="575" y="131" on="1"/>
        <pt x="705" y="131" on="0"/>
        <pt x="853" y="274" on="0"/>
      </contour>
      <contour>
        <pt x="575" y="1324" on="1"/>
        <pt x="466" y="1324" on="0"/>
        <pt x="331" y="1189" on="0"/>
        <pt x="331" y="1073" on="1"/>
        <pt x="331" y="962" on="0"/>
        <pt x="464" y="825" on="0"/>
        <pt x="686" y="825" on="0"/>
        <pt x="819" y="962" on="0"/>
        <pt x="819" y="1184" on="0"/>
        <pt x="681" y="1324" on="0"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          21 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          39 9 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          39
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          207 39 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          26 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          3 26 39
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          15 39 26
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          31 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          34 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ellipsis" xMin="148" yMin="-11" xMax="1230" yMax="209">
      <component glyphName="period" x="4" y="0" flags="0x4"/>
      <component glyphName="period" x="441" y="0" flags="0x4"/>
      <component glyphName="period" x="856" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="emacron" xMin="93" yMin="-20" xMax="1011" yMax="1453">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="macron" x="92" y="8" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          31
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="emdash" xMin="145" yMin="651" xMax="1481" yMax="802">
      <component glyphName="minus" x="-124" y="0" scalex="1.6" scaley="1.0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="endash" xMin="163" yMin="651" xMax="1165" yMax="802">
      <component glyphName="minus" x="-39" y="0" scalex="1.2" scaley="1.0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="eng" xMin="145" yMin="-437" xMax="1008" yMax="1102">
      <contour>
        <pt x="311" y="1082" on="1"/>
        <pt x="324" y="928" on="1"/>
        <pt x="440" y="1102" on="0"/>
        <pt x="643" y="1102" on="1"/>
        <pt x="822" y="1102" on="0"/>
        <pt x="1006" y="894" on="0"/>
        <pt x="1008" y="691" on="1"/>
        <pt x="1008" y="-89" on="1"/>
        <pt x="1008" y="-253" on="0"/>
        <pt x="841" y="-437" on="0"/>
        <pt x="686" y="-437" on="1"/>
        <pt x="625" y="-437" on="0"/>
        <pt x="571" y="-419" on="1"/>
        <pt x="585" y="-262" on="1"/>
        <pt x="620" y="-275" on="0"/>
        <pt x="686" y="-275" on="1"/>
        <pt x="823" y="-275" on="0"/>
        <pt x="823" y="-81" on="1"/>
        <pt x="823" y="678" on="1"/>
        <pt x="823" y="817" on="0"/>
        <pt x="712" y="945" on="0"/>
        <pt x="587" y="945" on="1"/>
        <pt x="412" y="945" on="0"/>
        <pt x="331" y="812" on="1"/>
        <pt x="331" y="0" on="1"/>
        <pt x="145" y="0" on="1"/>
        <pt x="145" y="1082" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          13 27 28
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          24
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          24 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          1 24 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          15 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          21 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="eogonek" xMin="93" yMin="-408" xMax="1011" yMax="1102">
      <contour>
        <pt x="997" y="189" on="1"/>
        <pt x="926" y="79" on="0"/>
        <pt x="811" y="25" on="1"/>
        <pt x="812" y="25" on="1"/>
        <pt x="754" y="-20" on="1"/>
        <pt x="641" y="-111" on="0"/>
        <pt x="641" y="-197" on="1"/>
        <pt x="641" y="-269" on="0"/>
        <pt x="719" y="-269" on="1"/>
        <pt x="767" y="-269" on="0"/>
        <pt x="819" y="-243" on="1"/>
        <pt x="832" y="-364" on="1"/>
        <pt x="762" y="-408" on="0"/>
        <pt x="672" y="-408" on="1"/>
        <pt x="583" y="-408" on="0"/>
        <pt x="480" y="-304" on="0"/>
        <pt x="480" y="-218" on="1"/>
        <pt x="480" y="-110" on="0"/>
        <pt x="578" y="-20" on="1"/>
        <pt x="360" y="-16" on="0"/>
        <pt x="93" y="273" on="0"/>
        <pt x="93" y="512" on="1"/>
        <pt x="93" y="545" on="1"/>
        <pt x="93" y="706" on="0"/>
        <pt x="216" y="959" on="0"/>
        <pt x="437" y="1102" on="0"/>
        <pt x="566" y="1102" on="1"/>
        <pt x="777" y="1102" on="0"/>
        <pt x="1011" y="824" on="0"/>
        <pt x="1011" y="565" on="1"/>
        <pt x="1011" y="488" on="1"/>
        <pt x="278" y="488" on="1"/>
        <pt x="282" y="328" on="0"/>
        <pt x="461" y="131" on="0"/>
        <pt x="599" y="131" on="1"/>
        <pt x="697" y="131" on="0"/>
        <pt x="833" y="211" on="0"/>
        <pt x="884" y="277" on="1"/>
      </contour>
      <contour>
        <pt x="566" y="950" on="1"/>
        <pt x="454" y="950" on="0"/>
        <pt x="302" y="787" on="0"/>
        <pt x="284" y="640" on="1"/>
        <pt x="826" y="640" on="1"/>
        <pt x="826" y="654" on="1"/>
        <pt x="818" y="795" on="0"/>
        <pt x="682" y="950" on="0"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          26
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          26 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          18
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          18 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          8 3 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          42 18 26
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          42
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 5 values pushed */
          191 42 207 42 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          30 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          34 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          37 18 26
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          26
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          38 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="epsilon" xMin="99" yMin="-20" xMax="1004" yMax="1101">
      <contour>
        <pt x="286" y="304" on="1"/>
        <pt x="286" y="227" on="0"/>
        <pt x="433" y="129" on="0"/>
        <pt x="551" y="129" on="1"/>
        <pt x="664" y="129" on="0"/>
        <pt x="819" y="239" on="0"/>
        <pt x="819" y="320" on="1"/>
        <pt x="1004" y="320" on="1"/>
        <pt x="1004" y="165" on="0"/>
        <pt x="749" y="-20" on="0"/>
        <pt x="551" y="-20" on="1"/>
        <pt x="347" y="-20" on="0"/>
        <pt x="99" y="157" on="0"/>
        <pt x="99" y="304" on="1"/>
        <pt x="99" y="490" on="0"/>
        <pt x="304" y="556" on="1"/>
        <pt x="216" y="592" on="0"/>
        <pt x="118" y="714" on="0"/>
        <pt x="118" y="787" on="1"/>
        <pt x="118" y="935" on="0"/>
        <pt x="349" y="1101" on="0"/>
        <pt x="551" y="1101" on="1"/>
        <pt x="737" y="1101" on="0"/>
        <pt x="986" y="922" on="0"/>
        <pt x="986" y="780" on="1"/>
        <pt x="801" y="780" on="1"/>
        <pt x="801" y="850" on="0"/>
        <pt x="658" y="951" on="0"/>
        <pt x="551" y="951" on="1"/>
        <pt x="439" y="951" on="0"/>
        <pt x="304" y="860" on="0"/>
        <pt x="304" y="786" on="1"/>
        <pt x="304" y="626" on="0"/>
        <pt x="548" y="626" on="1"/>
        <pt x="744" y="626" on="1"/>
        <pt x="744" y="478" on="1"/>
        <pt x="520" y="478" on="1"/>
        <pt x="286" y="472" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          3 38 39
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          21 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          3 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          34
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          34
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          47 34 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          191 34 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          35 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          15 35 34
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          25 21 34
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          28 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="epsilontonos" xMin="99" yMin="-20" xMax="1004" yMax="1593">
      <component glyphName="epsilon" x="0" y="0" flags="0x204"/>
      <component glyphName="tonos" x="299" y="-6" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          21 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          40 1
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="equal" xMin="152" yMin="399" xMax="986" yMax="975">
      <contour>
        <pt x="986" y="814" on="1"/>
        <pt x="152" y="814" on="1"/>
        <pt x="152" y="975" on="1"/>
        <pt x="986" y="975" on="1"/>
      </contour>
      <contour>
        <pt x="986" y="399" on="1"/>
        <pt x="152" y="399" on="1"/>
        <pt x="152" y="559" on="1"/>
        <pt x="986" y="559" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          4 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="estimated" xMin="152" yMin="-20" xMax="1171" yMax="1102">
      <contour>
        <pt x="1046" y="94" on="1"/>
        <pt x="863" y="-20" on="0"/>
        <pt x="676" y="-20" on="1"/>
        <pt x="531" y="-20" on="0"/>
        <pt x="287" y="137" on="0"/>
        <pt x="152" y="394" on="0"/>
        <pt x="152" y="541" on="1"/>
        <pt x="152" y="684" on="0"/>
        <pt x="296" y="943" on="0"/>
        <pt x="544" y="1102" on="0"/>
        <pt x="676" y="1102" on="1"/>
        <pt x="809" y="1102" on="0"/>
        <pt x="1036" y="963" on="0"/>
        <pt x="1168" y="720" on="0"/>
        <pt x="1171" y="576" on="1"/>
        <pt x="1171" y="514" on="1"/>
        <pt x="403" y="514" on="1"/>
        <pt x="403" y="186" on="1"/>
        <pt x="522" y="76" on="0"/>
        <pt x="676" y="76" on="1"/>
        <pt x="872" y="76" on="0"/>
        <pt x="1044" y="198" on="1"/>
      </contour>
      <contour>
        <pt x="676" y="1008" on="1"/>
        <pt x="525" y="1008" on="0"/>
        <pt x="403" y="886" on="1"/>
        <pt x="403" y="609" on="1"/>
        <pt x="943" y="609" on="1"/>
        <pt x="943" y="895" on="1"/>
        <pt x="828" y="1008" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          2 29 30
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          26 10 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          26
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          15 10 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          19 10 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          21 10 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          22 10 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="eta" xMin="145" yMin="-415" xMax="1008" yMax="1102">
      <contour>
        <pt x="312" y="1082" on="1"/>
        <pt x="323" y="946" on="1"/>
        <pt x="443" y="1102" on="0"/>
        <pt x="643" y="1102" on="1"/>
        <pt x="833" y="1102" on="0"/>
        <pt x="1007" y="905" on="0"/>
        <pt x="1008" y="701" on="1"/>
        <pt x="1008" y="-415" on="1"/>
        <pt x="823" y="-415" on="1"/>
        <pt x="823" y="690" on="1"/>
        <pt x="823" y="826" on="0"/>
        <pt x="715" y="950" on="0"/>
        <pt x="587" y="950" on="1"/>
        <pt x="495" y="950" on="0"/>
        <pt x="365" y="863" on="0"/>
        <pt x="331" y="785" on="1"/>
        <pt x="331" y="0" on="1"/>
        <pt x="145" y="0" on="1"/>
        <pt x="145" y="1082" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          12 19 20
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          16 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          1 16 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          12 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="etatonos" xMin="145" yMin="-415" xMax="1008" yMax="1594">
      <component glyphName="eta" x="0" y="0" flags="0x204"/>
      <component glyphName="tonos" x="326" y="-5" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          21 1
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="eth" xMin="126" yMin="-20" xMax="1069" yMax="1580">
      <contour>
        <pt x="820" y="1301" on="1"/>
        <pt x="1069" y="1037" on="0"/>
        <pt x="1069" y="628" on="1"/>
        <pt x="1069" y="535" on="1"/>
        <pt x="1069" y="377" on="0"/>
        <pt x="952" y="124" on="0"/>
        <pt x="736" y="-20" on="0"/>
        <pt x="602" y="-20" on="1"/>
        <pt x="467" y="-20" on="0"/>
        <pt x="247" y="109" on="0"/>
        <pt x="126" y="333" on="0"/>
        <pt x="126" y="467" on="1"/>
        <pt x="126" y="614" on="0"/>
        <pt x="238" y="847" on="0"/>
        <pt x="445" y="977" on="0"/>
        <pt x="574" y="977" on="1"/>
        <pt x="737" y="977" on="0"/>
        <pt x="858" y="863" on="1"/>
        <pt x="810" y="1058" on="0"/>
        <pt x="669" y="1199" on="1"/>
        <pt x="451" y="1051" on="1"/>
        <pt x="378" y="1150" on="1"/>
        <pt x="570" y="1281" on="1"/>
        <pt x="438" y="1372" on="0"/>
        <pt x="255" y="1421" on="1"/>
        <pt x="312" y="1580" on="1"/>
        <pt x="551" y="1526" on="0"/>
        <pt x="726" y="1387" on="1"/>
        <pt x="915" y="1516" on="1"/>
        <pt x="988" y="1416" on="1"/>
      </contour>
      <contour>
        <pt x="884" y="635" on="1"/>
        <pt x="882" y="691" on="1"/>
        <pt x="849" y="752" on="0"/>
        <pt x="710" y="825" on="0"/>
        <pt x="618" y="825" on="1"/>
        <pt x="473" y="825" on="0"/>
        <pt x="311" y="634" on="0"/>
        <pt x="311" y="467" on="1"/>
        <pt x="311" y="327" on="0"/>
        <pt x="478" y="131" on="0"/>
        <pt x="606" y="131" on="1"/>
        <pt x="731" y="131" on="0"/>
        <pt x="884" y="357" on="0"/>
        <pt x="884" y="541" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          7 44 45
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          40
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          25
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          25 32
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          15 25 7
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          17 25 7
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          34 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          40 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="exclam" xMin="160" yMin="-11" xMax="379" yMax="1456">
      <contour>
        <pt x="347" y="411" on="1"/>
        <pt x="180" y="411" on="1"/>
        <pt x="167" y="1456" on="1"/>
        <pt x="361" y="1456" on="1"/>
      </contour>
      <contour>
        <pt x="160" y="93" on="1"/>
        <pt x="160" y="138" on="0"/>
        <pt x="215" y="199" on="0"/>
        <pt x="323" y="199" on="0"/>
        <pt x="379" y="138" on="0"/>
        <pt x="379" y="48" on="0"/>
        <pt x="323" y="-11" on="0"/>
        <pt x="215" y="-11" on="0"/>
        <pt x="160" y="48" on="0"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          6 5 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          1 6 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="exclamdbl" xMin="160" yMin="-11" xMax="906" yMax="1456">
      <component glyphName="exclam" x="0" y="0" flags="0x4"/>
      <component glyphName="exclam" x="527" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="exclamdown" xMin="139" yMin="-360" xMax="358" yMax="1101">
      <contour>
        <pt x="170" y="684" on="1"/>
        <pt x="338" y="684" on="1"/>
        <pt x="351" y="-360" on="1"/>
        <pt x="157" y="-360" on="1"/>
      </contour>
      <contour>
        <pt x="358" y="996" on="1"/>
        <pt x="358" y="951" on="0"/>
        <pt x="303" y="889" on="0"/>
        <pt x="195" y="889" on="0"/>
        <pt x="139" y="951" on="0"/>
        <pt x="139" y="1041" on="0"/>
        <pt x="195" y="1101" on="0"/>
        <pt x="303" y="1101" on="0"/>
        <pt x="358" y="1041" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          6 13 14
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          6 5 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          1 2 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="f" xMin="60" yMin="0" xMax="714" yMax="1557">
      <contour>
        <pt x="231" y="0" on="1"/>
        <pt x="231" y="939" on="1"/>
        <pt x="60" y="939" on="1"/>
        <pt x="60" y="1082" on="1"/>
        <pt x="231" y="1082" on="1"/>
        <pt x="231" y="1193" on="1"/>
        <pt x="231" y="1367" on="0"/>
        <pt x="417" y="1557" on="0"/>
        <pt x="587" y="1557" on="1"/>
        <pt x="651" y="1557" on="0"/>
        <pt x="714" y="1540" on="1"/>
        <pt x="704" y="1390" on="1"/>
        <pt x="657" y="1399" on="0"/>
        <pt x="604" y="1399" on="1"/>
        <pt x="514" y="1399" on="0"/>
        <pt x="416" y="1294" on="0"/>
        <pt x="416" y="1196" on="1"/>
        <pt x="416" y="1082" on="1"/>
        <pt x="647" y="1082" on="1"/>
        <pt x="647" y="939" on="1"/>
        <pt x="416" y="939" on="1"/>
        <pt x="416" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          15 22 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 32
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          17 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          1 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          13 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="five" xMin="154" yMin="-20" xMax="1069" yMax="1456">
      <contour>
        <pt x="206" y="730" on="1"/>
        <pt x="280" y="1456" on="1"/>
        <pt x="1026" y="1456" on="1"/>
        <pt x="1026" y="1285" on="1"/>
        <pt x="437" y="1285" on="1"/>
        <pt x="393" y="888" on="1"/>
        <pt x="500" y="951" on="0"/>
        <pt x="636" y="951" on="1"/>
        <pt x="835" y="951" on="0"/>
        <pt x="1069" y="688" on="0"/>
        <pt x="1069" y="464" on="1"/>
        <pt x="1069" y="239" on="0"/>
        <pt x="826" y="-20" on="0"/>
        <pt x="608" y="-20" on="1"/>
        <pt x="415" y="-20" on="0"/>
        <pt x="171" y="194" on="0"/>
        <pt x="154" y="383" on="1"/>
        <pt x="329" y="383" on="1"/>
        <pt x="346" y="258" on="0"/>
        <pt x="490" y="131" on="0"/>
        <pt x="608" y="131" on="1"/>
        <pt x="737" y="131" on="0"/>
        <pt x="884" y="307" on="0"/>
        <pt x="884" y="462" on="1"/>
        <pt x="884" y="608" on="0"/>
        <pt x="725" y="785" on="0"/>
        <pt x="593" y="785" on="1"/>
        <pt x="472" y="785" on="0"/>
        <pt x="403" y="732" on="1"/>
        <pt x="354" y="692" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          4 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          7 13 1
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          26 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          5 7 26
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          20 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          29
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="fiveeighths" xMin="99" yMin="-11" xMax="1609" yMax="1444">
      <component glyphName="glyph00545" x="8" y="655" flags="0x4"/>
      <component glyphName="fraction" x="387" y="0" flags="0x4"/>
      <component glyphName="glyph00548" x="938" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="florin" xMin="-28" yMin="-437" xMax="700" yMax="1557">
      <contour>
        <pt x="608" y="939" on="1"/>
        <pt x="405" y="939" on="1"/>
        <pt x="405" y="-87" on="1"/>
        <pt x="405" y="-254" on="0"/>
        <pt x="237" y="-437" on="0"/>
        <pt x="83" y="-437" on="1"/>
        <pt x="22" y="-437" on="0"/>
        <pt x="-28" y="-419" on="1"/>
        <pt x="-14" y="-272" on="1"/>
        <pt x="16" y="-285" on="0"/>
        <pt x="83" y="-285" on="1"/>
        <pt x="148" y="-285" on="0"/>
        <pt x="219" y="-181" on="0"/>
        <pt x="219" y="-89" on="1"/>
        <pt x="219" y="939" on="1"/>
        <pt x="48" y="939" on="1"/>
        <pt x="48" y="1082" on="1"/>
        <pt x="219" y="1082" on="1"/>
        <pt x="219" y="1202" on="1"/>
        <pt x="221" y="1369" on="0"/>
        <pt x="396" y="1557" on="0"/>
        <pt x="557" y="1557" on="1"/>
        <pt x="616" y="1557" on="0"/>
        <pt x="700" y="1536" on="1"/>
        <pt x="678" y="1389" on="1"/>
        <pt x="640" y="1399" on="0"/>
        <pt x="580" y="1399" on="1"/>
        <pt x="409" y="1399" on="0"/>
        <pt x="405" y="1204" on="1"/>
        <pt x="405" y="1082" on="1"/>
        <pt x="608" y="1082" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          20 31 32
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          21 32
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          16 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          29
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          29 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          29
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          10 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          26 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="four" xMin="53" yMin="0" xMax="1104" yMax="1456">
      <contour>
        <pt x="902" y="489" on="1"/>
        <pt x="1104" y="489" on="1"/>
        <pt x="1104" y="338" on="1"/>
        <pt x="902" y="338" on="1"/>
        <pt x="902" y="0" on="1"/>
        <pt x="716" y="0" on="1"/>
        <pt x="716" y="338" on="1"/>
        <pt x="53" y="338" on="1"/>
        <pt x="53" y="447" on="1"/>
        <pt x="705" y="1456" on="1"/>
        <pt x="902" y="1456" on="1"/>
      </contour>
      <contour>
        <pt x="263" y="489" on="1"/>
        <pt x="716" y="489" on="1"/>
        <pt x="716" y="1203" on="1"/>
        <pt x="694" y="1163" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          1 9 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          2 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          8 6 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          13 9 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="fraction" xMin="59" yMin="110" xMax="874" yMax="1314">
      <contour>
        <pt x="163" y="110" on="1"/>
        <pt x="59" y="176" on="1"/>
        <pt x="770" y="1314" on="1"/>
        <pt x="874" y="1248" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="franc" xMin="18" yMin="0" xMax="1071" yMax="1456">
      <component glyphName="F" x="0" y="0" flags="0x204"/>
      <component glyphName="glyph00550" x="-125" y="-385" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="g" xMin="96" yMin="-426" xMax="1010" yMax="1102">
      <contour>
        <pt x="96" y="550" on="1"/>
        <pt x="96" y="803" on="0"/>
        <pt x="330" y="1102" on="0"/>
        <pt x="523" y="1102" on="1"/>
        <pt x="721" y="1102" on="0"/>
        <pt x="832" y="962" on="1"/>
        <pt x="841" y="1082" on="1"/>
        <pt x="1010" y="1082" on="1"/>
        <pt x="1010" y="26" on="1"/>
        <pt x="1010" y="-184" on="0"/>
        <pt x="761" y="-426" on="0"/>
        <pt x="551" y="-426" on="1"/>
        <pt x="434" y="-426" on="0"/>
        <pt x="210" y="-326" on="0"/>
        <pt x="151" y="-239" on="1"/>
        <pt x="247" y="-128" on="1"/>
        <pt x="366" y="-275" on="0"/>
        <pt x="538" y="-275" on="1"/>
        <pt x="673" y="-275" on="0"/>
        <pt x="824" y="-123" on="0"/>
        <pt x="824" y="15" on="1"/>
        <pt x="824" y="108" on="1"/>
        <pt x="713" y="-20" on="0"/>
        <pt x="521" y="-20" on="1"/>
        <pt x="331" y="-20" on="0"/>
        <pt x="96" y="286" on="0"/>
      </contour>
      <contour>
        <pt x="282" y="529" on="1"/>
        <pt x="282" y="346" on="0"/>
        <pt x="432" y="137" on="0"/>
        <pt x="567" y="137" on="1"/>
        <pt x="742" y="137" on="0"/>
        <pt x="824" y="296" on="1"/>
        <pt x="824" y="790" on="1"/>
        <pt x="739" y="945" on="0"/>
        <pt x="569" y="945" on="1"/>
        <pt x="434" y="945" on="0"/>
        <pt x="282" y="735" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          34 37 38
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          34
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          23 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          5 3 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          15 23 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          17 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          21 3 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          29 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          34 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="gamma" xMin="46" yMin="-416" xMax="991" yMax="1082">
      <contour>
        <pt x="522" y="276" on="1"/>
        <pt x="802" y="1082" on="1"/>
        <pt x="991" y="1082" on="1"/>
        <pt x="612" y="57" on="1"/>
        <pt x="612" y="-416" on="1"/>
        <pt x="426" y="-416" on="1"/>
        <pt x="426" y="64" on="1"/>
        <pt x="46" y="1082" on="1"/>
        <pt x="235" y="1082" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          0 9 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 7 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="gbreve" xMin="96" yMin="-426" xMax="1010" yMax="1496">
      <component glyphName="g" x="0" y="0" flags="0x204"/>
      <component glyphName="breve" x="128" y="1" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          39
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="gcircumflex" xMin="96" yMin="-426" xMax="1010" yMax="1536">
      <component glyphName="g" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="85" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          39 1
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="gdotaccent" xMin="96" yMin="-426" xMax="1010" yMax="1474">
      <component glyphName="g" x="0" y="0" flags="0x204"/>
      <component glyphName="dotaccent" x="306" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          44 1
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="germandbls" xMin="139" yMin="-20" xMax="1130" yMax="1554">
      <contour>
        <pt x="324" y="0" on="1"/>
        <pt x="139" y="0" on="1"/>
        <pt x="139" y="1111" on="1"/>
        <pt x="139" y="1319" on="0"/>
        <pt x="346" y="1554" on="0"/>
        <pt x="532" y="1554" on="1"/>
        <pt x="712" y="1554" on="0"/>
        <pt x="909" y="1375" on="0"/>
        <pt x="909" y="1216" on="1"/>
        <pt x="909" y="1091" on="0"/>
        <pt x="781" y="888" on="0"/>
        <pt x="781" y="819" on="1"/>
        <pt x="781" y="768" on="0"/>
        <pt x="856" y="673" on="0"/>
        <pt x="1044" y="529" on="0"/>
        <pt x="1130" y="393" on="0"/>
        <pt x="1130" y="317" on="1"/>
        <pt x="1130" y="158" on="0"/>
        <pt x="927" y="-20" on="0"/>
        <pt x="745" y="-20" on="1"/>
        <pt x="664" y="-20" on="0"/>
        <pt x="483" y="24" on="0"/>
        <pt x="445" y="52" on="1"/>
        <pt x="488" y="207" on="1"/>
        <pt x="537" y="175" on="0"/>
        <pt x="672" y="131" on="0"/>
        <pt x="725" y="131" on="1"/>
        <pt x="832" y="131" on="0"/>
        <pt x="945" y="225" on="0"/>
        <pt x="945" y="307" on="1"/>
        <pt x="945" y="359" on="0"/>
        <pt x="871" y="455" on="0"/>
        <pt x="682" y="602" on="0"/>
        <pt x="595" y="740" on="0"/>
        <pt x="595" y="821" on="1"/>
        <pt x="595" y="910" on="0"/>
        <pt x="734" y="1117" on="0"/>
        <pt x="734" y="1201" on="1"/>
        <pt x="734" y="1295" on="0"/>
        <pt x="630" y="1402" on="0"/>
        <pt x="542" y="1402" on="1"/>
        <pt x="324" y="1402" on="0"/>
        <pt x="324" y="1109" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          33 43 44
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 32
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          19 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          10 19 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          14 5 19
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          26 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          32 19 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          35 5 19
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          40 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00369" xMin="111" yMin="1136" xMax="713" yMax="1494">
      <contour>
        <pt x="401" y="1172" on="1"/>
        <pt x="517" y="1494" on="1"/>
        <pt x="713" y="1494" on="1"/>
        <pt x="713" y="1473" on="1"/>
        <pt x="490" y="1156" on="1"/>
        <pt x="401" y="1156" on="1"/>
      </contour>
      <contour>
        <pt x="111" y="1494" on="1"/>
        <pt x="279" y="1494" on="1"/>
        <pt x="279" y="1403" on="1"/>
        <pt x="282" y="1280" on="0"/>
        <pt x="362" y="1195" on="1"/>
        <pt x="289" y="1136" on="1"/>
        <pt x="111" y="1231" on="0"/>
        <pt x="111" y="1418" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          1
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00380"/><!-- contains no outline data -->

    <TTGlyph name="glyph00443" xMin="60" yMin="0" xMax="1270" yMax="1557">
      <component glyphName="f" x="0" y="0" flags="0x4"/>
      <component glyphName="f" x="556" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph00448" xMin="60" yMin="-20" xMax="1179" yMax="1557">
      <contour>
        <pt x="1174" y="939" on="1"/>
        <pt x="972" y="939" on="1"/>
        <pt x="972" y="268" on="1"/>
        <pt x="972" y="203" on="0"/>
        <pt x="1026" y="138" on="0"/>
        <pt x="1091" y="138" on="1"/>
        <pt x="1126" y="138" on="0"/>
        <pt x="1178" y="150" on="1"/>
        <pt x="1179" y="0" on="1"/>
        <pt x="1106" y="-20" on="0"/>
        <pt x="1036" y="-20" on="1"/>
        <pt x="912" y="-20" on="0"/>
        <pt x="786" y="130" on="0"/>
        <pt x="786" y="268" on="1"/>
        <pt x="786" y="939" on="1"/>
        <pt x="589" y="939" on="1"/>
        <pt x="589" y="1082" on="1"/>
        <pt x="786" y="1082" on="1"/>
        <pt x="786" y="1369" on="1"/>
        <pt x="725" y="1397" on="0"/>
        <pt x="623" y="1404" on="1"/>
        <pt x="599" y="1405" on="1"/>
        <pt x="416" y="1405" on="0"/>
        <pt x="416" y="1184" on="1"/>
        <pt x="416" y="0" on="1"/>
        <pt x="231" y="0" on="1"/>
        <pt x="231" y="939" on="1"/>
        <pt x="60" y="939" on="1"/>
        <pt x="60" y="1082" on="1"/>
        <pt x="231" y="1082" on="1"/>
        <pt x="231" y="1194" on="1"/>
        <pt x="231" y="1367" on="0"/>
        <pt x="410" y="1557" on="0"/>
        <pt x="570" y="1557" on="1"/>
        <pt x="663" y="1557" on="0"/>
        <pt x="882" y="1500" on="0"/>
        <pt x="972" y="1456" on="1"/>
        <pt x="972" y="1082" on="1"/>
        <pt x="1174" y="1082" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          33
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          33 32
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          29
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          29 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          24
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          24 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          29
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          37
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          1 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          5 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          33
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          21 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          26
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00449" xMin="95" yMin="-20" xMax="1620" yMax="1553">
      <contour>
        <pt x="1615" y="939" on="1"/>
        <pt x="1413" y="939" on="1"/>
        <pt x="1413" y="297" on="1"/>
        <pt x="1413" y="138" on="0"/>
        <pt x="1532" y="138" on="1"/>
        <pt x="1567" y="138" on="0"/>
        <pt x="1619" y="150" on="1"/>
        <pt x="1620" y="0" on="1"/>
        <pt x="1543" y="-20" on="0"/>
        <pt x="1477" y="-20" on="1"/>
        <pt x="1359" y="-20" on="0"/>
        <pt x="1227" y="146" on="0"/>
        <pt x="1227" y="297" on="1"/>
        <pt x="1227" y="939" on="1"/>
        <pt x="1039" y="939" on="1"/>
        <pt x="1039" y="1082" on="1"/>
        <pt x="1227" y="1082" on="1"/>
        <pt x="1227" y="1167" on="1"/>
        <pt x="1227" y="1281" on="0"/>
        <pt x="1125" y="1398" on="0"/>
        <pt x="1027" y="1398" on="1"/>
        <pt x="939" y="1398" on="0"/>
        <pt x="847" y="1310" on="0"/>
        <pt x="847" y="1240" on="1"/>
        <pt x="847" y="1181" on="0"/>
        <pt x="878" y="1076" on="0"/>
        <pt x="915" y="964" on="0"/>
        <pt x="945" y="840" on="0"/>
        <pt x="945" y="764" on="1"/>
        <pt x="759" y="764" on="1"/>
        <pt x="759" y="840" on="0"/>
        <pt x="630" y="950" on="0"/>
        <pt x="532" y="950" on="1"/>
        <pt x="431" y="950" on="0"/>
        <pt x="317" y="862" on="0"/>
        <pt x="317" y="791" on="1"/>
        <pt x="317" y="724" on="0"/>
        <pt x="423" y="656" on="0"/>
        <pt x="700" y="594" on="0"/>
        <pt x="872" y="508" on="0"/>
        <pt x="955" y="387" on="0"/>
        <pt x="955" y="300" on="1"/>
        <pt x="955" y="155" on="0"/>
        <pt x="723" y="-20" on="0"/>
        <pt x="538" y="-20" on="1"/>
        <pt x="408" y="-20" on="0"/>
        <pt x="208" y="72" on="0"/>
        <pt x="95" y="237" on="0"/>
        <pt x="95" y="333" on="1"/>
        <pt x="280" y="333" on="1"/>
        <pt x="285" y="240" on="0"/>
        <pt x="424" y="131" on="0"/>
        <pt x="538" y="131" on="1"/>
        <pt x="643" y="131" on="0"/>
        <pt x="770" y="216" on="0"/>
        <pt x="770" y="287" on="1"/>
        <pt x="770" y="362" on="0"/>
        <pt x="657" y="445" on="0"/>
        <pt x="376" y="505" on="0"/>
        <pt x="211" y="589" on="0"/>
        <pt x="132" y="705" on="0"/>
        <pt x="132" y="785" on="1"/>
        <pt x="132" y="918" on="0"/>
        <pt x="357" y="1102" on="0"/>
        <pt x="532" y="1102" on="1"/>
        <pt x="628" y="1102" on="0"/>
        <pt x="714" y="1072" on="1"/>
        <pt x="670" y="1182" on="0"/>
        <pt x="670" y="1264" on="1"/>
        <pt x="670" y="1388" on="0"/>
        <pt x="872" y="1553" on="0"/>
        <pt x="1027" y="1553" on="1"/>
        <pt x="1212" y="1553" on="0"/>
        <pt x="1413" y="1354" on="0"/>
        <pt x="1413" y="1159" on="1"/>
        <pt x="1413" y="1082" on="1"/>
        <pt x="1615" y="1082" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          22 77 78
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          71
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          71 32
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          15 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          75
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          75 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          64
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          64 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          44
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          44 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          75
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          1 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          4 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          71
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          20 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          29 64 44
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          64
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          32 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          58 44 64
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          58
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          37 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          49 44 64
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          44
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          52 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00453" xMin="66" yMin="0" xMax="683" yMax="800">
      <contour>
        <pt x="683" y="0" on="1"/>
        <pt x="84" y="0" on="1"/>
        <pt x="84" y="108" on="1"/>
        <pt x="384" y="390" on="1"/>
        <pt x="493" y="492" on="0"/>
        <pt x="493" y="561" on="1"/>
        <pt x="493" y="610" on="0"/>
        <pt x="429" y="671" on="0"/>
        <pt x="369" y="671" on="1"/>
        <pt x="294" y="671" on="0"/>
        <pt x="223" y="595" on="0"/>
        <pt x="223" y="538" on="1"/>
        <pt x="66" y="538" on="1"/>
        <pt x="66" y="652" on="0"/>
        <pt x="233" y="800" on="0"/>
        <pt x="497" y="800" on="0"/>
        <pt x="651" y="673" on="0"/>
        <pt x="651" y="563" on="1"/>
        <pt x="651" y="459" on="0"/>
        <pt x="544" y="352" on="1"/>
        <pt x="460" y="273" on="1"/>
        <pt x="284" y="128" on="1"/>
        <pt x="683" y="128" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          8 23 24
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          14 24
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          21 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          20 21 14
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          3 14 20
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          8 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00454" xMin="122" yMin="0" xMax="495" yMax="789">
      <contour>
        <pt x="495" y="0" on="1"/>
        <pt x="338" y="0" on="1"/>
        <pt x="338" y="601" on="1"/>
        <pt x="122" y="544" on="1"/>
        <pt x="122" y="672" on="1"/>
        <pt x="477" y="789" on="1"/>
        <pt x="495" y="789" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 24
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          4 5 1
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          3 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00455" xMin="80" yMin="-11" xMax="669" yMax="800">
      <contour>
        <pt x="669" y="325" on="1"/>
        <pt x="669" y="163" on="0"/>
        <pt x="517" y="-11" on="0"/>
        <pt x="376" y="-11" on="1"/>
        <pt x="237" y="-11" on="0"/>
        <pt x="81" y="161" on="0"/>
        <pt x="80" y="321" on="1"/>
        <pt x="80" y="463" on="1"/>
        <pt x="80" y="626" on="0"/>
        <pt x="235" y="800" on="0"/>
        <pt x="374" y="800" on="1"/>
        <pt x="515" y="800" on="0"/>
        <pt x="667" y="628" on="0"/>
        <pt x="669" y="471" on="1"/>
      </contour>
      <contour>
        <pt x="512" y="478" on="1"/>
        <pt x="512" y="670" on="0"/>
        <pt x="374" y="670" on="1"/>
        <pt x="241" y="670" on="0"/>
        <pt x="237" y="490" on="1"/>
        <pt x="237" y="311" on="1"/>
        <pt x="237" y="117" on="0"/>
        <pt x="376" y="117" on="1"/>
        <pt x="508" y="117" on="0"/>
        <pt x="512" y="298" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          3 24 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 24
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          16 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          21 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00456" xMin="85" yMin="-6" xMax="922" yMax="1181">
      <contour>
        <pt x="735" y="492" on="1"/>
        <pt x="634" y="382" on="0"/>
        <pt x="463" y="382" on="1"/>
        <pt x="289" y="382" on="0"/>
        <pt x="85" y="597" on="0"/>
        <pt x="85" y="773" on="1"/>
        <pt x="85" y="953" on="0"/>
        <pt x="314" y="1181" on="0"/>
        <pt x="500" y="1181" on="1"/>
        <pt x="698" y="1181" on="0"/>
        <pt x="922" y="927" on="0"/>
        <pt x="922" y="701" on="1"/>
        <pt x="922" y="638" on="1"/>
        <pt x="922" y="319" on="0"/>
        <pt x="614" y="-1" on="0"/>
        <pt x="314" y="-6" on="1"/>
        <pt x="273" y="-6" on="1"/>
        <pt x="273" y="146" on="1"/>
        <pt x="308" y="146" on="1"/>
        <pt x="712" y="153" on="0"/>
      </contour>
      <contour>
        <pt x="497" y="529" on="1"/>
        <pt x="576" y="529" on="0"/>
        <pt x="707" y="608" on="0"/>
        <pt x="737" y="672" on="1"/>
        <pt x="737" y="738" on="1"/>
        <pt x="737" y="870" on="0"/>
        <pt x="605" y="1028" on="0"/>
        <pt x="500" y="1028" on="1"/>
        <pt x="396" y="1028" on="0"/>
        <pt x="269" y="885" on="0"/>
        <pt x="269" y="777" on="1"/>
        <pt x="269" y="668" on="0"/>
        <pt x="393" y="529" on="0"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          16 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          2 16 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          17 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          20 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          27 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00457" xMin="96" yMin="-16" xMax="941" yMax="1181">
      <contour>
        <pt x="912" y="858" on="1"/>
        <pt x="912" y="772" on="0"/>
        <pt x="813" y="637" on="0"/>
        <pt x="728" y="599" on="1"/>
        <pt x="826" y="561" on="0"/>
        <pt x="941" y="414" on="0"/>
        <pt x="941" y="316" on="1"/>
        <pt x="941" y="165" on="0"/>
        <pt x="709" y="-16" on="0"/>
        <pt x="329" y="-16" on="0"/>
        <pt x="96" y="163" on="0"/>
        <pt x="96" y="316" on="1"/>
        <pt x="96" y="415" on="0"/>
        <pt x="209" y="561" on="0"/>
        <pt x="307" y="600" on="1"/>
        <pt x="222" y="638" on="0"/>
        <pt x="126" y="772" on="0"/>
        <pt x="126" y="858" on="1"/>
        <pt x="126" y="1006" on="0"/>
        <pt x="340" y="1181" on="0"/>
        <pt x="694" y="1181" on="0"/>
        <pt x="912" y="1006" on="0"/>
      </contour>
      <contour>
        <pt x="756" y="326" on="1"/>
        <pt x="756" y="412" on="0"/>
        <pt x="625" y="522" on="0"/>
        <pt x="517" y="522" on="1"/>
        <pt x="410" y="522" on="0"/>
        <pt x="282" y="414" on="0"/>
        <pt x="282" y="326" on="1"/>
        <pt x="282" y="235" on="0"/>
        <pt x="409" y="135" on="0"/>
        <pt x="519" y="135" on="1"/>
        <pt x="628" y="135" on="0"/>
        <pt x="756" y="238" on="0"/>
      </contour>
      <contour>
        <pt x="726" y="851" on="1"/>
        <pt x="726" y="929" on="0"/>
        <pt x="610" y="1029" on="0"/>
        <pt x="517" y="1029" on="1"/>
        <pt x="423" y="1029" on="0"/>
        <pt x="313" y="932" on="0"/>
        <pt x="313" y="851" on="1"/>
        <pt x="313" y="771" on="0"/>
        <pt x="424" y="673" on="0"/>
        <pt x="614" y="673" on="0"/>
        <pt x="726" y="772" on="0"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          19 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          42
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          42
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          223 42 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          31 42 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          25 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          3 42 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          14 25 42
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          31 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          37 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00458" xMin="66" yMin="0" xMax="960" yMax="1165">
      <contour>
        <pt x="960" y="1060" on="1"/>
        <pt x="424" y="0" on="1"/>
        <pt x="229" y="0" on="1"/>
        <pt x="764" y="1012" on="1"/>
        <pt x="66" y="1012" on="1"/>
        <pt x="66" y="1165" on="1"/>
        <pt x="960" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          1 7 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          3 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 5 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00459" xMin="114" yMin="-16" xMax="955" yMax="1171">
      <contour>
        <pt x="768" y="1171" on="1"/>
        <pt x="768" y="1015" on="1"/>
        <pt x="738" y="1015" on="1"/>
        <pt x="538" y="1012" on="0"/>
        <pt x="314" y="828" on="0"/>
        <pt x="300" y="651" on="1"/>
        <pt x="352" y="708" on="0"/>
        <pt x="502" y="771" on="0"/>
        <pt x="580" y="771" on="1"/>
        <pt x="754" y="771" on="0"/>
        <pt x="955" y="556" on="0"/>
        <pt x="955" y="382" on="1"/>
        <pt x="955" y="206" on="0"/>
        <pt x="732" y="-16" on="0"/>
        <pt x="542" y="-16" on="1"/>
        <pt x="348" y="-16" on="0"/>
        <pt x="114" y="235" on="0"/>
        <pt x="114" y="447" on="1"/>
        <pt x="114" y="522" on="1"/>
        <pt x="114" y="841" on="0"/>
        <pt x="434" y="1171" on="0"/>
        <pt x="750" y="1171" on="1"/>
      </contour>
      <contour>
        <pt x="542" y="619" on="1"/>
        <pt x="462" y="619" on="0"/>
        <pt x="331" y="542" on="0"/>
        <pt x="299" y="478" on="1"/>
        <pt x="299" y="438" on="1"/>
        <pt x="299" y="300" on="0"/>
        <pt x="436" y="136" on="0"/>
        <pt x="646" y="136" on="0"/>
        <pt x="772" y="269" on="0"/>
        <pt x="772" y="485" on="0"/>
        <pt x="649" y="619" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          7 33 34
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          14 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          1 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          8 14 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          5 8 14
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          22 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          28 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00460" xMin="128" yMin="-16" xMax="965" yMax="1165">
      <contour>
        <pt x="164" y="579" on="1"/>
        <pt x="233" y="1165" on="1"/>
        <pt x="913" y="1165" on="1"/>
        <pt x="913" y="1003" on="1"/>
        <pt x="389" y="1003" on="1"/>
        <pt x="352" y="714" on="1"/>
        <pt x="451" y="762" on="0"/>
        <pt x="566" y="762" on="1"/>
        <pt x="750" y="762" on="0"/>
        <pt x="965" y="552" on="0"/>
        <pt x="965" y="372" on="1"/>
        <pt x="965" y="194" on="0"/>
        <pt x="742" y="-16" on="0"/>
        <pt x="546" y="-16" on="1"/>
        <pt x="375" y="-16" on="0"/>
        <pt x="141" y="161" on="0"/>
        <pt x="128" y="312" on="1"/>
        <pt x="306" y="312" on="1"/>
        <pt x="320" y="221" on="0"/>
        <pt x="448" y="135" on="0"/>
        <pt x="546" y="135" on="1"/>
        <pt x="658" y="135" on="0"/>
        <pt x="779" y="265" on="0"/>
        <pt x="779" y="378" on="1"/>
        <pt x="779" y="484" on="0"/>
        <pt x="639" y="611" on="0"/>
        <pt x="524" y="611" on="1"/>
        <pt x="419" y="611" on="0"/>
        <pt x="353" y="569" on="1"/>
        <pt x="312" y="542" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          26 30 31
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          3 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          7 1 13
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          26 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          5 7 26
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          20 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          29
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00461" xMin="48" yMin="0" xMax="996" yMax="1165">
      <contour>
        <pt x="821" y="413" on="1"/>
        <pt x="996" y="413" on="1"/>
        <pt x="996" y="262" on="1"/>
        <pt x="821" y="262" on="1"/>
        <pt x="821" y="0" on="1"/>
        <pt x="635" y="0" on="1"/>
        <pt x="635" y="262" on="1"/>
        <pt x="51" y="262" on="1"/>
        <pt x="48" y="377" on="1"/>
        <pt x="626" y="1165" on="1"/>
        <pt x="821" y="1165" on="1"/>
      </contour>
      <contour>
        <pt x="246" y="413" on="1"/>
        <pt x="635" y="413" on="1"/>
        <pt x="635" y="921" on="1"/>
        <pt x="609" y="874" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          14 15 16
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          1 9 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          2 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          13 9 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00462" xMin="78" yMin="-16" xMax="927" yMax="1181">
      <contour>
        <pt x="352" y="667" on="1"/>
        <pt x="474" y="667" on="1"/>
        <pt x="592" y="667" on="0"/>
        <pt x="721" y="766" on="0"/>
        <pt x="721" y="850" on="1"/>
        <pt x="721" y="933" on="0"/>
        <pt x="613" y="1029" on="0"/>
        <pt x="501" y="1029" on="1"/>
        <pt x="403" y="1029" on="0"/>
        <pt x="276" y="938" on="0"/>
        <pt x="276" y="861" on="1"/>
        <pt x="91" y="861" on="1"/>
        <pt x="91" y="1001" on="0"/>
        <pt x="321" y="1181" on="0"/>
        <pt x="500" y="1181" on="1"/>
        <pt x="688" y="1181" on="0"/>
        <pt x="906" y="1006" on="0"/>
        <pt x="906" y="850" on="1"/>
        <pt x="906" y="771" on="0"/>
        <pt x="805" y="634" on="0"/>
        <pt x="714" y="597" on="1"/>
        <pt x="927" y="533" on="0"/>
        <pt x="927" y="324" on="1"/>
        <pt x="927" y="170" on="0"/>
        <pt x="694" y="-16" on="0"/>
        <pt x="501" y="-16" on="1"/>
        <pt x="312" y="-16" on="0"/>
        <pt x="78" y="163" on="0"/>
        <pt x="78" y="313" on="1"/>
        <pt x="263" y="313" on="1"/>
        <pt x="263" y="234" on="0"/>
        <pt x="394" y="135" on="0"/>
        <pt x="502" y="135" on="1"/>
        <pt x="614" y="135" on="0"/>
        <pt x="741" y="233" on="0"/>
        <pt x="741" y="324" on="1"/>
        <pt x="741" y="519" on="0"/>
        <pt x="465" y="519" on="1"/>
        <pt x="352" y="519" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          32 39 40
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          14 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          25
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          25 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          1 14 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          191 1 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          175 1 191 1 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 5 values pushed */
          223 1 239 1 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          31 1 47 1 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          111 1 127 1 2
          DELTAP3[ ]	/* DeltaExceptionP3 */
          PUSH[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          7 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          10
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          37 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          20 37 1
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          29
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          32 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00463" xMin="78" yMin="0" xMax="970" yMax="1181">
      <contour>
        <pt x="970" y="0" on="1"/>
        <pt x="105" y="0" on="1"/>
        <pt x="105" y="131" on="1"/>
        <pt x="532" y="544" on="1"/>
        <pt x="635" y="638" on="0"/>
        <pt x="728" y="777" on="0"/>
        <pt x="728" y="842" on="1"/>
        <pt x="728" y="924" on="0"/>
        <pt x="612" y="1029" on="0"/>
        <pt x="518" y="1029" on="1"/>
        <pt x="397" y="1029" on="0"/>
        <pt x="264" y="917" on="0"/>
        <pt x="264" y="810" on="1"/>
        <pt x="78" y="810" on="1"/>
        <pt x="78" y="975" on="0"/>
        <pt x="323" y="1181" on="0"/>
        <pt x="518" y="1181" on="1"/>
        <pt x="700" y="1181" on="0"/>
        <pt x="914" y="995" on="0"/>
        <pt x="914" y="846" on="1"/>
        <pt x="914" y="765" on="0"/>
        <pt x="815" y="591" on="0"/>
        <pt x="660" y="430" on="1"/>
        <pt x="332" y="151" on="1"/>
        <pt x="970" y="151" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          9 25 26
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          16 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          23 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          3 16 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          9 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          22 0 16
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00464" xMin="152" yMin="0" xMax="669" yMax="1168">
      <contour>
        <pt x="669" y="0" on="1"/>
        <pt x="483" y="0" on="1"/>
        <pt x="483" y="943" on="1"/>
        <pt x="152" y="844" on="1"/>
        <pt x="152" y="1003" on="1"/>
        <pt x="643" y="1168" on="1"/>
        <pt x="669" y="1168" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          1 7 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          4 0 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          3 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          2 3 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00465" xMin="99" yMin="-16" xMax="939" yMax="1181">
      <contour>
        <pt x="939" y="497" on="1"/>
        <pt x="939" y="249" on="0"/>
        <pt x="723" y="-16" on="0"/>
        <pt x="520" y="-16" on="1"/>
        <pt x="319" y="-16" on="0"/>
        <pt x="101" y="245" on="0"/>
        <pt x="99" y="489" on="1"/>
        <pt x="99" y="671" on="1"/>
        <pt x="99" y="920" on="0"/>
        <pt x="316" y="1181" on="0"/>
        <pt x="518" y="1181" on="1"/>
        <pt x="721" y="1181" on="0"/>
        <pt x="936" y="923" on="0"/>
        <pt x="939" y="684" on="1"/>
      </contour>
      <contour>
        <pt x="753" y="699" on="1"/>
        <pt x="753" y="1028" on="0"/>
        <pt x="518" y="1028" on="1"/>
        <pt x="284" y="1028" on="0"/>
        <pt x="284" y="695" on="1"/>
        <pt x="284" y="470" on="1"/>
        <pt x="284" y="303" on="0"/>
        <pt x="406" y="135" on="0"/>
        <pt x="520" y="135" on="1"/>
        <pt x="753" y="135" on="0"/>
        <pt x="753" y="474" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          3 25 26
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          16 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          22 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00466" xMin="71" yMin="0" xMax="992" yMax="1165">
      <contour>
        <pt x="303" y="151" on="1"/>
        <pt x="992" y="151" on="1"/>
        <pt x="992" y="0" on="1"/>
        <pt x="71" y="0" on="1"/>
        <pt x="71" y="124" on="1"/>
        <pt x="735" y="1012" on="1"/>
        <pt x="80" y="1012" on="1"/>
        <pt x="80" y="1165" on="1"/>
        <pt x="968" y="1165" on="1"/>
        <pt x="968" y="1044" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          4 0 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          5 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          9 5 7
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00467" xMin="13" yMin="0" xMax="1052" yMax="1165">
      <contour>
        <pt x="532" y="586" on="1"/>
        <pt x="844" y="1165" on="1"/>
        <pt x="1052" y="1165" on="1"/>
        <pt x="622" y="407" on="1"/>
        <pt x="622" y="0" on="1"/>
        <pt x="437" y="0" on="1"/>
        <pt x="437" y="418" on="1"/>
        <pt x="13" y="1165" on="1"/>
        <pt x="221" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 1 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00468" xMin="38" yMin="0" xMax="1073" yMax="1165">
      <contour>
        <pt x="552" y="730" on="1"/>
        <pt x="839" y="1165" on="1"/>
        <pt x="1059" y="1165" on="1"/>
        <pt x="664" y="587" on="1"/>
        <pt x="1073" y="0" on="1"/>
        <pt x="853" y="0" on="1"/>
        <pt x="554" y="443" on="1"/>
        <pt x="258" y="0" on="1"/>
        <pt x="38" y="0" on="1"/>
        <pt x="444" y="587" on="1"/>
        <pt x="47" y="1165" on="1"/>
        <pt x="266" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 1 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          6 1 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          3 0 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          9 6 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00469" xMin="49" yMin="0" xMax="1521" yMax="1165">
      <contour>
        <pt x="431" y="294" on="1"/>
        <pt x="442" y="214" on="1"/>
        <pt x="457" y="278" on="1"/>
        <pt x="705" y="1165" on="1"/>
        <pt x="870" y="1165" on="1"/>
        <pt x="1114" y="275" on="1"/>
        <pt x="1127" y="216" on="1"/>
        <pt x="1139" y="296" on="1"/>
        <pt x="1337" y="1165" on="1"/>
        <pt x="1521" y="1165" on="1"/>
        <pt x="1223" y="0" on="1"/>
        <pt x="1049" y="0" on="1"/>
        <pt x="789" y="917" on="1"/>
        <pt x="788" y="922" on="1"/>
        <pt x="787" y="917" on="1"/>
        <pt x="519" y="0" on="1"/>
        <pt x="346" y="0" on="1"/>
        <pt x="49" y="1165" on="1"/>
        <pt x="232" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          14 19 20
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          17 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          15 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          1 3 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          6 3 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          13 3 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00470" xMin="20" yMin="0" xMax="1107" yMax="1165">
      <contour>
        <pt x="538" y="292" on="1"/>
        <pt x="563" y="198" on="1"/>
        <pt x="589" y="290" on="1"/>
        <pt x="909" y="1165" on="1"/>
        <pt x="1107" y="1165" on="1"/>
        <pt x="650" y="0" on="1"/>
        <pt x="477" y="0" on="1"/>
        <pt x="20" y="1165" on="1"/>
        <pt x="219" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          1 3 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00471" xMin="116" yMin="-16" xMax="1034" yMax="1165">
      <contour>
        <pt x="1034" y="1165" on="1"/>
        <pt x="1034" y="385" on="1"/>
        <pt x="1034" y="203" on="0"/>
        <pt x="784" y="-16" on="0"/>
        <pt x="575" y="-16" on="1"/>
        <pt x="365" y="-16" on="0"/>
        <pt x="119" y="195" on="0"/>
        <pt x="116" y="377" on="1"/>
        <pt x="116" y="1165" on="1"/>
        <pt x="299" y="1165" on="1"/>
        <pt x="299" y="385" on="1"/>
        <pt x="299" y="264" on="0"/>
        <pt x="442" y="135" on="0"/>
        <pt x="575" y="135" on="1"/>
        <pt x="706" y="135" on="0"/>
        <pt x="849" y="262" on="0"/>
        <pt x="849" y="385" on="1"/>
        <pt x="849" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          4 18 19
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          13 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00472" xMin="40" yMin="0" xMax="1021" yMax="1165">
      <contour>
        <pt x="1021" y="1012" on="1"/>
        <pt x="622" y="1012" on="1"/>
        <pt x="622" y="0" on="1"/>
        <pt x="437" y="0" on="1"/>
        <pt x="437" y="1012" on="1"/>
        <pt x="40" y="1012" on="1"/>
        <pt x="40" y="1165" on="1"/>
        <pt x="1021" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00473" xMin="67" yMin="-16" xMax="989" yMax="1181">
      <contour>
        <pt x="803" y="298" on="1"/>
        <pt x="803" y="378" on="0"/>
        <pt x="682" y="466" on="0"/>
        <pt x="388" y="540" on="0"/>
        <pt x="302" y="583" on="1"/>
        <pt x="107" y="681" on="0"/>
        <pt x="107" y="860" on="1"/>
        <pt x="107" y="1003" on="0"/>
        <pt x="350" y="1181" on="0"/>
        <pt x="541" y="1181" on="1"/>
        <pt x="737" y="1181" on="0"/>
        <pt x="986" y="981" on="0"/>
        <pt x="986" y="825" on="1"/>
        <pt x="801" y="825" on="1"/>
        <pt x="801" y="923" on="0"/>
        <pt x="660" y="1030" on="0"/>
        <pt x="539" y="1030" on="1"/>
        <pt x="426" y="1030" on="0"/>
        <pt x="292" y="941" on="0"/>
        <pt x="292" y="861" on="1"/>
        <pt x="292" y="796" on="0"/>
        <pt x="415" y="708" on="0"/>
        <pt x="727" y="628" on="0"/>
        <pt x="903" y="527" on="0"/>
        <pt x="989" y="391" on="0"/>
        <pt x="989" y="300" on="1"/>
        <pt x="989" y="153" on="0"/>
        <pt x="746" y="-16" on="0"/>
        <pt x="547" y="-16" on="1"/>
        <pt x="340" y="-16" on="0"/>
        <pt x="67" y="187" on="0"/>
        <pt x="67" y="349" on="1"/>
        <pt x="253" y="349" on="1"/>
        <pt x="253" y="247" on="0"/>
        <pt x="407" y="133" on="0"/>
        <pt x="547" y="133" on="1"/>
        <pt x="673" y="133" on="0"/>
        <pt x="803" y="224" on="0"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          28
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          28 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          2 28 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          16 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          22 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          32
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          35 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00474" xMin="138" yMin="0" xMax="1061" yMax="1165">
      <contour>
        <pt x="602" y="449" on="1"/>
        <pt x="323" y="449" on="1"/>
        <pt x="323" y="0" on="1"/>
        <pt x="138" y="0" on="1"/>
        <pt x="138" y="1165" on="1"/>
        <pt x="564" y="1165" on="1"/>
        <pt x="777" y="1165" on="0"/>
        <pt x="1008" y="979" on="0"/>
        <pt x="1008" y="809" on="1"/>
        <pt x="1008" y="581" on="0"/>
        <pt x="773" y="492" on="1"/>
        <pt x="1061" y="10" on="1"/>
        <pt x="1061" y="0" on="1"/>
        <pt x="863" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="323" y="600" on="1"/>
        <pt x="569" y="600" on="1"/>
        <pt x="686" y="600" on="0"/>
        <pt x="823" y="709" on="0"/>
        <pt x="823" y="802" on="1"/>
        <pt x="823" y="902" on="0"/>
        <pt x="689" y="1012" on="0"/>
        <pt x="563" y="1012" on="1"/>
        <pt x="323" y="1012" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          21 23 24
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          15 4 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          10 0 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          21 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00475" xMin="89" yMin="-202" xMax="1111" yMax="1181">
      <contour>
        <pt x="1109" y="548" on="1"/>
        <pt x="1109" y="382" on="0"/>
        <pt x="997" y="139" on="0"/>
        <pt x="895" y="69" on="1"/>
        <pt x="1111" y="-91" on="1"/>
        <pt x="987" y="-202" on="1"/>
        <pt x="724" y="-3" on="1"/>
        <pt x="670" y="-16" on="0"/>
        <pt x="600" y="-16" on="1"/>
        <pt x="372" y="-16" on="0"/>
        <pt x="89" y="289" on="0"/>
        <pt x="89" y="553" on="1"/>
        <pt x="89" y="615" on="1"/>
        <pt x="89" y="784" on="0"/>
        <pt x="216" y="1043" on="0"/>
        <pt x="448" y="1181" on="0"/>
        <pt x="598" y="1181" on="1"/>
        <pt x="832" y="1181" on="0"/>
        <pt x="1109" y="874" on="0"/>
        <pt x="1109" y="611" on="1"/>
      </contour>
      <contour>
        <pt x="926" y="617" on="1"/>
        <pt x="926" y="815" on="0"/>
        <pt x="754" y="1025" on="0"/>
        <pt x="598" y="1025" on="1"/>
        <pt x="450" y="1025" on="0"/>
        <pt x="278" y="818" on="0"/>
        <pt x="274" y="633" on="1"/>
        <pt x="274" y="548" on="1"/>
        <pt x="274" y="354" on="0"/>
        <pt x="448" y="138" on="0"/>
        <pt x="600" y="138" on="1"/>
        <pt x="756" y="138" on="0"/>
        <pt x="926" y="349" on="0"/>
        <pt x="926" y="548" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          8 34 35
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          16 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          3 8 16
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          23 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          30 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00476" xMin="138" yMin="0" xMax="1051" yMax="1165">
      <contour>
        <pt x="323" y="438" on="1"/>
        <pt x="323" y="0" on="1"/>
        <pt x="138" y="0" on="1"/>
        <pt x="138" y="1165" on="1"/>
        <pt x="605" y="1165" on="1"/>
        <pt x="809" y="1165" on="0"/>
        <pt x="1051" y="966" on="0"/>
        <pt x="1051" y="798" on="1"/>
        <pt x="1051" y="628" on="0"/>
        <pt x="817" y="438" on="0"/>
        <pt x="603" y="438" on="1"/>
      </contour>
      <contour>
        <pt x="323" y="590" on="1"/>
        <pt x="605" y="590" on="1"/>
        <pt x="729" y="590" on="0"/>
        <pt x="865" y="696" on="0"/>
        <pt x="865" y="796" on="1"/>
        <pt x="865" y="892" on="0"/>
        <pt x="729" y="1011" on="0"/>
        <pt x="610" y="1012" on="1"/>
        <pt x="323" y="1012" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          10 20 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          11 3 1
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          18 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00477" xMin="96" yMin="-16" xMax="1114" yMax="1181">
      <contour>
        <pt x="1114" y="548" on="1"/>
        <pt x="1114" y="287" on="0"/>
        <pt x="838" y="-16" on="0"/>
        <pt x="606" y="-16" on="1"/>
        <pt x="377" y="-16" on="0"/>
        <pt x="96" y="290" on="0"/>
        <pt x="96" y="553" on="1"/>
        <pt x="96" y="615" on="1"/>
        <pt x="96" y="873" on="0"/>
        <pt x="375" y="1181" on="0"/>
        <pt x="604" y="1181" on="1"/>
        <pt x="837" y="1181" on="0"/>
        <pt x="1112" y="877" on="0"/>
        <pt x="1114" y="622" on="1"/>
      </contour>
      <contour>
        <pt x="931" y="617" on="1"/>
        <pt x="931" y="815" on="0"/>
        <pt x="759" y="1025" on="0"/>
        <pt x="604" y="1025" on="1"/>
        <pt x="454" y="1025" on="0"/>
        <pt x="279" y="811" on="0"/>
        <pt x="279" y="614" on="1"/>
        <pt x="279" y="548" on="1"/>
        <pt x="279" y="353" on="0"/>
        <pt x="455" y="138" on="0"/>
        <pt x="606" y="138" on="1"/>
        <pt x="762" y="138" on="0"/>
        <pt x="931" y="349" on="0"/>
        <pt x="931" y="548" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          3 28 29
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          17 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          24 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00478" xMin="138" yMin="0" xMax="1112" yMax="1165">
      <contour>
        <pt x="1112" y="0" on="1"/>
        <pt x="928" y="0" on="1"/>
        <pt x="323" y="876" on="1"/>
        <pt x="323" y="0" on="1"/>
        <pt x="138" y="0" on="1"/>
        <pt x="138" y="1165" on="1"/>
        <pt x="323" y="1165" on="1"/>
        <pt x="928" y="288" on="1"/>
        <pt x="928" y="1165" on="1"/>
        <pt x="1112" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          2 5 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          7 5 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00479" xMin="138" yMin="0" xMax="1399" yMax="1165">
      <contour>
        <pt x="378" y="1165" on="1"/>
        <pt x="769" y="254" on="1"/>
        <pt x="1158" y="1165" on="1"/>
        <pt x="1399" y="1165" on="1"/>
        <pt x="1399" y="0" on="1"/>
        <pt x="1215" y="0" on="1"/>
        <pt x="1215" y="401" on="1"/>
        <pt x="1234" y="934" on="1"/>
        <pt x="836" y="0" on="1"/>
        <pt x="700" y="0" on="1"/>
        <pt x="303" y="930" on="1"/>
        <pt x="322" y="401" on="1"/>
        <pt x="322" y="0" on="1"/>
        <pt x="138" y="0" on="1"/>
        <pt x="138" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          1 15 16
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          1 0 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          7 0 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          10 0 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00480" xMin="138" yMin="0" xMax="907" yMax="1165">
      <contour>
        <pt x="323" y="151" on="1"/>
        <pt x="907" y="151" on="1"/>
        <pt x="907" y="0" on="1"/>
        <pt x="138" y="0" on="1"/>
        <pt x="138" y="1165" on="1"/>
        <pt x="323" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00481" xMin="138" yMin="0" xMax="1111" yMax="1165">
      <contour>
        <pt x="470" y="519" on="1"/>
        <pt x="323" y="377" on="1"/>
        <pt x="323" y="0" on="1"/>
        <pt x="138" y="0" on="1"/>
        <pt x="138" y="1165" on="1"/>
        <pt x="323" y="1165" on="1"/>
        <pt x="323" y="610" on="1"/>
        <pt x="453" y="754" on="1"/>
        <pt x="850" y="1165" on="1"/>
        <pt x="1077" y="1165" on="1"/>
        <pt x="598" y="646" on="1"/>
        <pt x="1111" y="0" on="1"/>
        <pt x="886" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 2 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          6 2 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          10 2 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00482" xMin="43" yMin="-16" xMax="845" yMax="1165">
      <contour>
        <pt x="658" y="1165" on="1"/>
        <pt x="845" y="1165" on="1"/>
        <pt x="845" y="338" on="1"/>
        <pt x="845" y="181" on="0"/>
        <pt x="633" y="-16" on="0"/>
        <pt x="456" y="-16" on="1"/>
        <pt x="262" y="-16" on="0"/>
        <pt x="43" y="167" on="0"/>
        <pt x="43" y="331" on="1"/>
        <pt x="229" y="331" on="1"/>
        <pt x="229" y="237" on="0"/>
        <pt x="342" y="135" on="0"/>
        <pt x="456" y="135" on="1"/>
        <pt x="548" y="135" on="0"/>
        <pt x="658" y="244" on="0"/>
        <pt x="658" y="339" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          5 16 17
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          12 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00483" xMin="151" yMin="0" xMax="337" yMax="1165">
      <contour>
        <pt x="337" y="0" on="1"/>
        <pt x="151" y="0" on="1"/>
        <pt x="151" y="1165" on="1"/>
        <pt x="337" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00484" xMin="138" yMin="0" xMax="1112" yMax="1165">
      <contour>
        <pt x="1112" y="0" on="1"/>
        <pt x="927" y="0" on="1"/>
        <pt x="927" y="498" on="1"/>
        <pt x="323" y="498" on="1"/>
        <pt x="323" y="0" on="1"/>
        <pt x="138" y="0" on="1"/>
        <pt x="138" y="1165" on="1"/>
        <pt x="323" y="1165" on="1"/>
        <pt x="323" y="650" on="1"/>
        <pt x="927" y="650" on="1"/>
        <pt x="927" y="1165" on="1"/>
        <pt x="1112" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          9 0 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RUTG[ ]	/* RoundUpToGrid */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSH[ ]	/* 3 values pushed */
          163 9 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          2 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00485" xMin="99" yMin="-16" xMax="1077" yMax="1181">
      <contour>
        <pt x="1077" y="150" on="1"/>
        <pt x="1011" y="67" on="0"/>
        <pt x="778" y="-16" on="0"/>
        <pt x="627" y="-16" on="1"/>
        <pt x="389" y="-16" on="0"/>
        <pt x="101" y="282" on="0"/>
        <pt x="99" y="534" on="1"/>
        <pt x="99" y="624" on="1"/>
        <pt x="99" y="886" on="0"/>
        <pt x="366" y="1181" on="0"/>
        <pt x="608" y="1181" on="1"/>
        <pt x="808" y="1181" on="0"/>
        <pt x="1050" y="993" on="0"/>
        <pt x="1077" y="812" on="1"/>
        <pt x="893" y="812" on="1"/>
        <pt x="855" y="1029" on="0"/>
        <pt x="610" y="1029" on="1"/>
        <pt x="451" y="1029" on="0"/>
        <pt x="285" y="823" on="0"/>
        <pt x="285" y="624" on="1"/>
        <pt x="285" y="540" on="1"/>
        <pt x="285" y="350" on="0"/>
        <pt x="470" y="135" on="0"/>
        <pt x="630" y="135" on="1"/>
        <pt x="812" y="135" on="0"/>
        <pt x="893" y="209" on="1"/>
        <pt x="893" y="447" on="1"/>
        <pt x="612" y="447" on="1"/>
        <pt x="612" y="591" on="1"/>
        <pt x="1077" y="591" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          10 30 31
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          29 10 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          29
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          13 29 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          16 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          23 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          29
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          26 3 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00486" xMin="138" yMin="0" xMax="923" yMax="1165">
      <contour>
        <pt x="843" y="499" on="1"/>
        <pt x="323" y="499" on="1"/>
        <pt x="323" y="0" on="1"/>
        <pt x="138" y="0" on="1"/>
        <pt x="138" y="1165" on="1"/>
        <pt x="923" y="1165" on="1"/>
        <pt x="923" y="1012" on="1"/>
        <pt x="323" y="1012" on="1"/>
        <pt x="323" y="652" on="1"/>
        <pt x="843" y="652" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          31 9 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          6 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00487" xMin="67" yMin="-237" xMax="989" yMax="1395">
      <contour>
        <pt x="803" y="298" on="1"/>
        <pt x="803" y="378" on="0"/>
        <pt x="682" y="466" on="0"/>
        <pt x="388" y="540" on="0"/>
        <pt x="302" y="583" on="1"/>
        <pt x="107" y="681" on="0"/>
        <pt x="107" y="860" on="1"/>
        <pt x="107" y="990" on="0"/>
        <pt x="310" y="1162" on="0"/>
        <pt x="476" y="1178" on="1"/>
        <pt x="476" y="1395" on="1"/>
        <pt x="625" y="1395" on="1"/>
        <pt x="625" y="1176" on="1"/>
        <pt x="788" y="1155" on="0"/>
        <pt x="986" y="961" on="0"/>
        <pt x="986" y="825" on="1"/>
        <pt x="801" y="825" on="1"/>
        <pt x="801" y="923" on="0"/>
        <pt x="660" y="1030" on="0"/>
        <pt x="539" y="1030" on="1"/>
        <pt x="426" y="1030" on="0"/>
        <pt x="292" y="941" on="0"/>
        <pt x="292" y="861" on="1"/>
        <pt x="292" y="796" on="0"/>
        <pt x="415" y="708" on="0"/>
        <pt x="727" y="628" on="0"/>
        <pt x="903" y="527" on="0"/>
        <pt x="989" y="391" on="0"/>
        <pt x="989" y="300" on="1"/>
        <pt x="989" y="170" on="0"/>
        <pt x="794" y="4" on="0"/>
        <pt x="625" y="-12" on="1"/>
        <pt x="625" y="-237" on="1"/>
        <pt x="476" y="-237" on="1"/>
        <pt x="476" y="-12" on="1"/>
        <pt x="290" y="7" on="0"/>
        <pt x="67" y="201" on="0"/>
        <pt x="67" y="349" on="1"/>
        <pt x="253" y="349" on="1"/>
        <pt x="253" y="247" on="0"/>
        <pt x="407" y="133" on="0"/>
        <pt x="547" y="133" on="1"/>
        <pt x="673" y="133" on="0"/>
        <pt x="803" y="224" on="0"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          34
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          34 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          2 34 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          19 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          25 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          34
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          31
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          34
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          38
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          34
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          41 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00488" xMin="48" yMin="0" xMax="1007" yMax="1181">
      <contour>
        <pt x="797" y="500" on="1"/>
        <pt x="397" y="500" on="1"/>
        <pt x="398" y="466" on="1"/>
        <pt x="403" y="263" on="0"/>
        <pt x="347" y="152" on="1"/>
        <pt x="1007" y="152" on="1"/>
        <pt x="1006" y="0" on="1"/>
        <pt x="114" y="0" on="1"/>
        <pt x="114" y="152" on="1"/>
        <pt x="124" y="152" on="1"/>
        <pt x="203" y="175" on="0"/>
        <pt x="212" y="396" on="1"/>
        <pt x="213" y="466" on="1"/>
        <pt x="212" y="500" on="1"/>
        <pt x="48" y="500" on="1"/>
        <pt x="48" y="621" on="1"/>
        <pt x="208" y="621" on="1"/>
        <pt x="204" y="744" on="1"/>
        <pt x="198" y="945" on="0"/>
        <pt x="401" y="1181" on="0"/>
        <pt x="582" y="1181" on="1"/>
        <pt x="765" y="1181" on="0"/>
        <pt x="967" y="977" on="0"/>
        <pt x="967" y="794" on="1"/>
        <pt x="782" y="794" on="1"/>
        <pt x="782" y="906" on="0"/>
        <pt x="678" y="1025" on="0"/>
        <pt x="582" y="1025" on="1"/>
        <pt x="489" y="1025" on="0"/>
        <pt x="385" y="882" on="0"/>
        <pt x="389" y="744" on="1"/>
        <pt x="393" y="621" on="1"/>
        <pt x="797" y="621" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          20
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          20 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          15 7 20
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          14 4 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          1
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          4 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          27 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          31
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00489" xMin="13" yMin="0" xMax="914" yMax="1165">
      <contour>
        <pt x="465" y="589" on="1"/>
        <pt x="718" y="1165" on="1"/>
        <pt x="914" y="1165" on="1"/>
        <pt x="614" y="537" on="1"/>
        <pt x="827" y="537" on="1"/>
        <pt x="827" y="416" on="1"/>
        <pt x="556" y="416" on="1"/>
        <pt x="553" y="409" on="1"/>
        <pt x="553" y="341" on="1"/>
        <pt x="827" y="341" on="1"/>
        <pt x="827" y="221" on="1"/>
        <pt x="553" y="221" on="1"/>
        <pt x="553" y="0" on="1"/>
        <pt x="368" y="0" on="1"/>
        <pt x="368" y="221" on="1"/>
        <pt x="94" y="221" on="1"/>
        <pt x="94" y="341" on="1"/>
        <pt x="368" y="341" on="1"/>
        <pt x="368" y="416" on="1"/>
        <pt x="94" y="416" on="1"/>
        <pt x="94" y="537" on="1"/>
        <pt x="313" y="537" on="1"/>
        <pt x="13" y="1165" on="1"/>
        <pt x="212" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          0 24 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 12 1
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          8 1 12
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 2 values pushed */
          5 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MDRP[11100]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 2 values pushed */
          10 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MDRP[11100]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          18
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00490" xMin="138" yMin="0" xMax="901" yMax="1165">
      <contour>
        <pt x="901" y="1012" on="1"/>
        <pt x="323" y="1012" on="1"/>
        <pt x="323" y="0" on="1"/>
        <pt x="138" y="0" on="1"/>
        <pt x="138" y="1165" on="1"/>
        <pt x="901" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          1 6 7
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00491" xMin="20" yMin="0" xMax="1107" yMax="1165">
      <contour>
        <pt x="1107" y="0" on="1"/>
        <pt x="20" y="0" on="1"/>
        <pt x="477" y="1165" on="1"/>
        <pt x="650" y="1165" on="1"/>
      </contour>
      <contour>
        <pt x="589" y="874" on="1"/>
        <pt x="563" y="966" on="1"/>
        <pt x="538" y="872" on="1"/>
        <pt x="274" y="152" on="1"/>
        <pt x="853" y="152" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          5 9 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          5 2 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          7 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00492" xMin="96" yMin="-16" xMax="1114" yMax="1181">
      <contour>
        <pt x="853" y="505" on="1"/>
        <pt x="372" y="505" on="1"/>
        <pt x="372" y="658" on="1"/>
        <pt x="853" y="658" on="1"/>
      </contour>
      <contour>
        <pt x="1114" y="548" on="1"/>
        <pt x="1114" y="287" on="0"/>
        <pt x="838" y="-16" on="0"/>
        <pt x="606" y="-16" on="1"/>
        <pt x="377" y="-16" on="0"/>
        <pt x="96" y="290" on="0"/>
        <pt x="96" y="553" on="1"/>
        <pt x="96" y="615" on="1"/>
        <pt x="96" y="873" on="0"/>
        <pt x="375" y="1181" on="0"/>
        <pt x="604" y="1181" on="1"/>
        <pt x="837" y="1181" on="0"/>
        <pt x="1112" y="877" on="0"/>
        <pt x="1114" y="622" on="1"/>
      </contour>
      <contour>
        <pt x="931" y="617" on="1"/>
        <pt x="931" y="815" on="0"/>
        <pt x="759" y="1025" on="0"/>
        <pt x="604" y="1025" on="1"/>
        <pt x="454" y="1025" on="0"/>
        <pt x="279" y="811" on="0"/>
        <pt x="279" y="614" on="1"/>
        <pt x="279" y="548" on="1"/>
        <pt x="279" y="353" on="0"/>
        <pt x="455" y="138" on="0"/>
        <pt x="606" y="138" on="1"/>
        <pt x="762" y="138" on="0"/>
        <pt x="931" y="349" on="0"/>
        <pt x="931" y="548" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          14 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          2 7 14
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RUTG[ ]	/* RoundUpToGrid */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSH[ ]	/* 5 values pushed */
          96 2 112 2 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 5 values pushed */
          96 2 112 2 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          1 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          21 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          28 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00493" xMin="20" yMin="0" xMax="1107" yMax="1165">
      <contour>
        <pt x="219" y="0" on="1"/>
        <pt x="20" y="0" on="1"/>
        <pt x="477" y="1165" on="1"/>
        <pt x="650" y="1165" on="1"/>
        <pt x="1107" y="0" on="1"/>
        <pt x="909" y="0" on="1"/>
        <pt x="589" y="874" on="1"/>
        <pt x="563" y="966" on="1"/>
        <pt x="538" y="872" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          7 9 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          7 2 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00494" xMin="62" yMin="0" xMax="843" yMax="1165">
      <contour>
        <pt x="843" y="0" on="1"/>
        <pt x="62" y="0" on="1"/>
        <pt x="62" y="152" on="1"/>
        <pt x="843" y="152" on="1"/>
      </contour>
      <contour>
        <pt x="776" y="531" on="1"/>
        <pt x="127" y="531" on="1"/>
        <pt x="127" y="683" on="1"/>
        <pt x="776" y="683" on="1"/>
      </contour>
      <contour>
        <pt x="843" y="1012" on="1"/>
        <pt x="62" y="1012" on="1"/>
        <pt x="62" y="1165" on="1"/>
        <pt x="843" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          4 12 13
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          1
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          2 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          7 10 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          191 7 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          4 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          8 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00495" xMin="138" yMin="0" xMax="1092" yMax="1165">
      <contour>
        <pt x="1092" y="0" on="1"/>
        <pt x="906" y="0" on="1"/>
        <pt x="906" y="1012" on="1"/>
        <pt x="323" y="1012" on="1"/>
        <pt x="323" y="0" on="1"/>
        <pt x="138" y="0" on="1"/>
        <pt x="138" y="1165" on="1"/>
        <pt x="1092" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          1 8 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          2 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00496" xMin="63" yMin="0" xMax="968" yMax="1165">
      <contour>
        <pt x="623" y="570" on="1"/>
        <pt x="293" y="153" on="1"/>
        <pt x="968" y="153" on="1"/>
        <pt x="968" y="0" on="1"/>
        <pt x="63" y="0" on="1"/>
        <pt x="63" y="144" on="1"/>
        <pt x="400" y="583" on="1"/>
        <pt x="63" y="1021" on="1"/>
        <pt x="63" y="1165" on="1"/>
        <pt x="918" y="1165" on="1"/>
        <pt x="918" y="1012" on="1"/>
        <pt x="293" y="1012" on="1"/>
        <pt x="623" y="595" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          6 13 14
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          1 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          10 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00497" xMin="96" yMin="0" xMax="1286" yMax="1165">
      <contour>
        <pt x="784" y="1046" on="1"/>
        <pt x="1014" y="1033" on="0"/>
        <pt x="1286" y="783" on="0"/>
        <pt x="1286" y="580" on="1"/>
        <pt x="1286" y="375" on="0"/>
        <pt x="1011" y="123" on="0"/>
        <pt x="784" y="110" on="1"/>
        <pt x="784" y="0" on="1"/>
        <pt x="599" y="0" on="1"/>
        <pt x="599" y="110" on="1"/>
        <pt x="365" y="123" on="0"/>
        <pt x="96" y="376" on="0"/>
        <pt x="96" y="578" on="1"/>
        <pt x="96" y="782" on="0"/>
        <pt x="368" y="1034" on="0"/>
        <pt x="599" y="1047" on="1"/>
        <pt x="599" y="1165" on="1"/>
        <pt x="784" y="1165" on="1"/>
      </contour>
      <contour>
        <pt x="280" y="578" on="1"/>
        <pt x="280" y="282" on="0"/>
        <pt x="599" y="265" on="1"/>
        <pt x="599" y="891" on="1"/>
        <pt x="445" y="882" on="0"/>
        <pt x="280" y="732" on="0"/>
      </contour>
      <contour>
        <pt x="1102" y="580" on="1"/>
        <pt x="1102" y="733" on="0"/>
        <pt x="936" y="882" on="0"/>
        <pt x="784" y="891" on="1"/>
        <pt x="784" y="265" on="1"/>
        <pt x="936" y="275" on="0"/>
        <pt x="1102" y="425" on="0"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          16 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          15 16 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          9 8 16
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          20 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          21 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          27
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          28
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00498" xMin="96" yMin="0" xMax="1206" yMax="1165">
      <contour>
        <pt x="744" y="443" on="1"/>
        <pt x="1021" y="494" on="0"/>
        <pt x="1021" y="857" on="1"/>
        <pt x="1021" y="1165" on="1"/>
        <pt x="1206" y="1165" on="1"/>
        <pt x="1206" y="842" on="1"/>
        <pt x="1203" y="599" on="0"/>
        <pt x="961" y="313" on="0"/>
        <pt x="744" y="289" on="1"/>
        <pt x="744" y="0" on="1"/>
        <pt x="558" y="0" on="1"/>
        <pt x="558" y="287" on="1"/>
        <pt x="341" y="307" on="0"/>
        <pt x="101" y="592" on="0"/>
        <pt x="96" y="834" on="1"/>
        <pt x="96" y="1165" on="1"/>
        <pt x="282" y="1165" on="1"/>
        <pt x="282" y="856" on="1"/>
        <pt x="282" y="486" on="0"/>
        <pt x="558" y="441" on="1"/>
        <pt x="558" y="1165" on="1"/>
        <pt x="744" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          0 22 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          15 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          20
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          20 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          19 3 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          11 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00499" xMin="117" yMin="0" xMax="1150" yMax="1181">
      <contour>
        <pt x="699" y="157" on="1"/>
        <pt x="835" y="188" on="0"/>
        <pt x="962" y="411" on="0"/>
        <pt x="962" y="616" on="1"/>
        <pt x="962" y="654" on="1"/>
        <pt x="962" y="833" on="0"/>
        <pt x="788" y="1025" on="0"/>
        <pt x="631" y="1025" on="1"/>
        <pt x="475" y="1025" on="0"/>
        <pt x="303" y="832" on="0"/>
        <pt x="303" y="649" on="1"/>
        <pt x="303" y="616" on="1"/>
        <pt x="303" y="412" on="0"/>
        <pt x="444" y="189" on="0"/>
        <pt x="571" y="157" on="1"/>
        <pt x="571" y="0" on="1"/>
        <pt x="121" y="0" on="1"/>
        <pt x="121" y="151" on="1"/>
        <pt x="296" y="151" on="1"/>
        <pt x="117" y="308" on="0"/>
        <pt x="117" y="622" on="1"/>
        <pt x="117" y="652" on="1"/>
        <pt x="117" y="890" on="0"/>
        <pt x="400" y="1181" on="0"/>
        <pt x="631" y="1181" on="1"/>
        <pt x="863" y="1181" on="0"/>
        <pt x="1147" y="889" on="0"/>
        <pt x="1147" y="644" on="1"/>
        <pt x="1147" y="616" on="1"/>
        <pt x="1147" y="307" on="0"/>
        <pt x="969" y="151" on="1"/>
        <pt x="1150" y="151" on="1"/>
        <pt x="1150" y="0" on="1"/>
        <pt x="699" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          7 34 35
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          24
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          24 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          15 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          32
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          32 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          17 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          24
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          7 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          17
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          31
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00500" xMin="38" yMin="-20" xMax="1324" yMax="1165">
      <contour>
        <pt x="394" y="1012" on="1"/>
        <pt x="38" y="1012" on="1"/>
        <pt x="38" y="1165" on="1"/>
        <pt x="943" y="1165" on="1"/>
        <pt x="943" y="1012" on="1"/>
        <pt x="579" y="1012" on="1"/>
        <pt x="579" y="715" on="1"/>
        <pt x="730" y="764" on="0"/>
        <pt x="886" y="764" on="1"/>
        <pt x="1098" y="764" on="0"/>
        <pt x="1324" y="556" on="0"/>
        <pt x="1324" y="360" on="1"/>
        <pt x="1324" y="170" on="0"/>
        <pt x="1095" y="-20" on="0"/>
        <pt x="871" y="-20" on="1"/>
        <pt x="871" y="131" on="1"/>
        <pt x="1012" y="131" on="0"/>
        <pt x="1139" y="240" on="0"/>
        <pt x="1139" y="360" on="1"/>
        <pt x="1139" y="491" on="0"/>
        <pt x="1014" y="612" on="0"/>
        <pt x="886" y="612" on="1"/>
        <pt x="729" y="612" on="0"/>
        <pt x="579" y="562" on="1"/>
        <pt x="579" y="0" on="1"/>
        <pt x="394" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          22 26 27
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          14 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          24
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          24 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          8 2 14
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          15 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          21 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00501" xMin="96" yMin="-16" xMax="1072" yMax="1181">
      <contour>
        <pt x="1072" y="377" on="1"/>
        <pt x="1052" y="190" on="0"/>
        <pt x="800" y="-16" on="0"/>
        <pt x="591" y="-16" on="1"/>
        <pt x="367" y="-16" on="0"/>
        <pt x="96" y="279" on="0"/>
        <pt x="96" y="538" on="1"/>
        <pt x="96" y="632" on="1"/>
        <pt x="96" y="796" on="0"/>
        <pt x="219" y="1045" on="0"/>
        <pt x="450" y="1181" on="0"/>
        <pt x="602" y="1181" on="1"/>
        <pt x="806" y="1181" on="0"/>
        <pt x="1053" y="970" on="0"/>
        <pt x="1072" y="783" on="1"/>
        <pt x="887" y="783" on="1"/>
        <pt x="869" y="913" on="0"/>
        <pt x="728" y="1029" on="0"/>
        <pt x="602" y="1029" on="1"/>
        <pt x="449" y="1029" on="0"/>
        <pt x="287" y="834" on="0"/>
        <pt x="281" y="659" on="1"/>
        <pt x="728" y="659" on="1"/>
        <pt x="728" y="507" on="1"/>
        <pt x="281" y="507" on="1"/>
        <pt x="285" y="329" on="0"/>
        <pt x="446" y="135" on="0"/>
        <pt x="591" y="135" on="1"/>
        <pt x="726" y="135" on="0"/>
        <pt x="867" y="246" on="0"/>
        <pt x="887" y="377" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          3 31 32
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          15 11 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          18 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          22 11 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RUTG[ ]	/* RoundUpToGrid */
          PUSH[ ]	/* 1 value pushed */
          22
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSH[ ]	/* 3 values pushed */
          160 22 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          96 22 112 22 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          48 22 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 5 values pushed */
          96 22 112 22 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 3 values pushed */
          23 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          27 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          30 3 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00502" xMin="39" yMin="0" xMax="1787" yMax="1165">
      <contour>
        <pt x="1787" y="366" on="1"/>
        <pt x="1787" y="201" on="0"/>
        <pt x="1557" y="2" on="0"/>
        <pt x="1362" y="0" on="1"/>
        <pt x="893" y="0" on="1"/>
        <pt x="893" y="1012" on="1"/>
        <pt x="475" y="1012" on="1"/>
        <pt x="460" y="601" on="1"/>
        <pt x="449" y="364" on="0"/>
        <pt x="372" y="118" on="0"/>
        <pt x="221" y="1" on="0"/>
        <pt x="98" y="0" on="1"/>
        <pt x="39" y="0" on="1"/>
        <pt x="43" y="165" on="1"/>
        <pt x="89" y="166" on="1"/>
        <pt x="185" y="170" on="0"/>
        <pt x="266" y="360" on="0"/>
        <pt x="276" y="625" on="1"/>
        <pt x="296" y="1165" on="1"/>
        <pt x="1078" y="1165" on="1"/>
        <pt x="1078" y="727" on="1"/>
        <pt x="1370" y="727" on="1"/>
        <pt x="1563" y="723" on="0"/>
        <pt x="1787" y="530" on="0"/>
      </contour>
      <contour>
        <pt x="1078" y="575" on="1"/>
        <pt x="1078" y="152" on="1"/>
        <pt x="1355" y="152" on="1"/>
        <pt x="1469" y="152" on="0"/>
        <pt x="1601" y="269" on="0"/>
        <pt x="1601" y="368" on="1"/>
        <pt x="1601" y="463" on="0"/>
        <pt x="1470" y="575" on="0"/>
        <pt x="1355" y="575" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          4 33 34
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          18
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          18 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          5 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          14 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          20 18 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          20
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          24 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          25 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00503" xMin="138" yMin="0" xMax="1801" yMax="1165">
      <contour>
        <pt x="323" y="650" on="1"/>
        <pt x="907" y="650" on="1"/>
        <pt x="907" y="1165" on="1"/>
        <pt x="1092" y="1165" on="1"/>
        <pt x="1092" y="727" on="1"/>
        <pt x="1384" y="727" on="1"/>
        <pt x="1577" y="723" on="0"/>
        <pt x="1801" y="530" on="0"/>
        <pt x="1801" y="366" on="1"/>
        <pt x="1801" y="201" on="0"/>
        <pt x="1571" y="2" on="0"/>
        <pt x="1376" y="0" on="1"/>
        <pt x="907" y="0" on="1"/>
        <pt x="907" y="498" on="1"/>
        <pt x="323" y="498" on="1"/>
        <pt x="323" y="0" on="1"/>
        <pt x="138" y="0" on="1"/>
        <pt x="138" y="1165" on="1"/>
        <pt x="323" y="1165" on="1"/>
      </contour>
      <contour>
        <pt x="1092" y="575" on="1"/>
        <pt x="1092" y="152" on="1"/>
        <pt x="1369" y="152" on="1"/>
        <pt x="1484" y="152" on="0"/>
        <pt x="1616" y="271" on="0"/>
        <pt x="1616" y="368" on="1"/>
        <pt x="1616" y="459" on="0"/>
        <pt x="1491" y="572" on="0"/>
        <pt x="1381" y="575" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          1 28 29
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          17 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          15 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          1 2 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RUTG[ ]	/* RoundUpToGrid */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSH[ ]	/* 3 values pushed */
          160 1 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          4 2 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          13 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          19 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          20 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00504" xMin="40" yMin="0" xMax="1326" yMax="1165">
      <contour>
        <pt x="395" y="1012" on="1"/>
        <pt x="40" y="1012" on="1"/>
        <pt x="40" y="1165" on="1"/>
        <pt x="945" y="1165" on="1"/>
        <pt x="945" y="1012" on="1"/>
        <pt x="581" y="1012" on="1"/>
        <pt x="581" y="715" on="1"/>
        <pt x="728" y="764" on="0"/>
        <pt x="888" y="764" on="1"/>
        <pt x="1100" y="764" on="0"/>
        <pt x="1322" y="562" on="0"/>
        <pt x="1326" y="369" on="1"/>
        <pt x="1326" y="0" on="1"/>
        <pt x="1140" y="0" on="1"/>
        <pt x="1140" y="356" on="1"/>
        <pt x="1140" y="491" on="0"/>
        <pt x="1015" y="612" on="0"/>
        <pt x="888" y="612" on="1"/>
        <pt x="731" y="612" on="0"/>
        <pt x="581" y="562" on="1"/>
        <pt x="581" y="0" on="1"/>
        <pt x="395" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          7 22 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          20
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          20 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          8 2 12
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          17 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00505" xMin="138" yMin="-357" xMax="1091" yMax="1165">
      <contour>
        <pt x="1091" y="0" on="1"/>
        <pt x="708" y="0" on="1"/>
        <pt x="708" y="-357" on="1"/>
        <pt x="523" y="-357" on="1"/>
        <pt x="523" y="0" on="1"/>
        <pt x="138" y="0" on="1"/>
        <pt x="138" y="1165" on="1"/>
        <pt x="323" y="1165" on="1"/>
        <pt x="323" y="152" on="1"/>
        <pt x="906" y="152" on="1"/>
        <pt x="906" y="1165" on="1"/>
        <pt x="1091" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          3 12 13
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          8 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00506" xMin="138" yMin="0" xMax="1032" yMax="1165">
      <contour>
        <pt x="917" y="1015" on="1"/>
        <pt x="323" y="1015" on="1"/>
        <pt x="323" y="727" on="1"/>
        <pt x="596" y="727" on="1"/>
        <pt x="802" y="727" on="0"/>
        <pt x="1032" y="531" on="0"/>
        <pt x="1032" y="366" on="1"/>
        <pt x="1032" y="202" on="0"/>
        <pt x="804" y="2" on="0"/>
        <pt x="607" y="0" on="1"/>
        <pt x="138" y="0" on="1"/>
        <pt x="138" y="1165" on="1"/>
        <pt x="917" y="1165" on="1"/>
      </contour>
      <contour>
        <pt x="600" y="152" on="1"/>
        <pt x="715" y="152" on="0"/>
        <pt x="847" y="271" on="0"/>
        <pt x="847" y="368" on="1"/>
        <pt x="847" y="459" on="0"/>
        <pt x="722" y="572" on="0"/>
        <pt x="612" y="575" on="1"/>
        <pt x="323" y="575" on="1"/>
        <pt x="323" y="152" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          3 22 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          3 11 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          13 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          19 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00507" xMin="46" yMin="-340" xMax="1255" yMax="1165">
      <contour>
        <pt x="133" y="152" on="1"/>
        <pt x="174" y="201" on="1"/>
        <pt x="245" y="287" on="0"/>
        <pt x="316" y="540" on="0"/>
        <pt x="323" y="756" on="1"/>
        <pt x="337" y="1165" on="1"/>
        <pt x="1112" y="1165" on="1"/>
        <pt x="1112" y="152" on="1"/>
        <pt x="1255" y="152" on="1"/>
        <pt x="1255" y="-340" on="1"/>
        <pt x="1070" y="-340" on="1"/>
        <pt x="1070" y="0" on="1"/>
        <pt x="232" y="0" on="1"/>
        <pt x="232" y="-339" on="1"/>
        <pt x="46" y="-339" on="1"/>
        <pt x="47" y="152" on="1"/>
      </contour>
      <contour>
        <pt x="349" y="152" on="1"/>
        <pt x="927" y="152" on="1"/>
        <pt x="927" y="1012" on="1"/>
        <pt x="515" y="1012" on="1"/>
        <pt x="503" y="700" on="1"/>
        <pt x="486" y="341" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          19 22 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          18 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00508" xMin="31" yMin="0" xMax="1515" yMax="1165">
      <contour>
        <pt x="965" y="502" on="1"/>
        <pt x="866" y="502" on="1"/>
        <pt x="866" y="0" on="1"/>
        <pt x="680" y="0" on="1"/>
        <pt x="680" y="502" on="1"/>
        <pt x="580" y="502" on="1"/>
        <pt x="265" y="0" on="1"/>
        <pt x="31" y="0" on="1"/>
        <pt x="421" y="593" on="1"/>
        <pt x="67" y="1165" on="1"/>
        <pt x="291" y="1165" on="1"/>
        <pt x="591" y="656" on="1"/>
        <pt x="680" y="656" on="1"/>
        <pt x="680" y="1165" on="1"/>
        <pt x="866" y="1165" on="1"/>
        <pt x="866" y="656" on="1"/>
        <pt x="955" y="656" on="1"/>
        <pt x="1255" y="1165" on="1"/>
        <pt x="1479" y="1165" on="1"/>
        <pt x="1123" y="602" on="1"/>
        <pt x="1515" y="0" on="1"/>
        <pt x="1281" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          1 22 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          17 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          20
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          20 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          16 9 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RUTG[ ]	/* RoundUpToGrid */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSH[ ]	/* 3 values pushed */
          160 16 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          96 16 112 16 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          19 16 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00509" xMin="71" yMin="-16" xMax="980" yMax="1181">
      <contour>
        <pt x="776" y="848" on="1"/>
        <pt x="776" y="932" on="0"/>
        <pt x="638" y="1025" on="0"/>
        <pt x="513" y="1025" on="1"/>
        <pt x="403" y="1025" on="0"/>
        <pt x="274" y="937" on="0"/>
        <pt x="274" y="858" on="1"/>
        <pt x="88" y="858" on="1"/>
        <pt x="88" y="1000" on="0"/>
        <pt x="325" y="1181" on="0"/>
        <pt x="513" y="1181" on="1"/>
        <pt x="724" y="1181" on="0"/>
        <pt x="962" y="1013" on="0"/>
        <pt x="962" y="863" on="1"/>
        <pt x="962" y="777" on="0"/>
        <pt x="852" y="636" on="0"/>
        <pt x="749" y="595" on="1"/>
        <pt x="867" y="559" on="0"/>
        <pt x="980" y="413" on="0"/>
        <pt x="980" y="322" on="1"/>
        <pt x="980" y="164" on="0"/>
        <pt x="726" y="-16" on="0"/>
        <pt x="513" y="-16" on="1"/>
        <pt x="422" y="-16" on="0"/>
        <pt x="253" y="28" on="0"/>
        <pt x="192" y="74" on="1"/>
        <pt x="71" y="163" on="0"/>
        <pt x="71" y="320" on="1"/>
        <pt x="256" y="320" on="1"/>
        <pt x="261" y="234" on="0"/>
        <pt x="392" y="138" on="0"/>
        <pt x="513" y="138" on="1"/>
        <pt x="649" y="138" on="0"/>
        <pt x="795" y="234" on="0"/>
        <pt x="795" y="322" on="1"/>
        <pt x="795" y="515" on="0"/>
        <pt x="538" y="520" on="1"/>
        <pt x="381" y="520" on="1"/>
        <pt x="381" y="672" on="1"/>
        <pt x="537" y="672" on="1"/>
        <pt x="776" y="677" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          36 41 42
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          22
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          22 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          3 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          6 10 22
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          39 10 22
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          39
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 5 values pushed */
          31 39 47 39 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          191 39 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          223 39 239 39 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          36 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          16 36 39
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          28 22 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          22
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          31 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00510" xMin="138" yMin="0" xMax="1121" yMax="1165">
      <contour>
        <pt x="936" y="1165" on="1"/>
        <pt x="1121" y="1165" on="1"/>
        <pt x="1121" y="0" on="1"/>
        <pt x="936" y="0" on="1"/>
        <pt x="936" y="884" on="1"/>
        <pt x="323" y="0" on="1"/>
        <pt x="138" y="0" on="1"/>
        <pt x="138" y="1165" on="1"/>
        <pt x="323" y="1165" on="1"/>
        <pt x="323" y="281" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          0 10 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          4 0 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          9 0 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00511" xMin="139" yMin="0" xMax="1068" yMax="1165">
      <contour>
        <pt x="430" y="502" on="1"/>
        <pt x="324" y="502" on="1"/>
        <pt x="324" y="0" on="1"/>
        <pt x="139" y="0" on="1"/>
        <pt x="139" y="1165" on="1"/>
        <pt x="324" y="1165" on="1"/>
        <pt x="324" y="656" on="1"/>
        <pt x="424" y="656" on="1"/>
        <pt x="813" y="1165" on="1"/>
        <pt x="1036" y="1165" on="1"/>
        <pt x="577" y="594" on="1"/>
        <pt x="1068" y="0" on="1"/>
        <pt x="829" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          10 13 14
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          6 2 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RUTG[ ]	/* RoundUpToGrid */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSH[ ]	/* 3 values pushed */
          160 6 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          96 6 112 6 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          1 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          10 1 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00512" xMin="39" yMin="0" xMax="1078" yMax="1165">
      <contour>
        <pt x="1078" y="1165" on="1"/>
        <pt x="1078" y="0" on="1"/>
        <pt x="893" y="0" on="1"/>
        <pt x="893" y="1012" on="1"/>
        <pt x="475" y="1012" on="1"/>
        <pt x="460" y="630" on="1"/>
        <pt x="447" y="288" on="0"/>
        <pt x="283" y="5" on="0"/>
        <pt x="107" y="0" on="1"/>
        <pt x="39" y="0" on="1"/>
        <pt x="43" y="165" on="1"/>
        <pt x="84" y="168" on="1"/>
        <pt x="178" y="175" on="0"/>
        <pt x="258" y="333" on="0"/>
        <pt x="271" y="559" on="1"/>
        <pt x="296" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          4 16 17
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          3 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          10 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00513" xMin="34" yMin="-20" xMax="1035" yMax="1165">
      <contour>
        <pt x="501" y="560" on="1"/>
        <pt x="546" y="440" on="1"/>
        <pt x="822" y="1165" on="1"/>
        <pt x="1035" y="1165" on="1"/>
        <pt x="617" y="210" on="1"/>
        <pt x="580" y="137" on="1"/>
        <pt x="500" y="-8" on="0"/>
        <pt x="330" y="-19" on="1"/>
        <pt x="292" y="-20" on="1"/>
        <pt x="212" y="-20" on="0"/>
        <pt x="192" y="-12" on="1"/>
        <pt x="198" y="135" on="1"/>
        <pt x="290" y="130" on="1"/>
        <pt x="339" y="130" on="0"/>
        <pt x="412" y="179" on="0"/>
        <pt x="444" y="238" on="1"/>
        <pt x="34" y="1165" on="1"/>
        <pt x="248" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          1 18 19
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          16 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          1 8 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          12 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00514" xMin="138" yMin="-340" xMax="1265" yMax="1165">
      <contour>
        <pt x="1092" y="152" on="1"/>
        <pt x="1265" y="152" on="1"/>
        <pt x="1247" y="-340" on="1"/>
        <pt x="1082" y="-340" on="1"/>
        <pt x="1082" y="0" on="1"/>
        <pt x="138" y="0" on="1"/>
        <pt x="138" y="1165" on="1"/>
        <pt x="323" y="1165" on="1"/>
        <pt x="323" y="152" on="1"/>
        <pt x="906" y="152" on="1"/>
        <pt x="906" y="1165" on="1"/>
        <pt x="1092" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          9 12 13
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00515" xMin="61" yMin="0" xMax="991" yMax="1165">
      <contour>
        <pt x="991" y="0" on="1"/>
        <pt x="806" y="0" on="1"/>
        <pt x="806" y="450" on="1"/>
        <pt x="662" y="402" on="0"/>
        <pt x="499" y="402" on="1"/>
        <pt x="287" y="402" on="0"/>
        <pt x="65" y="604" on="0"/>
        <pt x="61" y="797" on="1"/>
        <pt x="61" y="1165" on="1"/>
        <pt x="246" y="1165" on="1"/>
        <pt x="246" y="810" on="1"/>
        <pt x="246" y="675" on="0"/>
        <pt x="372" y="554" on="0"/>
        <pt x="499" y="554" on="1"/>
        <pt x="656" y="554" on="0"/>
        <pt x="806" y="604" on="1"/>
        <pt x="806" y="1165" on="1"/>
        <pt x="991" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          4 18 19
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          16 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          13 8 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          4 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00516" xMin="138" yMin="0" xMax="1478" yMax="1165">
      <contour>
        <pt x="1478" y="0" on="1"/>
        <pt x="138" y="0" on="1"/>
        <pt x="138" y="1165" on="1"/>
        <pt x="323" y="1165" on="1"/>
        <pt x="323" y="152" on="1"/>
        <pt x="715" y="152" on="1"/>
        <pt x="715" y="1165" on="1"/>
        <pt x="901" y="1165" on="1"/>
        <pt x="901" y="152" on="1"/>
        <pt x="1293" y="152" on="1"/>
        <pt x="1293" y="1165" on="1"/>
        <pt x="1478" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          5 12 13
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          4 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00517" xMin="138" yMin="-340" xMax="1653" yMax="1165">
      <contour>
        <pt x="1479" y="152" on="1"/>
        <pt x="1653" y="152" on="1"/>
        <pt x="1635" y="-340" on="1"/>
        <pt x="1469" y="-340" on="1"/>
        <pt x="1469" y="0" on="1"/>
        <pt x="138" y="0" on="1"/>
        <pt x="138" y="1165" on="1"/>
        <pt x="323" y="1165" on="1"/>
        <pt x="323" y="152" on="1"/>
        <pt x="715" y="152" on="1"/>
        <pt x="715" y="1165" on="1"/>
        <pt x="901" y="1165" on="1"/>
        <pt x="901" y="152" on="1"/>
        <pt x="1293" y="152" on="1"/>
        <pt x="1293" y="1165" on="1"/>
        <pt x="1479" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          11 16 17
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          14 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00518" xMin="8" yMin="0" xMax="1238" yMax="1165">
      <contour>
        <pt x="1238" y="366" on="1"/>
        <pt x="1238" y="202" on="0"/>
        <pt x="1010" y="2" on="0"/>
        <pt x="814" y="0" on="1"/>
        <pt x="344" y="0" on="1"/>
        <pt x="344" y="1012" on="1"/>
        <pt x="8" y="1012" on="1"/>
        <pt x="8" y="1165" on="1"/>
        <pt x="530" y="1165" on="1"/>
        <pt x="530" y="727" on="1"/>
        <pt x="808" y="727" on="1"/>
        <pt x="940" y="727" on="0"/>
        <pt x="1134" y="639" on="0"/>
        <pt x="1238" y="476" on="0"/>
      </contour>
      <contour>
        <pt x="807" y="152" on="1"/>
        <pt x="921" y="152" on="0"/>
        <pt x="1053" y="269" on="0"/>
        <pt x="1053" y="368" on="1"/>
        <pt x="1053" y="463" on="0"/>
        <pt x="922" y="575" on="0"/>
        <pt x="807" y="575" on="1"/>
        <pt x="530" y="575" on="1"/>
        <pt x="530" y="152" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          8 23 24
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          5 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          10 7 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          14 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          20 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00519" xMin="138" yMin="0" xMax="1383" yMax="1165">
      <component glyphName="glyph00520" x="0" y="0" flags="0x4"/>
      <component glyphName="glyph00483" x="1046" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph00520" xMin="138" yMin="0" xMax="1032" yMax="1165">
      <contour>
        <pt x="1032" y="366" on="1"/>
        <pt x="1032" y="202" on="0"/>
        <pt x="804" y="2" on="0"/>
        <pt x="607" y="0" on="1"/>
        <pt x="138" y="0" on="1"/>
        <pt x="138" y="1165" on="1"/>
        <pt x="323" y="1165" on="1"/>
        <pt x="323" y="727" on="1"/>
        <pt x="596" y="727" on="1"/>
        <pt x="802" y="727" on="0"/>
        <pt x="1032" y="531" on="0"/>
      </contour>
      <contour>
        <pt x="600" y="152" on="1"/>
        <pt x="715" y="152" on="0"/>
        <pt x="847" y="271" on="0"/>
        <pt x="847" y="368" on="1"/>
        <pt x="847" y="459" on="0"/>
        <pt x="722" y="572" on="0"/>
        <pt x="612" y="575" on="1"/>
        <pt x="323" y="575" on="1"/>
        <pt x="323" y="152" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          8 20 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          8 5 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          11 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          17 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00521" xMin="75" yMin="-16" xMax="1051" yMax="1181">
      <contour>
        <pt x="260" y="377" on="1"/>
        <pt x="280" y="246" on="0"/>
        <pt x="421" y="135" on="0"/>
        <pt x="556" y="135" on="1"/>
        <pt x="697" y="135" on="0"/>
        <pt x="859" y="322" on="0"/>
        <pt x="866" y="507" on="1"/>
        <pt x="419" y="507" on="1"/>
        <pt x="419" y="659" on="1"/>
        <pt x="865" y="659" on="1"/>
        <pt x="860" y="834" on="0"/>
        <pt x="697" y="1029" on="0"/>
        <pt x="545" y="1029" on="1"/>
        <pt x="419" y="1029" on="0"/>
        <pt x="278" y="913" on="0"/>
        <pt x="260" y="783" on="1"/>
        <pt x="75" y="783" on="1"/>
        <pt x="94" y="970" on="0"/>
        <pt x="341" y="1181" on="0"/>
        <pt x="545" y="1181" on="1"/>
        <pt x="773" y="1181" on="0"/>
        <pt x="1046" y="892" on="0"/>
        <pt x="1051" y="648" on="1"/>
        <pt x="1051" y="531" on="1"/>
        <pt x="1051" y="368" on="0"/>
        <pt x="931" y="119" on="0"/>
        <pt x="705" y="-16" on="0"/>
        <pt x="556" y="-16" on="1"/>
        <pt x="349" y="-16" on="0"/>
        <pt x="95" y="190" on="0"/>
        <pt x="75" y="377" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          3 31 32
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          19 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          27
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          27 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 27 19
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          3 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          9 19 27
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RUTG[ ]	/* RoundUpToGrid */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSH[ ]	/* 3 values pushed */
          160 9 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          96 9 112 9 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          48 9 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 5 values pushed */
          96 9 112 9 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 3 values pushed */
          6 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          12 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          15 19 27
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00522" xMin="138" yMin="-16" xMax="1557" yMax="1181">
      <contour>
        <pt x="1557" y="548" on="1"/>
        <pt x="1557" y="287" on="0"/>
        <pt x="1281" y="-16" on="0"/>
        <pt x="1049" y="-16" on="1"/>
        <pt x="828" y="-16" on="0"/>
        <pt x="551" y="268" on="0"/>
        <pt x="539" y="510" on="1"/>
        <pt x="323" y="510" on="1"/>
        <pt x="323" y="0" on="1"/>
        <pt x="138" y="0" on="1"/>
        <pt x="138" y="1165" on="1"/>
        <pt x="323" y="1165" on="1"/>
        <pt x="323" y="662" on="1"/>
        <pt x="539" y="662" on="1"/>
        <pt x="553" y="903" on="0"/>
        <pt x="829" y="1181" on="0"/>
        <pt x="1047" y="1181" on="1"/>
        <pt x="1280" y="1181" on="0"/>
        <pt x="1555" y="877" on="0"/>
        <pt x="1557" y="622" on="1"/>
      </contour>
      <contour>
        <pt x="1374" y="617" on="1"/>
        <pt x="1374" y="815" on="0"/>
        <pt x="1202" y="1025" on="0"/>
        <pt x="1047" y="1025" on="1"/>
        <pt x="897" y="1025" on="0"/>
        <pt x="722" y="811" on="0"/>
        <pt x="722" y="614" on="1"/>
        <pt x="722" y="548" on="1"/>
        <pt x="722" y="353" on="0"/>
        <pt x="898" y="138" on="0"/>
        <pt x="1049" y="138" on="1"/>
        <pt x="1205" y="138" on="0"/>
        <pt x="1374" y="349" on="0"/>
        <pt x="1374" y="548" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          4 34 35
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          16 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          13 8 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RUTG[ ]	/* RoundUpToGrid */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSH[ ]	/* 5 values pushed */
          96 13 112 13 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 3 values pushed */
          160 13 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          96 13 112 13 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          6 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          23 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          30 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00523" xMin="80" yMin="0" xMax="1020" yMax="1165">
      <contour>
        <pt x="80" y="0" on="1"/>
        <pt x="370" y="525" on="1"/>
        <pt x="248" y="563" on="0"/>
        <pt x="135" y="720" on="0"/>
        <pt x="135" y="824" on="1"/>
        <pt x="135" y="985" on="0"/>
        <pt x="355" y="1163" on="0"/>
        <pt x="555" y="1165" on="1"/>
        <pt x="1020" y="1165" on="1"/>
        <pt x="1020" y="0" on="1"/>
        <pt x="835" y="0" on="1"/>
        <pt x="835" y="479" on="1"/>
        <pt x="531" y="479" on="1"/>
        <pt x="276" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="322" y="816" on="1"/>
        <pt x="322" y="636" on="0"/>
        <pt x="552" y="632" on="1"/>
        <pt x="835" y="632" on="1"/>
        <pt x="835" y="1012" on="1"/>
        <pt x="562" y="1012" on="1"/>
        <pt x="322" y="1012" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          19 21 22
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          17 7 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          11 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          1 11 7
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          18 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00524" xMin="11" yMin="0" xMax="999" yMax="1165">
      <contour>
        <pt x="647" y="509" on="1"/>
        <pt x="421" y="509" on="1"/>
        <pt x="421" y="0" on="1"/>
        <pt x="236" y="0" on="1"/>
        <pt x="236" y="509" on="1"/>
        <pt x="11" y="509" on="1"/>
        <pt x="11" y="660" on="1"/>
        <pt x="236" y="660" on="1"/>
        <pt x="236" y="1165" on="1"/>
        <pt x="999" y="1165" on="1"/>
        <pt x="999" y="1012" on="1"/>
        <pt x="421" y="1012" on="1"/>
        <pt x="421" y="660" on="1"/>
        <pt x="647" y="660" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          1 14 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          13 8 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          10 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00525" xMin="31" yMin="-340" xMax="1570" yMax="1165">
      <contour>
        <pt x="1123" y="602" on="1"/>
        <pt x="1417" y="150" on="1"/>
        <pt x="1570" y="150" on="1"/>
        <pt x="1570" y="-340" on="1"/>
        <pt x="1403" y="-340" on="1"/>
        <pt x="1403" y="0" on="1"/>
        <pt x="1281" y="0" on="1"/>
        <pt x="965" y="502" on="1"/>
        <pt x="866" y="502" on="1"/>
        <pt x="866" y="0" on="1"/>
        <pt x="680" y="0" on="1"/>
        <pt x="680" y="502" on="1"/>
        <pt x="580" y="502" on="1"/>
        <pt x="265" y="0" on="1"/>
        <pt x="31" y="0" on="1"/>
        <pt x="421" y="593" on="1"/>
        <pt x="67" y="1165" on="1"/>
        <pt x="291" y="1165" on="1"/>
        <pt x="591" y="656" on="1"/>
        <pt x="680" y="656" on="1"/>
        <pt x="680" y="1165" on="1"/>
        <pt x="866" y="1165" on="1"/>
        <pt x="866" y="656" on="1"/>
        <pt x="955" y="656" on="1"/>
        <pt x="1255" y="1165" on="1"/>
        <pt x="1479" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          8 26 27
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          16 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          20
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          20 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          24
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          24 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          23 10 24
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RUTG[ ]	/* RoundUpToGrid */
          PUSH[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSH[ ]	/* 3 values pushed */
          160 23 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          96 23 112 23 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          96 23 112 23 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 3 values pushed */
          7 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 7 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          1 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          15 23 7
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          18
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00526" xMin="139" yMin="-340" xMax="1102" yMax="1165">
      <contour>
        <pt x="577" y="594" on="1"/>
        <pt x="944" y="150" on="1"/>
        <pt x="1102" y="150" on="1"/>
        <pt x="1102" y="-340" on="1"/>
        <pt x="934" y="-340" on="1"/>
        <pt x="934" y="0" on="1"/>
        <pt x="829" y="0" on="1"/>
        <pt x="430" y="502" on="1"/>
        <pt x="324" y="502" on="1"/>
        <pt x="324" y="0" on="1"/>
        <pt x="139" y="0" on="1"/>
        <pt x="139" y="1165" on="1"/>
        <pt x="324" y="1165" on="1"/>
        <pt x="324" y="656" on="1"/>
        <pt x="424" y="656" on="1"/>
        <pt x="813" y="1165" on="1"/>
        <pt x="1036" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          0 17 18
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          15 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          13 9 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RUTG[ ]	/* RoundUpToGrid */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSH[ ]	/* 5 values pushed */
          96 13 112 13 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 3 values pushed */
          160 13 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          96 13 112 13 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          8 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 8 13
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          1 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00527" xMin="139" yMin="0" xMax="1255" yMax="1165">
      <contour>
        <pt x="324" y="656" on="1"/>
        <pt x="404" y="656" on="1"/>
        <pt x="404" y="884" on="1"/>
        <pt x="552" y="884" on="1"/>
        <pt x="552" y="656" on="1"/>
        <pt x="612" y="656" on="1"/>
        <pt x="1000" y="1165" on="1"/>
        <pt x="1224" y="1165" on="1"/>
        <pt x="764" y="594" on="1"/>
        <pt x="1255" y="0" on="1"/>
        <pt x="1016" y="0" on="1"/>
        <pt x="617" y="502" on="1"/>
        <pt x="552" y="502" on="1"/>
        <pt x="552" y="296" on="1"/>
        <pt x="404" y="296" on="1"/>
        <pt x="404" y="502" on="1"/>
        <pt x="324" y="502" on="1"/>
        <pt x="324" y="0" on="1"/>
        <pt x="139" y="0" on="1"/>
        <pt x="139" y="1165" on="1"/>
        <pt x="324" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          11 21 22
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          19 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          17 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 17 19
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RUTG[ ]	/* RoundUpToGrid */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSH[ ]	/* 3 values pushed */
          160 0 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          96 0 112 0 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          96 0 112 0 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          16 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          8 16 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00528" xMin="35" yMin="0" xMax="1301" yMax="1165">
      <contour>
        <pt x="663" y="502" on="1"/>
        <pt x="558" y="502" on="1"/>
        <pt x="558" y="0" on="1"/>
        <pt x="372" y="0" on="1"/>
        <pt x="372" y="1013" on="1"/>
        <pt x="35" y="1013" on="1"/>
        <pt x="35" y="1165" on="1"/>
        <pt x="558" y="1165" on="1"/>
        <pt x="558" y="656" on="1"/>
        <pt x="657" y="656" on="1"/>
        <pt x="1046" y="1165" on="1"/>
        <pt x="1270" y="1165" on="1"/>
        <pt x="810" y="594" on="1"/>
        <pt x="1301" y="0" on="1"/>
        <pt x="1062" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          0 15 16
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          8 2 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RUTG[ ]	/* RoundUpToGrid */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSH[ ]	/* 3 values pushed */
          160 8 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          96 8 112 8 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          96 8 112 8 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 3 values pushed */
          1 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          4 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          12 1 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00529" xMin="96" yMin="-21" xMax="1371" yMax="1183">
      <contour>
        <pt x="1371" y="-20" on="1"/>
        <pt x="1154" y="-20" on="0"/>
        <pt x="988" y="39" on="1"/>
        <pt x="851" y="-21" on="0"/>
        <pt x="688" y="-21" on="1"/>
        <pt x="410" y="-21" on="0"/>
        <pt x="96" y="304" on="0"/>
        <pt x="96" y="602" on="1"/>
        <pt x="96" y="628" on="1"/>
        <pt x="96" y="887" on="0"/>
        <pt x="340" y="1183" on="0"/>
        <pt x="550" y="1183" on="1"/>
        <pt x="551" y="1025" on="1"/>
        <pt x="425" y="1025" on="0"/>
        <pt x="281" y="830" on="0"/>
        <pt x="281" y="630" on="1"/>
        <pt x="281" y="597" on="1"/>
        <pt x="281" y="365" on="0"/>
        <pt x="489" y="136" on="0"/>
        <pt x="688" y="136" on="1"/>
        <pt x="742" y="136" on="0"/>
        <pt x="792" y="144" on="1"/>
        <pt x="565" y="322" on="0"/>
        <pt x="564" y="647" on="1"/>
        <pt x="564" y="686" on="1"/>
        <pt x="564" y="921" on="0"/>
        <pt x="771" y="1181" on="0"/>
        <pt x="952" y="1181" on="1"/>
        <pt x="1136" y="1181" on="0"/>
        <pt x="1341" y="924" on="0"/>
        <pt x="1341" y="683" on="1"/>
        <pt x="1341" y="627" on="1"/>
        <pt x="1341" y="333" on="0"/>
        <pt x="1159" y="155" on="1"/>
        <pt x="1253" y="137" on="0"/>
        <pt x="1371" y="137" on="1"/>
      </contour>
      <contour>
        <pt x="749" y="646" on="1"/>
        <pt x="749" y="338" on="0"/>
        <pt x="974" y="217" on="1"/>
        <pt x="1156" y="346" on="0"/>
        <pt x="1156" y="632" on="1"/>
        <pt x="1156" y="688" on="1"/>
        <pt x="1156" y="860" on="0"/>
        <pt x="1058" y="1023" on="0"/>
        <pt x="952" y="1023" on="1"/>
        <pt x="754" y="1023" on="0"/>
        <pt x="749" y="706" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          20 47 48
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          36
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          27
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          27 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          2 4 27
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          12 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          19 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          38 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          21 19 38
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          33 2 38
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          27
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          44 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00530" xMin="13" yMin="0" xMax="1052" yMax="1165">
      <component glyphName="glyph00467" x="0" y="0" flags="0x4"/>
      <component glyphName="glyph00550" x="68" y="-290" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 3 values pushed */
          0 10 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00531" xMin="38" yMin="-340" xMax="1137" yMax="1165">
      <contour>
        <pt x="552" y="730" on="1"/>
        <pt x="839" y="1165" on="1"/>
        <pt x="1059" y="1165" on="1"/>
        <pt x="664" y="587" on="1"/>
        <pt x="969" y="149" on="1"/>
        <pt x="969" y="150" on="1"/>
        <pt x="1137" y="150" on="1"/>
        <pt x="1137" y="-340" on="1"/>
        <pt x="969" y="-340" on="1"/>
        <pt x="969" y="0" on="1"/>
        <pt x="853" y="0" on="1"/>
        <pt x="554" y="443" on="1"/>
        <pt x="258" y="0" on="1"/>
        <pt x="38" y="0" on="1"/>
        <pt x="444" y="587" on="1"/>
        <pt x="47" y="1165" on="1"/>
        <pt x="266" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          11 17 18
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          15 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 1 12
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          11 12 1
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          3 11 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          4 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          14 0 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00532" xMin="38" yMin="-340" xMax="1522" yMax="1165">
      <contour>
        <pt x="1348" y="152" on="1"/>
        <pt x="1522" y="152" on="1"/>
        <pt x="1504" y="-340" on="1"/>
        <pt x="1339" y="-340" on="1"/>
        <pt x="1339" y="0" on="1"/>
        <pt x="395" y="0" on="1"/>
        <pt x="395" y="1012" on="1"/>
        <pt x="38" y="1012" on="1"/>
        <pt x="38" y="1165" on="1"/>
        <pt x="943" y="1165" on="1"/>
        <pt x="943" y="1012" on="1"/>
        <pt x="580" y="1012" on="1"/>
        <pt x="580" y="152" on="1"/>
        <pt x="1162" y="152" on="1"/>
        <pt x="1162" y="1165" on="1"/>
        <pt x="1348" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          9 16 17
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          14 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          6 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          10
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00533" xMin="61" yMin="0" xMax="991" yMax="1165">
      <contour>
        <pt x="991" y="0" on="1"/>
        <pt x="806" y="0" on="1"/>
        <pt x="806" y="450" on="1"/>
        <pt x="707" y="417" on="0"/>
        <pt x="602" y="406" on="1"/>
        <pt x="602" y="208" on="1"/>
        <pt x="453" y="208" on="1"/>
        <pt x="453" y="403" on="1"/>
        <pt x="265" y="413" on="0"/>
        <pt x="64" y="614" on="0"/>
        <pt x="61" y="800" on="1"/>
        <pt x="61" y="1165" on="1"/>
        <pt x="246" y="1165" on="1"/>
        <pt x="246" y="810" on="1"/>
        <pt x="246" y="687" on="0"/>
        <pt x="349" y="567" on="0"/>
        <pt x="453" y="556" on="1"/>
        <pt x="453" y="796" on="1"/>
        <pt x="602" y="796" on="1"/>
        <pt x="602" y="559" on="1"/>
        <pt x="705" y="570" on="0"/>
        <pt x="806" y="604" on="1"/>
        <pt x="806" y="1165" on="1"/>
        <pt x="991" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          4 24 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          22
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          22 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          16 11 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          7 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00534" xMin="138" yMin="0" xMax="1068" yMax="1165">
      <contour>
        <pt x="138" y="1165" on="1"/>
        <pt x="323" y="1165" on="1"/>
        <pt x="323" y="715" on="1"/>
        <pt x="477" y="764" on="0"/>
        <pt x="630" y="764" on="1"/>
        <pt x="842" y="764" on="0"/>
        <pt x="1064" y="562" on="0"/>
        <pt x="1068" y="369" on="1"/>
        <pt x="1068" y="0" on="1"/>
        <pt x="883" y="0" on="1"/>
        <pt x="883" y="356" on="1"/>
        <pt x="883" y="491" on="0"/>
        <pt x="757" y="612" on="0"/>
        <pt x="630" y="612" on="1"/>
        <pt x="478" y="612" on="0"/>
        <pt x="323" y="561" on="1"/>
        <pt x="323" y="0" on="1"/>
        <pt x="138" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          4 18 19
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          16 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          4 0 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          13 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00535" xMin="2" yMin="-16" xMax="1387" yMax="1181">
      <contour>
        <pt x="913" y="-16" on="1"/>
        <pt x="658" y="-16" on="0"/>
        <pt x="352" y="274" on="0"/>
        <pt x="352" y="517" on="1"/>
        <pt x="186" y="528" on="0"/>
        <pt x="2" y="726" on="0"/>
        <pt x="2" y="894" on="1"/>
        <pt x="155" y="894" on="1"/>
        <pt x="155" y="800" on="0"/>
        <pt x="250" y="681" on="0"/>
        <pt x="352" y="669" on="1"/>
        <pt x="357" y="816" on="0"/>
        <pt x="492" y="1052" on="0"/>
        <pt x="725" y="1181" on="0"/>
        <pt x="867" y="1181" on="1"/>
        <pt x="1115" y="1181" on="0"/>
        <pt x="1387" y="904" on="0"/>
        <pt x="1387" y="645" on="1"/>
        <pt x="1387" y="515" on="1"/>
        <pt x="537" y="515" on="1"/>
        <pt x="537" y="338" on="0"/>
        <pt x="730" y="146" on="0"/>
        <pt x="913" y="146" on="1"/>
        <pt x="989" y="146" on="0"/>
        <pt x="1124" y="177" on="0"/>
        <pt x="1204" y="217" on="1"/>
        <pt x="1261" y="71" on="1"/>
        <pt x="1201" y="31" on="0"/>
        <pt x="1017" y="-16" on="0"/>
      </contour>
      <contour>
        <pt x="867" y="1025" on="1"/>
        <pt x="724" y="1025" on="0"/>
        <pt x="543" y="831" on="0"/>
        <pt x="537" y="667" on="1"/>
        <pt x="1202" y="667" on="1"/>
        <pt x="1202" y="694" on="1"/>
        <pt x="1202" y="855" on="0"/>
        <pt x="1028" y="1025" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          21 37 38
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          14 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          33 14 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          33
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          191 33 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          18 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          33
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          10
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          22 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          29 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00536" xMin="94" yMin="-16" xMax="1129" yMax="1181">
      <contour>
        <pt x="583" y="1181" on="1"/>
        <pt x="830" y="1181" on="0"/>
        <pt x="1127" y="893" on="0"/>
        <pt x="1129" y="654" on="1"/>
        <pt x="1129" y="518" on="1"/>
        <pt x="1129" y="365" on="0"/>
        <pt x="997" y="121" on="0"/>
        <pt x="761" y="-16" on="0"/>
        <pt x="614" y="-16" on="1"/>
        <pt x="366" y="-16" on="0"/>
        <pt x="94" y="261" on="0"/>
        <pt x="94" y="518" on="1"/>
        <pt x="94" y="648" on="1"/>
        <pt x="944" y="648" on="1"/>
        <pt x="944" y="649" on="1"/>
        <pt x="944" y="826" on="0"/>
        <pt x="751" y="1019" on="0"/>
        <pt x="568" y="1019" on="1"/>
        <pt x="421" y="1019" on="0"/>
        <pt x="277" y="947" on="1"/>
        <pt x="220" y="1093" on="1"/>
        <pt x="285" y="1134" on="0"/>
        <pt x="477" y="1181" on="0"/>
      </contour>
      <contour>
        <pt x="614" y="138" on="1"/>
        <pt x="759" y="138" on="0"/>
        <pt x="938" y="336" on="0"/>
        <pt x="944" y="497" on="1"/>
        <pt x="279" y="497" on="1"/>
        <pt x="279" y="470" on="1"/>
        <pt x="279" y="310" on="0"/>
        <pt x="452" y="138" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          8 31 32
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          23
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          13 0 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          17 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          23 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          26 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00537" xMin="71" yMin="-19" xMax="980" yMax="1165">
      <contour>
        <pt x="691" y="1012" on="1"/>
        <pt x="111" y="1012" on="1"/>
        <pt x="111" y="1165" on="1"/>
        <pt x="935" y="1165" on="1"/>
        <pt x="937" y="1047" on="1"/>
        <pt x="594" y="690" on="1"/>
        <pt x="771" y="674" on="0"/>
        <pt x="980" y="477" on="0"/>
        <pt x="980" y="338" on="1"/>
        <pt x="980" y="171" on="0"/>
        <pt x="728" y="-19" on="0"/>
        <pt x="513" y="-19" on="1"/>
        <pt x="424" y="-19" on="0"/>
        <pt x="253" y="26" on="0"/>
        <pt x="193" y="72" on="1"/>
        <pt x="71" y="162" on="0"/>
        <pt x="71" y="320" on="1"/>
        <pt x="256" y="320" on="1"/>
        <pt x="261" y="231" on="0"/>
        <pt x="398" y="131" on="0"/>
        <pt x="513" y="131" on="1"/>
        <pt x="649" y="131" on="0"/>
        <pt x="795" y="235" on="0"/>
        <pt x="795" y="341" on="1"/>
        <pt x="795" y="436" on="0"/>
        <pt x="657" y="542" on="0"/>
        <pt x="523" y="542" on="1"/>
        <pt x="395" y="542" on="1"/>
        <pt x="395" y="707" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          26 29 30
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          4 0 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          5 11 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          17 11 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          20 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          26 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          28 5 26
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00538" xMin="96" yMin="-16" xMax="1114" yMax="1181">
      <contour>
        <pt x="1114" y="548" on="1"/>
        <pt x="1114" y="287" on="0"/>
        <pt x="838" y="-16" on="0"/>
        <pt x="606" y="-16" on="1"/>
        <pt x="377" y="-16" on="0"/>
        <pt x="96" y="290" on="0"/>
        <pt x="96" y="553" on="1"/>
        <pt x="96" y="615" on="1"/>
        <pt x="96" y="873" on="0"/>
        <pt x="375" y="1181" on="0"/>
        <pt x="604" y="1181" on="1"/>
        <pt x="837" y="1181" on="0"/>
        <pt x="1112" y="877" on="0"/>
        <pt x="1114" y="622" on="1"/>
      </contour>
      <contour>
        <pt x="606" y="138" on="1"/>
        <pt x="753" y="138" on="0"/>
        <pt x="921" y="326" on="0"/>
        <pt x="930" y="506" on="1"/>
        <pt x="280" y="506" on="1"/>
        <pt x="290" y="330" on="0"/>
        <pt x="463" y="138" on="0"/>
      </contour>
      <contour>
        <pt x="604" y="1025" on="1"/>
        <pt x="459" y="1025" on="0"/>
        <pt x="288" y="830" on="0"/>
        <pt x="280" y="658" on="1"/>
        <pt x="930" y="658" on="1"/>
        <pt x="921" y="837" on="0"/>
        <pt x="751" y="1025" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          3 28 29
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          14 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          25 10 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RUTG[ ]	/* RoundUpToGrid */
          PUSH[ ]	/* 1 value pushed */
          25
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSH[ ]	/* 3 values pushed */
          160 25 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          96 25 112 25 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          96 25 112 25 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 3 values pushed */
          17 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          21 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00539" xMin="48" yMin="0" xMax="1007" yMax="1181">
      <contour>
        <pt x="391" y="680" on="1"/>
        <pt x="797" y="680" on="1"/>
        <pt x="797" y="559" on="1"/>
        <pt x="395" y="559" on="1"/>
        <pt x="398" y="466" on="1"/>
        <pt x="398" y="450" on="1"/>
        <pt x="797" y="450" on="1"/>
        <pt x="797" y="329" on="1"/>
        <pt x="393" y="329" on="1"/>
        <pt x="383" y="223" on="0"/>
        <pt x="347" y="152" on="1"/>
        <pt x="1007" y="152" on="1"/>
        <pt x="1006" y="0" on="1"/>
        <pt x="114" y="0" on="1"/>
        <pt x="114" y="152" on="1"/>
        <pt x="124" y="152" on="1"/>
        <pt x="187" y="170" on="0"/>
        <pt x="207" y="329" on="1"/>
        <pt x="48" y="329" on="1"/>
        <pt x="48" y="450" on="1"/>
        <pt x="213" y="450" on="1"/>
        <pt x="213" y="466" on="1"/>
        <pt x="210" y="559" on="1"/>
        <pt x="48" y="559" on="1"/>
        <pt x="48" y="680" on="1"/>
        <pt x="206" y="680" on="1"/>
        <pt x="204" y="744" on="1"/>
        <pt x="198" y="945" on="0"/>
        <pt x="401" y="1181" on="0"/>
        <pt x="582" y="1181" on="1"/>
        <pt x="765" y="1181" on="0"/>
        <pt x="967" y="977" on="0"/>
        <pt x="967" y="794" on="1"/>
        <pt x="782" y="794" on="1"/>
        <pt x="782" y="906" on="0"/>
        <pt x="678" y="1025" on="0"/>
        <pt x="582" y="1025" on="1"/>
        <pt x="489" y="1025" on="0"/>
        <pt x="385" y="882" on="0"/>
        <pt x="389" y="744" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          29 40 41
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          29
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          29 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          6 29 12
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          15 6 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 3 values pushed */
          15 6 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          79 6 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 1 value pushed */
          1
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 9 values pushed */
          31 1 47 1 63 1 79 1 4
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          0 1 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          2 4 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          7 4 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          10 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          33 1 29
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          29
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          36 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00540" xMin="66" yMin="-16" xMax="926" yMax="1181">
      <contour>
        <pt x="815" y="406" on="1"/>
        <pt x="407" y="406" on="1"/>
        <pt x="439" y="135" on="0"/>
        <pt x="697" y="135" on="1"/>
        <pt x="795" y="135" on="0"/>
        <pt x="899" y="163" on="1"/>
        <pt x="926" y="14" on="1"/>
        <pt x="808" y="-16" on="0"/>
        <pt x="697" y="-16" on="1"/>
        <pt x="486" y="-16" on="0"/>
        <pt x="241" y="202" on="0"/>
        <pt x="221" y="406" on="1"/>
        <pt x="66" y="406" on="1"/>
        <pt x="66" y="527" on="1"/>
        <pt x="217" y="527" on="1"/>
        <pt x="217" y="636" on="1"/>
        <pt x="66" y="636" on="1"/>
        <pt x="66" y="757" on="1"/>
        <pt x="221" y="757" on="1"/>
        <pt x="243" y="961" on="0"/>
        <pt x="488" y="1181" on="0"/>
        <pt x="695" y="1181" on="1"/>
        <pt x="791" y="1181" on="0"/>
        <pt x="926" y="1150" on="1"/>
        <pt x="905" y="1001" on="1"/>
        <pt x="816" y="1029" on="0"/>
        <pt x="695" y="1029" on="1"/>
        <pt x="439" y="1029" on="0"/>
        <pt x="407" y="757" on="1"/>
        <pt x="815" y="757" on="1"/>
        <pt x="815" y="636" on="1"/>
        <pt x="403" y="636" on="1"/>
        <pt x="403" y="527" on="1"/>
        <pt x="815" y="527" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          20 34 35
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          21 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          33 21 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          33
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          15 33 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          16 33 32 33 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          0 4 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          3 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          33
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          33
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          18
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          18
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 9 values pushed */
          31 18 47 18 63 18 79 18 4
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          0 18 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          15 4 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          26 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          28
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00541" xMin="138" yMin="0" xMax="1965" yMax="1181">
      <contour>
        <pt x="1902" y="189" on="1"/>
        <pt x="1345" y="189" on="1"/>
        <pt x="1345" y="331" on="1"/>
        <pt x="1902" y="331" on="1"/>
      </contour>
      <contour>
        <pt x="1280" y="846" on="1"/>
        <pt x="1280" y="995" on="0"/>
        <pt x="1468" y="1181" on="0"/>
        <pt x="1776" y="1181" on="0"/>
        <pt x="1965" y="997" on="0"/>
        <pt x="1965" y="842" on="1"/>
        <pt x="1965" y="762" on="1"/>
        <pt x="1965" y="610" on="0"/>
        <pt x="1775" y="428" on="0"/>
        <pt x="1624" y="428" on="1"/>
        <pt x="1471" y="428" on="0"/>
        <pt x="1280" y="611" on="0"/>
        <pt x="1280" y="767" on="1"/>
      </contour>
      <contour>
        <pt x="1443" y="762" on="1"/>
        <pt x="1443" y="673" on="0"/>
        <pt x="1537" y="567" on="0"/>
        <pt x="1624" y="567" on="1"/>
        <pt x="1708" y="567" on="0"/>
        <pt x="1802" y="672" on="0"/>
        <pt x="1802" y="764" on="1"/>
        <pt x="1802" y="846" on="1"/>
        <pt x="1802" y="936" on="0"/>
        <pt x="1705" y="1040" on="0"/>
        <pt x="1622" y="1040" on="1"/>
        <pt x="1540" y="1040" on="0"/>
        <pt x="1443" y="937" on="0"/>
        <pt x="1443" y="843" on="1"/>
      </contour>
      <contour>
        <pt x="1112" y="0" on="1"/>
        <pt x="928" y="0" on="1"/>
        <pt x="323" y="876" on="1"/>
        <pt x="323" y="0" on="1"/>
        <pt x="138" y="0" on="1"/>
        <pt x="138" y="1165" on="1"/>
        <pt x="323" y="1165" on="1"/>
        <pt x="928" y="288" on="1"/>
        <pt x="928" y="1165" on="1"/>
        <pt x="1112" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          31 41 42
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          1
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          39
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          39 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          37
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          37 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          34
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          34 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          32
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          32 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 5 values pushed */
          0 2 16 2 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          1 3 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          20 3 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          27 3 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          33 39 32
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          38 32 39
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00542" xMin="40" yMin="0" xMax="1126" yMax="1165">
      <contour>
        <pt x="676" y="180" on="1"/>
        <pt x="418" y="180" on="1"/>
        <pt x="418" y="0" on="1"/>
        <pt x="232" y="0" on="1"/>
        <pt x="232" y="180" on="1"/>
        <pt x="40" y="180" on="1"/>
        <pt x="40" y="332" on="1"/>
        <pt x="232" y="332" on="1"/>
        <pt x="232" y="421" on="1"/>
        <pt x="40" y="421" on="1"/>
        <pt x="40" y="573" on="1"/>
        <pt x="232" y="573" on="1"/>
        <pt x="232" y="1165" on="1"/>
        <pt x="695" y="1165" on="1"/>
        <pt x="892" y="1165" on="0"/>
        <pt x="1126" y="961" on="0"/>
        <pt x="1126" y="793" on="1"/>
        <pt x="1126" y="628" on="0"/>
        <pt x="899" y="425" on="0"/>
        <pt x="709" y="421" on="1"/>
        <pt x="418" y="421" on="1"/>
        <pt x="418" y="332" on="1"/>
        <pt x="676" y="332" on="1"/>
      </contour>
      <contour>
        <pt x="418" y="573" on="1"/>
        <pt x="695" y="573" on="1"/>
        <pt x="809" y="573" on="0"/>
        <pt x="940" y="693" on="0"/>
        <pt x="940" y="791" on="1"/>
        <pt x="940" y="891" on="0"/>
        <pt x="808" y="1013" on="0"/>
        <pt x="696" y="1013" on="1"/>
        <pt x="418" y="1013" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          0 32 33
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          22 12 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          22
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          22
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          22
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 9 values pushed */
          15 11 31 11 47 11 63 11 4
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          191 11 207 11 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          8 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          23
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          30 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00543" xMin="62" yMin="-11" xMax="666" yMax="800">
      <contour>
        <pt x="265" y="459" on="1"/>
        <pt x="349" y="459" on="1"/>
        <pt x="423" y="459" on="0"/>
        <pt x="495" y="520" on="0"/>
        <pt x="495" y="568" on="1"/>
        <pt x="495" y="613" on="0"/>
        <pt x="432" y="671" on="0"/>
        <pt x="362" y="671" on="1"/>
        <pt x="305" y="671" on="0"/>
        <pt x="230" y="620" on="0"/>
        <pt x="230" y="579" on="1"/>
        <pt x="73" y="579" on="1"/>
        <pt x="73" y="677" on="0"/>
        <pt x="236" y="800" on="0"/>
        <pt x="360" y="800" on="1"/>
        <pt x="497" y="800" on="0"/>
        <pt x="653" y="679" on="0"/>
        <pt x="653" y="575" on="1"/>
        <pt x="653" y="520" on="0"/>
        <pt x="583" y="429" on="0"/>
        <pt x="517" y="404" on="1"/>
        <pt x="666" y="363" on="0"/>
        <pt x="666" y="220" on="1"/>
        <pt x="666" y="114" on="0"/>
        <pt x="496" y="-11" on="0"/>
        <pt x="360" y="-11" on="1"/>
        <pt x="228" y="-11" on="0"/>
        <pt x="62" y="115" on="0"/>
        <pt x="62" y="222" on="1"/>
        <pt x="220" y="222" on="1"/>
        <pt x="220" y="177" on="0"/>
        <pt x="299" y="117" on="0"/>
        <pt x="366" y="117" on="1"/>
        <pt x="436" y="117" on="0"/>
        <pt x="509" y="177" on="0"/>
        <pt x="509" y="228" on="1"/>
        <pt x="509" y="341" on="0"/>
        <pt x="353" y="343" on="1"/>
        <pt x="265" y="343" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          14 24
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          25
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          25 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 25 14
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RUTG[ ]	/* RoundUpToGrid */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSH[ ]	/* 7 values pushed */
          128 0 144 0 160 0 3
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          7 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          10 0 7
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          38 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          20 38 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          32 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          29 38 32
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00544" xMin="54" yMin="0" xMax="699" yMax="789">
      <contour>
        <pt x="592" y="299" on="1"/>
        <pt x="699" y="299" on="1"/>
        <pt x="699" y="169" on="1"/>
        <pt x="592" y="169" on="1"/>
        <pt x="592" y="0" on="1"/>
        <pt x="435" y="0" on="1"/>
        <pt x="435" y="169" on="1"/>
        <pt x="60" y="169" on="1"/>
        <pt x="54" y="271" on="1"/>
        <pt x="431" y="789" on="1"/>
        <pt x="592" y="789" on="1"/>
      </contour>
      <contour>
        <pt x="212" y="299" on="1"/>
        <pt x="435" y="299" on="1"/>
        <pt x="435" y="588" on="1"/>
        <pt x="418" y="560" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 24
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          1 9 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          2 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          8 11 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          13 9 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00545" xMin="91" yMin="-11" xMax="679" yMax="789">
      <contour>
        <pt x="112" y="387" on="1"/>
        <pt x="162" y="789" on="1"/>
        <pt x="640" y="789" on="1"/>
        <pt x="640" y="657" on="1"/>
        <pt x="291" y="657" on="1"/>
        <pt x="269" y="487" on="1"/>
        <pt x="334" y="516" on="0"/>
        <pt x="408" y="516" on="1"/>
        <pt x="536" y="516" on="0"/>
        <pt x="679" y="379" on="0"/>
        <pt x="679" y="258" on="1"/>
        <pt x="679" y="134" on="0"/>
        <pt x="519" y="-11" on="0"/>
        <pt x="385" y="-11" on="1"/>
        <pt x="264" y="-11" on="0"/>
        <pt x="97" y="115" on="0"/>
        <pt x="91" y="216" on="1"/>
        <pt x="246" y="216" on="1"/>
        <pt x="256" y="117" on="0"/>
        <pt x="385" y="117" on="1"/>
        <pt x="450" y="117" on="0"/>
        <pt x="522" y="192" on="0"/>
        <pt x="522" y="260" on="1"/>
        <pt x="522" y="322" on="0"/>
        <pt x="444" y="399" on="0"/>
        <pt x="370" y="399" on="1"/>
        <pt x="297" y="399" on="0"/>
        <pt x="238" y="356" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 24
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          4 9 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          7 13 1
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          25 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          5 7 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          19 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          27
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00546" xMin="86" yMin="-11" xMax="683" yMax="798">
      <contour>
        <pt x="552" y="798" on="1"/>
        <pt x="552" y="667" on="1"/>
        <pt x="535" y="667" on="1"/>
        <pt x="267" y="665" on="0"/>
        <pt x="244" y="446" on="1"/>
        <pt x="316" y="523" on="0"/>
        <pt x="430" y="523" on="1"/>
        <pt x="548" y="523" on="0"/>
        <pt x="683" y="378" on="0"/>
        <pt x="683" y="259" on="1"/>
        <pt x="683" y="143" on="0"/>
        <pt x="524" y="-11" on="0"/>
        <pt x="392" y="-11" on="1"/>
        <pt x="253" y="-11" on="0"/>
        <pt x="86" y="155" on="0"/>
        <pt x="86" y="306" on="1"/>
        <pt x="86" y="357" on="1"/>
        <pt x="86" y="565" on="0"/>
        <pt x="308" y="793" on="0"/>
        <pt x="513" y="798" on="1"/>
      </contour>
      <contour>
        <pt x="387" y="396" on="1"/>
        <pt x="336" y="396" on="0"/>
        <pt x="259" y="352" on="0"/>
        <pt x="242" y="320" on="1"/>
        <pt x="242" y="286" on="1"/>
        <pt x="242" y="202" on="0"/>
        <pt x="325" y="117" on="0"/>
        <pt x="388" y="117" on="1"/>
        <pt x="449" y="117" on="0"/>
        <pt x="527" y="196" on="0"/>
        <pt x="527" y="320" on="0"/>
        <pt x="456" y="396" on="0"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 24
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          1 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          6 12 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          20 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          27 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00547" xMin="58" yMin="0" xMax="677" yMax="789">
      <contour>
        <pt x="677" y="699" on="1"/>
        <pt x="328" y="0" on="1"/>
        <pt x="162" y="0" on="1"/>
        <pt x="511" y="659" on="1"/>
        <pt x="58" y="659" on="1"/>
        <pt x="58" y="789" on="1"/>
        <pt x="677" y="789" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 24
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          4 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 5 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00548" xMin="79" yMin="-11" xMax="671" yMax="800">
      <contour>
        <pt x="651" y="579" on="1"/>
        <pt x="651" y="461" on="0"/>
        <pt x="532" y="406" on="1"/>
        <pt x="671" y="347" on="0"/>
        <pt x="671" y="216" on="1"/>
        <pt x="671" y="110" on="0"/>
        <pt x="511" y="-11" on="0"/>
        <pt x="239" y="-11" on="0"/>
        <pt x="79" y="110" on="0"/>
        <pt x="79" y="216" on="1"/>
        <pt x="79" y="282" on="0"/>
        <pt x="153" y="379" on="0"/>
        <pt x="217" y="406" on="1"/>
        <pt x="98" y="461" on="0"/>
        <pt x="98" y="579" on="1"/>
        <pt x="98" y="682" on="0"/>
        <pt x="249" y="800" on="0"/>
        <pt x="374" y="800" on="1"/>
        <pt x="500" y="800" on="0"/>
        <pt x="651" y="682" on="0"/>
      </contour>
      <contour>
        <pt x="514" y="228" on="1"/>
        <pt x="514" y="280" on="0"/>
        <pt x="436" y="338" on="0"/>
        <pt x="374" y="338" on="1"/>
        <pt x="311" y="338" on="0"/>
        <pt x="236" y="280" on="0"/>
        <pt x="236" y="228" on="1"/>
        <pt x="236" y="175" on="0"/>
        <pt x="312" y="117" on="0"/>
        <pt x="438" y="117" on="0"/>
        <pt x="514" y="175" on="0"/>
      </contour>
      <contour>
        <pt x="374" y="671" on="1"/>
        <pt x="319" y="671" on="0"/>
        <pt x="256" y="618" on="0"/>
        <pt x="256" y="570" on="1"/>
        <pt x="256" y="524" on="0"/>
        <pt x="319" y="468" on="0"/>
        <pt x="431" y="468" on="0"/>
        <pt x="494" y="524" on="0"/>
        <pt x="494" y="616" on="0"/>
        <pt x="430" y="671" on="0"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          17 24
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          36 6 17
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          36
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 7 values pushed */
          223 36 239 36 255 36 3
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 7 values pushed */
          15 36 31 36 47 36 3
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          255 36 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 5 values pushed */
          15 36 31 36 2
          DELTAP3[ ]	/* DeltaExceptionP3 */
          PUSH[ ]	/* 3 values pushed */
          23 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          2 36 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          12 23 36
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          29 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          17
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          31 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00549" xMin="73" yMin="-7" xMax="661" yMax="800">
      <contour>
        <pt x="502" y="320" on="1"/>
        <pt x="433" y="255" on="0"/>
        <pt x="332" y="255" on="1"/>
        <pt x="214" y="255" on="0"/>
        <pt x="73" y="393" on="0"/>
        <pt x="73" y="519" on="1"/>
        <pt x="73" y="640" on="0"/>
        <pt x="236" y="800" on="0"/>
        <pt x="365" y="800" on="1"/>
        <pt x="502" y="800" on="0"/>
        <pt x="658" y="635" on="0"/>
        <pt x="661" y="487" on="1"/>
        <pt x="661" y="426" on="1"/>
        <pt x="661" y="14" on="0"/>
        <pt x="264" y="-6" on="1"/>
        <pt x="209" y="-7" on="1"/>
        <pt x="209" y="120" on="1"/>
        <pt x="359" y="120" on="0"/>
        <pt x="491" y="218" on="0"/>
      </contour>
      <contour>
        <pt x="368" y="376" on="1"/>
        <pt x="462" y="376" on="0"/>
        <pt x="504" y="447" on="1"/>
        <pt x="504" y="507" on="1"/>
        <pt x="504" y="590" on="0"/>
        <pt x="425" y="670" on="0"/>
        <pt x="365" y="670" on="1"/>
        <pt x="306" y="670" on="0"/>
        <pt x="230" y="586" on="0"/>
        <pt x="230" y="519" on="1"/>
        <pt x="230" y="454" on="0"/>
        <pt x="304" y="376" on="0"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 24
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          15 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          2 15 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 7 values pushed */
          15 2 31 2 47 2 3
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          16 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          19 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          25 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00550" xMin="143" yMin="651" xMax="779" yMax="802">
      <contour>
        <pt x="779" y="651" on="1"/>
        <pt x="143" y="651" on="1"/>
        <pt x="143" y="802" on="1"/>
        <pt x="779" y="802" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          1 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00551" xMin="158" yMin="1088" xMax="622" yMax="1650">
      <contour>
        <pt x="433" y="1650" on="1"/>
        <pt x="622" y="1650" on="1"/>
        <pt x="402" y="1466" on="1"/>
        <pt x="288" y="1466" on="1"/>
      </contour>
      <contour>
        <pt x="158" y="1251" on="1"/>
        <pt x="158" y="1321" on="0"/>
        <pt x="258" y="1418" on="0"/>
        <pt x="330" y="1418" on="1"/>
        <pt x="398" y="1418" on="0"/>
        <pt x="497" y="1324" on="0"/>
        <pt x="497" y="1251" on="1"/>
        <pt x="497" y="1180" on="0"/>
        <pt x="400" y="1088" on="0"/>
        <pt x="330" y="1088" on="1"/>
        <pt x="258" y="1088" on="0"/>
        <pt x="158" y="1182" on="0"/>
      </contour>
      <contour>
        <pt x="243" y="1251" on="1"/>
        <pt x="243" y="1216" on="0"/>
        <pt x="294" y="1166" on="0"/>
        <pt x="330" y="1166" on="1"/>
        <pt x="365" y="1166" on="0"/>
        <pt x="413" y="1215" on="0"/>
        <pt x="413" y="1251" on="1"/>
        <pt x="413" y="1289" on="0"/>
        <pt x="365" y="1339" on="0"/>
        <pt x="330" y="1339" on="1"/>
        <pt x="293" y="1339" on="0"/>
        <pt x="243" y="1287" on="0"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 9 values pushed */
          63 7 79 7 95 7 111 7 4
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 7 values pushed */
          63 2 79 2 95 2 3
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 17 values pushed */
          15 0 31 0 47 0 63 0 79 0 95 0 111 0 127 0 8
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSH[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          19 7 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          25 7 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00552" xMin="138" yMin="0" xMax="942" yMax="1165">
      <contour>
        <pt x="855" y="526" on="1"/>
        <pt x="323" y="526" on="1"/>
        <pt x="323" y="151" on="1"/>
        <pt x="942" y="151" on="1"/>
        <pt x="942" y="0" on="1"/>
        <pt x="138" y="0" on="1"/>
        <pt x="138" y="1165" on="1"/>
        <pt x="936" y="1165" on="1"/>
        <pt x="936" y="1012" on="1"/>
        <pt x="323" y="1012" on="1"/>
        <pt x="323" y="678" on="1"/>
        <pt x="855" y="678" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          223 11 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          31 11 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          2 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          8 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00553" xMin="30" yMin="-438" xMax="1041" yMax="1102">
      <contour>
        <pt x="1041" y="935" on="1"/>
        <pt x="890" y="935" on="1"/>
        <pt x="948" y="851" on="0"/>
        <pt x="949" y="746" on="1"/>
        <pt x="949" y="721" on="1"/>
        <pt x="949" y="623" on="0"/>
        <pt x="838" y="457" on="0"/>
        <pt x="643" y="363" on="0"/>
        <pt x="523" y="363" on="1"/>
        <pt x="444" y="363" on="0"/>
        <pt x="371" y="384" on="1"/>
        <pt x="319" y="342" on="0"/>
        <pt x="319" y="278" on="1"/>
        <pt x="319" y="198" on="0"/>
        <pt x="441" y="196" on="1"/>
        <pt x="624" y="196" on="1"/>
        <pt x="824" y="195" on="0"/>
        <pt x="1030" y="46" on="0"/>
        <pt x="1030" y="-97" on="1"/>
        <pt x="1030" y="-181" on="0"/>
        <pt x="889" y="-342" on="0"/>
        <pt x="645" y="-438" on="0"/>
        <pt x="494" y="-438" on="1"/>
        <pt x="285" y="-438" on="0"/>
        <pt x="30" y="-283" on="0"/>
        <pt x="30" y="-161" on="1"/>
        <pt x="30" y="-78" on="0"/>
        <pt x="124" y="60" on="0"/>
        <pt x="208" y="102" on="1"/>
        <pt x="152" y="149" on="0"/>
        <pt x="152" y="223" on="1"/>
        <pt x="152" y="347" on="0"/>
        <pt x="267" y="429" on="1"/>
        <pt x="93" y="535" on="0"/>
        <pt x="93" y="732" on="1"/>
        <pt x="93" y="743" on="1"/>
        <pt x="93" y="900" on="0"/>
        <pt x="334" y="1102" on="0"/>
        <pt x="521" y="1102" on="1"/>
        <pt x="601" y="1102" on="0"/>
        <pt x="672" y="1082" on="1"/>
        <pt x="1039" y="1082" on="1"/>
      </contour>
      <contour>
        <pt x="331" y="50" on="1"/>
        <pt x="275" y="24" on="0"/>
        <pt x="215" y="-69" on="0"/>
        <pt x="215" y="-124" on="1"/>
        <pt x="215" y="-198" on="0"/>
        <pt x="363" y="-287" on="0"/>
        <pt x="494" y="-287" on="1"/>
        <pt x="640" y="-287" on="0"/>
        <pt x="845" y="-173" on="0"/>
        <pt x="845" y="-97" on="1"/>
        <pt x="845" y="-23" on="0"/>
        <pt x="741" y="42" on="0"/>
        <pt x="633" y="44" on="1"/>
        <pt x="394" y="44" on="1"/>
      </contour>
      <contour>
        <pt x="278" y="721" on="1"/>
        <pt x="278" y="638" on="0"/>
        <pt x="418" y="515" on="0"/>
        <pt x="523" y="515" on="1"/>
        <pt x="626" y="515" on="0"/>
        <pt x="764" y="637" on="0"/>
        <pt x="764" y="725" on="1"/>
        <pt x="764" y="743" on="1"/>
        <pt x="764" y="830" on="0"/>
        <pt x="626" y="950" on="0"/>
        <pt x="416" y="950" on="0"/>
        <pt x="278" y="830" on="0"/>
        <pt x="278" y="740" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          38
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          38 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          22
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          22 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          38
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          41
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          41
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          0 3 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          8 22 38
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          14 8 22
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 5 values pushed */
          144 14 160 14 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          55 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          28 55 14
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          32 8 38
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          22
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          48 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          59 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          38
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          66 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00554" xMin="100" yMin="-21" xMax="1112" yMax="1102">
      <contour>
        <pt x="898" y="241" on="1"/>
        <pt x="790" y="-21" on="0"/>
        <pt x="520" y="-21" on="1"/>
        <pt x="328" y="-21" on="0"/>
        <pt x="100" y="262" on="0"/>
        <pt x="100" y="506" on="1"/>
        <pt x="100" y="521" on="1"/>
        <pt x="100" y="785" on="0"/>
        <pt x="326" y="1102" on="0"/>
        <pt x="522" y="1102" on="1"/>
        <pt x="787" y="1102" on="0"/>
        <pt x="895" y="845" on="1"/>
        <pt x="929" y="1082" on="1"/>
        <pt x="1105" y="1082" on="1"/>
        <pt x="999" y="540" on="1"/>
        <pt x="1112" y="0" on="1"/>
        <pt x="936" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="285" y="500" on="1"/>
        <pt x="285" y="325" on="0"/>
        <pt x="431" y="130" on="0"/>
        <pt x="566" y="130" on="1"/>
        <pt x="777" y="130" on="0"/>
        <pt x="849" y="521" on="1"/>
        <pt x="849" y="557" on="1"/>
        <pt x="821" y="747" on="0"/>
        <pt x="675" y="950" on="0"/>
        <pt x="568" y="950" on="1"/>
        <pt x="434" y="950" on="0"/>
        <pt x="285" y="723" on="0"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          16 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 2 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          11 9 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          20 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          26 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00555" xMin="177" yMin="0" xMax="1251" yMax="1455">
      <contour>
        <pt x="370" y="628" on="1"/>
        <pt x="370" y="0" on="1"/>
        <pt x="177" y="0" on="1"/>
        <pt x="177" y="1455" on="1"/>
        <pt x="703" y="1455" on="1"/>
        <pt x="943" y="1455" on="0"/>
        <pt x="1194" y="1245" on="0"/>
        <pt x="1194" y="1041" on="1"/>
        <pt x="1194" y="812" on="0"/>
        <pt x="957" y="713" on="1"/>
        <pt x="1179" y="644" on="0"/>
        <pt x="1184" y="382" on="1"/>
        <pt x="1184" y="226" on="1"/>
        <pt x="1186" y="85" on="0"/>
        <pt x="1251" y="24" on="1"/>
        <pt x="1251" y="0" on="1"/>
        <pt x="1053" y="0" on="1"/>
        <pt x="994" y="54" on="0"/>
        <pt x="991" y="226" on="1"/>
        <pt x="991" y="365" on="1"/>
        <pt x="991" y="485" on="0"/>
        <pt x="851" y="628" on="0"/>
        <pt x="724" y="628" on="1"/>
      </contour>
      <contour>
        <pt x="370" y="785" on="1"/>
        <pt x="683" y="785" on="1"/>
        <pt x="845" y="785" on="0"/>
        <pt x="1002" y="909" on="0"/>
        <pt x="1002" y="1041" on="1"/>
        <pt x="1002" y="1297" on="0"/>
        <pt x="697" y="1297" on="1"/>
        <pt x="370" y="1297" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          24 31 32
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          24
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          15 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          23 3 1
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          9 23 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          29 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00556" xMin="178" yMin="0" xMax="1309" yMax="1456">
      <contour>
        <pt x="547" y="654" on="1"/>
        <pt x="370" y="654" on="1"/>
        <pt x="370" y="0" on="1"/>
        <pt x="178" y="0" on="1"/>
        <pt x="178" y="1456" on="1"/>
        <pt x="370" y="1456" on="1"/>
        <pt x="370" y="814" on="1"/>
        <pt x="520" y="814" on="1"/>
        <pt x="1029" y="1456" on="1"/>
        <pt x="1268" y="1456" on="1"/>
        <pt x="712" y="750" on="1"/>
        <pt x="1309" y="0" on="1"/>
        <pt x="1074" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          6 2 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RUTG[ ]	/* RoundUpToGrid */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSH[ ]	/* 5 values pushed */
          99 6 115 6 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          51 6 67 6 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          147 6 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          1 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          10 1 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00557" xMin="146" yMin="0" xMax="1044" yMax="1536">
      <contour>
        <pt x="460" y="501" on="1"/>
        <pt x="332" y="501" on="1"/>
        <pt x="332" y="0" on="1"/>
        <pt x="146" y="0" on="1"/>
        <pt x="146" y="1536" on="1"/>
        <pt x="332" y="1536" on="1"/>
        <pt x="332" y="654" on="1"/>
        <pt x="458" y="654" on="1"/>
        <pt x="773" y="1082" on="1"/>
        <pt x="992" y="1082" on="1"/>
        <pt x="614" y="589" on="1"/>
        <pt x="1044" y="0" on="1"/>
        <pt x="825" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 32
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          7 8 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          10 0 7
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00558" xMin="178" yMin="0" xMax="1274" yMax="1456">
      <contour>
        <pt x="370" y="693" on="1"/>
        <pt x="370" y="0" on="1"/>
        <pt x="178" y="0" on="1"/>
        <pt x="178" y="1456" on="1"/>
        <pt x="370" y="1456" on="1"/>
        <pt x="370" y="809" on="1"/>
        <pt x="382" y="809" on="1"/>
        <pt x="993" y="1456" on="1"/>
        <pt x="1234" y="1456" on="1"/>
        <pt x="573" y="747" on="1"/>
        <pt x="1274" y="0" on="1"/>
        <pt x="1037" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 3 1
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          5 3 1
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          9 0 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00559" xMin="146" yMin="0" xMax="1009" yMax="1560">
      <contour>
        <pt x="336" y="499" on="1"/>
        <pt x="332" y="499" on="1"/>
        <pt x="332" y="0" on="1"/>
        <pt x="146" y="0" on="1"/>
        <pt x="146" y="1560" on="1"/>
        <pt x="332" y="1560" on="1"/>
        <pt x="332" y="653" on="1"/>
        <pt x="333" y="653" on="1"/>
        <pt x="727" y="1082" on="1"/>
        <pt x="967" y="1082" on="1"/>
        <pt x="498" y="583" on="1"/>
        <pt x="1009" y="0" on="1"/>
        <pt x="781" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 32
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 8 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          6 8 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          10 6 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00560" xMin="138" yMin="0" xMax="1055" yMax="1165">
      <contour>
        <pt x="138" y="0" on="1"/>
        <pt x="138" y="1165" on="1"/>
        <pt x="499" y="1165" on="1"/>
        <pt x="661" y="1165" on="0"/>
        <pt x="912" y="1032" on="0"/>
        <pt x="1052" y="786" on="0"/>
        <pt x="1055" y="627" on="1"/>
        <pt x="1055" y="550" on="1"/>
        <pt x="1055" y="298" on="0"/>
        <pt x="744" y="0" on="0"/>
        <pt x="481" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="323" y="1012" on="1"/>
        <pt x="323" y="151" on="1"/>
        <pt x="487" y="151" on="1"/>
        <pt x="673" y="151" on="0"/>
        <pt x="871" y="359" on="0"/>
        <pt x="871" y="551" on="1"/>
        <pt x="871" y="615" on="1"/>
        <pt x="871" y="807" on="0"/>
        <pt x="682" y="1012" on="0"/>
        <pt x="499" y="1012" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          2 21 22
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          11 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          12 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00561" xMin="96" yMin="-16" xMax="1072" yMax="1181">
      <contour>
        <pt x="1072" y="377" on="1"/>
        <pt x="1052" y="190" on="0"/>
        <pt x="800" y="-16" on="0"/>
        <pt x="591" y="-16" on="1"/>
        <pt x="367" y="-16" on="0"/>
        <pt x="96" y="279" on="0"/>
        <pt x="96" y="538" on="1"/>
        <pt x="96" y="632" on="1"/>
        <pt x="96" y="796" on="0"/>
        <pt x="219" y="1045" on="0"/>
        <pt x="450" y="1181" on="0"/>
        <pt x="602" y="1181" on="1"/>
        <pt x="806" y="1181" on="0"/>
        <pt x="1053" y="970" on="0"/>
        <pt x="1072" y="783" on="1"/>
        <pt x="887" y="783" on="1"/>
        <pt x="869" y="913" on="0"/>
        <pt x="728" y="1029" on="0"/>
        <pt x="602" y="1029" on="1"/>
        <pt x="449" y="1029" on="0"/>
        <pt x="282" y="826" on="0"/>
        <pt x="281" y="637" on="1"/>
        <pt x="281" y="531" on="1"/>
        <pt x="281" y="342" on="0"/>
        <pt x="440" y="135" on="0"/>
        <pt x="591" y="135" on="1"/>
        <pt x="726" y="135" on="0"/>
        <pt x="867" y="246" on="0"/>
        <pt x="887" y="377" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          3 29 30
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          18 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          25 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          28
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00562" xMin="138" yMin="0" xMax="1007" yMax="1165">
      <contour>
        <pt x="138" y="0" on="1"/>
        <pt x="138" y="1165" on="1"/>
        <pt x="544" y="1165" on="1"/>
        <pt x="753" y="1165" on="0"/>
        <pt x="975" y="1002" on="0"/>
        <pt x="975" y="847" on="1"/>
        <pt x="975" y="766" on="0"/>
        <pt x="880" y="640" on="0"/>
        <pt x="792" y="607" on="1"/>
        <pt x="891" y="583" on="0"/>
        <pt x="1007" y="434" on="0"/>
        <pt x="1007" y="333" on="1"/>
        <pt x="1007" y="175" on="0"/>
        <pt x="789" y="1" on="0"/>
        <pt x="588" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="323" y="530" on="1"/>
        <pt x="323" y="151" on="1"/>
        <pt x="585" y="151" on="1"/>
        <pt x="700" y="151" on="0"/>
        <pt x="822" y="249" on="0"/>
        <pt x="822" y="334" on="1"/>
        <pt x="822" y="530" on="0"/>
        <pt x="587" y="530" on="1"/>
      </contour>
      <contour>
        <pt x="323" y="671" on="1"/>
        <pt x="557" y="671" on="1"/>
        <pt x="665" y="671" on="0"/>
        <pt x="789" y="756" on="0"/>
        <pt x="789" y="839" on="1"/>
        <pt x="789" y="1007" on="0"/>
        <pt x="560" y="1012" on="1"/>
        <pt x="323" y="1012" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          23 0 1
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          191 23 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          31 23 47 23 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          223 23 239 23 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          15 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          8 15 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          16 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          30 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00563" xMin="19" yMin="0" xMax="1136" yMax="1165">
      <contour>
        <pt x="838" y="279" on="1"/>
        <pt x="318" y="279" on="1"/>
        <pt x="208" y="0" on="1"/>
        <pt x="19" y="0" on="1"/>
        <pt x="498" y="1165" on="1"/>
        <pt x="664" y="1165" on="1"/>
        <pt x="1136" y="0" on="1"/>
        <pt x="948" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="378" y="430" on="1"/>
        <pt x="779" y="430" on="1"/>
        <pt x="580" y="939" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          9 4 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          10 4 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00564" xMin="159" yMin="1166" xMax="406" yMax="1595">
      <contour>
        <pt x="299" y="1595" on="1"/>
        <pt x="406" y="1512" on="1"/>
        <pt x="347" y="1413" on="0"/>
        <pt x="344" y="1302" on="1"/>
        <pt x="344" y="1166" on="1"/>
        <pt x="159" y="1166" on="1"/>
        <pt x="159" y="1296" on="1"/>
        <pt x="159" y="1373" on="0"/>
        <pt x="243" y="1546" on="0"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00565" xMin="129" yMin="1247" xMax="736" yMax="1674">
      <contour>
        <pt x="736" y="1456" on="1"/>
        <pt x="736" y="1361" on="0"/>
        <pt x="568" y="1247" on="0"/>
        <pt x="433" y="1247" on="1"/>
        <pt x="297" y="1247" on="0"/>
        <pt x="129" y="1361" on="0"/>
        <pt x="129" y="1456" on="1"/>
        <pt x="281" y="1456" on="1"/>
        <pt x="281" y="1401" on="0"/>
        <pt x="360" y="1340" on="0"/>
        <pt x="433" y="1340" on="1"/>
        <pt x="504" y="1340" on="0"/>
        <pt x="583" y="1403" on="0"/>
        <pt x="583" y="1456" on="1"/>
      </contour>
      <contour>
        <pt x="237" y="1674" on="1"/>
        <pt x="391" y="1674" on="1"/>
        <pt x="503" y="1476" on="1"/>
        <pt x="402" y="1476" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 13 values pushed */
          15 7 31 7 47 7 63 7 79 7 95 7 6
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          10 4 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 15 values pushed */
          15 15 31 15 47 15 63 15 79 15 95 15 111 15 7
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          17
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00566" xMin="-860" yMin="1212" xMax="-308" yMax="1683">
      <contour>
        <pt x="-308" y="1405" on="1"/>
        <pt x="-308" y="1331" on="0"/>
        <pt x="-404" y="1226" on="0"/>
        <pt x="-474" y="1226" on="1"/>
        <pt x="-527" y="1226" on="0"/>
        <pt x="-640" y="1292" on="0"/>
        <pt x="-674" y="1301" on="0"/>
        <pt x="-694" y="1301" on="1"/>
        <pt x="-729" y="1301" on="0"/>
        <pt x="-776" y="1250" on="0"/>
        <pt x="-776" y="1212" on="1"/>
        <pt x="-860" y="1233" on="1"/>
        <pt x="-860" y="1308" on="0"/>
        <pt x="-764" y="1415" on="0"/>
        <pt x="-694" y="1415" on="1"/>
        <pt x="-647" y="1415" on="0"/>
        <pt x="-518" y="1340" on="0"/>
        <pt x="-474" y="1340" on="1"/>
        <pt x="-439" y="1340" on="0"/>
        <pt x="-391" y="1391" on="0"/>
        <pt x="-391" y="1429" on="1"/>
      </contour>
      <contour>
        <pt x="-532" y="1683" on="1"/>
        <pt x="-361" y="1683" on="1"/>
        <pt x="-543" y="1458" on="1"/>
        <pt x="-663" y="1458" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          15 3 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          255 3 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          112 3 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 11 values pushed */
          15 7 31 7 47 7 63 7 79 7 5
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          10
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          14 3 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          17 3 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          23
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 25 values pushed */
          63 23 79 23 95 23 111 23 127 23 143 23 159 23 175 23 191 23 207 23 223 23 239 23 12
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 11 values pushed */
          15 21 31 21 47 21 63 21 79 21 5
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSH[ ]	/* 1 value pushed */
          24
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00567" xMin="110" yMin="1249" xMax="1112" yMax="1685">
      <contour>
        <pt x="402" y="1512" on="1"/>
        <pt x="554" y="1512" on="1"/>
        <pt x="844" y="1249" on="1"/>
        <pt x="647" y="1249" on="1"/>
        <pt x="478" y="1408" on="1"/>
        <pt x="308" y="1249" on="1"/>
        <pt x="110" y="1249" on="1"/>
      </contour>
      <contour>
        <pt x="912" y="1685" on="1"/>
        <pt x="1112" y="1685" on="1"/>
        <pt x="911" y="1426" on="1"/>
        <pt x="770" y="1426" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          15 3 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 7 values pushed */
          15 0 31 0 47 0 3
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSH[ ]	/* 3 values pushed */
          4 3 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 7 values pushed */
          15 7 31 7 47 7 3
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          10
          MDRP[10000]	/* MoveDirectRelPt */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00568" xMin="-162" yMin="1231" xMax="838" yMax="1666">
      <contour>
        <pt x="838" y="1231" on="1"/>
        <pt x="641" y="1231" on="1"/>
        <pt x="471" y="1389" on="1"/>
        <pt x="301" y="1231" on="1"/>
        <pt x="105" y="1231" on="1"/>
        <pt x="395" y="1493" on="1"/>
        <pt x="547" y="1493" on="1"/>
      </contour>
      <contour>
        <pt x="178" y="1408" on="1"/>
        <pt x="38" y="1408" on="1"/>
        <pt x="-162" y="1666" on="1"/>
        <pt x="37" y="1666" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          15 3 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          1
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 7 values pushed */
          15 6 31 6 47 6 3
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          2 3 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          10
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 7 values pushed */
          15 10 31 10 47 10 3
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00569" xMin="105" yMin="1252" xMax="1004" yMax="1743">
      <contour>
        <pt x="838" y="1252" on="1"/>
        <pt x="668" y="1252" on="1"/>
        <pt x="471" y="1438" on="1"/>
        <pt x="274" y="1252" on="1"/>
        <pt x="105" y="1252" on="1"/>
        <pt x="377" y="1514" on="1"/>
        <pt x="565" y="1514" on="1"/>
      </contour>
      <contour>
        <pt x="755" y="1390" on="1"/>
        <pt x="754" y="1521" on="1"/>
        <pt x="819" y="1525" on="0"/>
        <pt x="878" y="1551" on="0"/>
        <pt x="878" y="1584" on="1"/>
        <pt x="878" y="1651" on="0"/>
        <pt x="737" y="1651" on="1"/>
        <pt x="742" y="1743" on="1"/>
        <pt x="870" y="1743" on="0"/>
        <pt x="1004" y="1655" on="0"/>
        <pt x="1004" y="1582" on="1"/>
        <pt x="1004" y="1523" on="0"/>
        <pt x="930" y="1457" on="0"/>
        <pt x="870" y="1450" on="1"/>
        <pt x="869" y="1390" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 7 values pushed */
          15 5 31 5 47 5 3
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          4 3 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          1
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          2 5 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          RUTG[ ]	/* RoundUpToGrid */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSH[ ]	/* 13 values pushed */
          15 7 31 7 47 7 63 7 79 7 95 7 6
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 13 values pushed */
          15 14 31 14 47 14 63 14 79 14 95 14 6
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          8 7 13
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          20 14 7
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00570" xMin="105" yMin="1252" xMax="838" yMax="1748">
      <contour>
        <pt x="838" y="1252" on="1"/>
        <pt x="668" y="1252" on="1"/>
        <pt x="471" y="1410" on="1"/>
        <pt x="274" y="1252" on="1"/>
        <pt x="105" y="1252" on="1"/>
        <pt x="406" y="1496" on="1"/>
        <pt x="537" y="1496" on="1"/>
      </contour>
      <contour>
        <pt x="732" y="1725" on="1"/>
        <pt x="732" y="1663" on="0"/>
        <pt x="636" y="1569" on="0"/>
        <pt x="571" y="1569" on="1"/>
        <pt x="517" y="1569" on="0"/>
        <pt x="407" y="1640" on="0"/>
        <pt x="367" y="1640" on="1"/>
        <pt x="338" y="1640" on="0"/>
        <pt x="284" y="1594" on="0"/>
        <pt x="284" y="1565" on="1"/>
        <pt x="207" y="1584" on="1"/>
        <pt x="207" y="1647" on="0"/>
        <pt x="303" y="1745" on="0"/>
        <pt x="367" y="1745" on="1"/>
        <pt x="409" y="1745" on="0"/>
        <pt x="533" y="1675" on="0"/>
        <pt x="571" y="1675" on="1"/>
        <pt x="602" y="1675" on="0"/>
        <pt x="654" y="1720" on="0"/>
        <pt x="654" y="1748" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          1
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 9 values pushed */
          15 6 31 6 47 6 63 6 4
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          4 3 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          2 6 1
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          10
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 5 values pushed */
          63 10 79 10 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 13 values pushed */
          15 13 31 13 47 13 63 13 79 13 95 13 6
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          20 4 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          23 4 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          26
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00571" xMin="138" yMin="0" xMax="901" yMax="1476">
      <contour>
        <pt x="716" y="1476" on="1"/>
        <pt x="901" y="1476" on="1"/>
        <pt x="901" y="1012" on="1"/>
        <pt x="323" y="1012" on="1"/>
        <pt x="323" y="0" on="1"/>
        <pt x="138" y="0" on="1"/>
        <pt x="138" y="1165" on="1"/>
        <pt x="716" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          3 8 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          2 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00572" xMin="129" yMin="1247" xMax="736" yMax="1674">
      <contour>
        <pt x="736" y="1456" on="1"/>
        <pt x="736" y="1361" on="0"/>
        <pt x="568" y="1247" on="0"/>
        <pt x="433" y="1247" on="1"/>
        <pt x="297" y="1247" on="0"/>
        <pt x="129" y="1361" on="0"/>
        <pt x="129" y="1456" on="1"/>
        <pt x="281" y="1456" on="1"/>
        <pt x="281" y="1401" on="0"/>
        <pt x="360" y="1340" on="0"/>
        <pt x="433" y="1340" on="1"/>
        <pt x="504" y="1340" on="0"/>
        <pt x="583" y="1403" on="0"/>
        <pt x="583" y="1456" on="1"/>
      </contour>
      <contour>
        <pt x="487" y="1674" on="1"/>
        <pt x="640" y="1674" on="1"/>
        <pt x="476" y="1476" on="1"/>
        <pt x="374" y="1476" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 13 values pushed */
          15 7 31 7 47 7 63 7 79 7 95 7 6
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          10 4 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 15 values pushed */
          15 15 31 15 47 15 63 15 79 15 95 15 111 15 7
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSH[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00573" xMin="129" yMin="1248" xMax="714" yMax="1795">
      <contour>
        <pt x="714" y="1456" on="1"/>
        <pt x="714" y="1362" on="0"/>
        <pt x="553" y="1248" on="0"/>
        <pt x="422" y="1248" on="1"/>
        <pt x="290" y="1248" on="0"/>
        <pt x="129" y="1363" on="0"/>
        <pt x="129" y="1456" on="1"/>
        <pt x="275" y="1456" on="1"/>
        <pt x="275" y="1403" on="0"/>
        <pt x="349" y="1341" on="0"/>
        <pt x="422" y="1341" on="1"/>
        <pt x="491" y="1341" on="0"/>
        <pt x="567" y="1402" on="0"/>
        <pt x="567" y="1456" on="1"/>
      </contour>
      <contour>
        <pt x="366" y="1473" on="1"/>
        <pt x="365" y="1597" on="1"/>
        <pt x="439" y="1601" on="0"/>
        <pt x="505" y="1625" on="0"/>
        <pt x="505" y="1654" on="1"/>
        <pt x="505" y="1713" on="0"/>
        <pt x="345" y="1713" on="1"/>
        <pt x="352" y="1795" on="1"/>
        <pt x="496" y="1795" on="0"/>
        <pt x="644" y="1717" on="0"/>
        <pt x="644" y="1651" on="1"/>
        <pt x="644" y="1601" on="0"/>
        <pt x="563" y="1542" on="0"/>
        <pt x="495" y="1535" on="1"/>
        <pt x="494" y="1473" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 13 values pushed */
          15 7 31 7 47 7 63 7 79 7 95 7 6
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          10 4 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 15 values pushed */
          15 21 31 21 47 21 63 21 79 21 95 21 111 21 7
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          15 20 14
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          27 14 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00574" xMin="80" yMin="653" xMax="669" yMax="1464">
      <component glyphName="glyph00455" x="0" y="664" flags="0x204"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00575" xMin="54" yMin="664" xMax="699" yMax="1453">
      <component glyphName="glyph00544" x="0" y="664" flags="0x204"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00576" xMin="91" yMin="653" xMax="679" yMax="1453">
      <component glyphName="glyph00545" x="0" y="664" flags="0x204"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00577" xMin="86" yMin="653" xMax="683" yMax="1462">
      <component glyphName="glyph00546" x="0" y="664" flags="0x204"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00578" xMin="58" yMin="664" xMax="677" yMax="1453">
      <component glyphName="glyph00547" x="0" y="664" flags="0x204"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00579" xMin="79" yMin="653" xMax="671" yMax="1464">
      <component glyphName="glyph00548" x="0" y="664" flags="0x204"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          17 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          23
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          17
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          31
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00580" xMin="73" yMin="657" xMax="661" yMax="1464">
      <component glyphName="glyph00549" x="0" y="664" flags="0x204"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          25
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00581" xMin="126" yMin="-21" xMax="1309" yMax="1477">
      <contour>
        <pt x="1308" y="462" on="1"/>
        <pt x="1284" y="239" on="0"/>
        <pt x="991" y="-21" on="0"/>
        <pt x="753" y="-21" on="1"/>
        <pt x="576" y="-21" on="0"/>
        <pt x="289" y="159" on="0"/>
        <pt x="127" y="486" on="0"/>
        <pt x="126" y="689" on="1"/>
        <pt x="126" y="757" on="1"/>
        <pt x="126" y="968" on="0"/>
        <pt x="283" y="1298" on="0"/>
        <pt x="566" y="1477" on="0"/>
        <pt x="744" y="1477" on="1"/>
        <pt x="981" y="1477" on="0"/>
        <pt x="1284" y="1215" on="0"/>
        <pt x="1309" y="988" on="1"/>
        <pt x="1116" y="988" on="1"/>
        <pt x="1092" y="1151" on="0"/>
        <pt x="901" y="1319" on="0"/>
        <pt x="744" y="1319" on="1"/>
        <pt x="552" y="1319" on="0"/>
        <pt x="318" y="1010" on="0"/>
        <pt x="318" y="752" on="1"/>
        <pt x="318" y="697" on="1"/>
        <pt x="318" y="536" on="0"/>
        <pt x="428" y="280" on="0"/>
        <pt x="628" y="136" on="0"/>
        <pt x="753" y="136" on="1"/>
        <pt x="914" y="136" on="0"/>
        <pt x="1090" y="293" on="0"/>
        <pt x="1116" y="462" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          12 31 32
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          19 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          27 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00582" xMin="126" yMin="-21" xMax="1310" yMax="1476">
      <contour>
        <pt x="1310" y="190" on="1"/>
        <pt x="1243" y="93" on="0"/>
        <pt x="958" y="-21" on="0"/>
        <pt x="782" y="-21" on="1"/>
        <pt x="595" y="-21" on="0"/>
        <pt x="297" y="159" on="0"/>
        <pt x="129" y="486" on="0"/>
        <pt x="126" y="696" on="1"/>
        <pt x="126" y="741" on="1"/>
        <pt x="126" y="960" on="0"/>
        <pt x="281" y="1294" on="0"/>
        <pt x="565" y="1476" on="0"/>
        <pt x="746" y="1476" on="1"/>
        <pt x="987" y="1476" on="0"/>
        <pt x="1276" y="1247" on="0"/>
        <pt x="1310" y="1029" on="1"/>
        <pt x="1118" y="1029" on="1"/>
        <pt x="1088" y="1178" on="0"/>
        <pt x="902" y="1318" on="0"/>
        <pt x="746" y="1318" on="1"/>
        <pt x="565" y="1318" on="0"/>
        <pt x="329" y="1026" on="0"/>
        <pt x="319" y="784" on="1"/>
        <pt x="318" y="714" on="1"/>
        <pt x="318" y="542" on="0"/>
        <pt x="438" y="276" on="0"/>
        <pt x="649" y="136" on="0"/>
        <pt x="782" y="136" on="1"/>
        <pt x="896" y="136" on="0"/>
        <pt x="1077" y="194" on="0"/>
        <pt x="1119" y="242" on="1"/>
        <pt x="1119" y="568" on="1"/>
        <pt x="783" y="568" on="1"/>
        <pt x="783" y="723" on="1"/>
        <pt x="1310" y="723" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          12 35 36
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          16 3 12
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          19 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          27 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          34 12 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          34
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 5 values pushed */
          63 34 79 34 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          15 34 31 34 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          31 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00583" xMin="178" yMin="0" xMax="1297" yMax="1456">
      <contour>
        <pt x="178" y="0" on="1"/>
        <pt x="178" y="1456" on="1"/>
        <pt x="611" y="1456" on="1"/>
        <pt x="804" y="1456" on="0"/>
        <pt x="1116" y="1284" on="0"/>
        <pt x="1293" y="968" on="0"/>
        <pt x="1297" y="768" on="1"/>
        <pt x="1297" y="706" on="1"/>
        <pt x="1297" y="498" on="0"/>
        <pt x="1124" y="179" on="0"/>
        <pt x="806" y="2" on="0"/>
        <pt x="603" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="370" y="1298" on="1"/>
        <pt x="370" y="157" on="1"/>
        <pt x="593" y="157" on="1"/>
        <pt x="827" y="157" on="0"/>
        <pt x="1102" y="455" on="0"/>
        <pt x="1102" y="714" on="1"/>
        <pt x="1102" y="750" on="1"/>
        <pt x="1102" y="1002" on="0"/>
        <pt x="837" y="1298" on="0"/>
        <pt x="605" y="1298" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          3 22 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          12 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          13 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00584" xMin="126" yMin="-21" xMax="1375" yMax="1477">
      <contour>
        <pt x="1375" y="706" on="1"/>
        <pt x="1375" y="500" on="0"/>
        <pt x="1213" y="164" on="0"/>
        <pt x="927" y="-21" on="0"/>
        <pt x="752" y="-21" on="1"/>
        <pt x="581" y="-21" on="0"/>
        <pt x="294" y="164" on="0"/>
        <pt x="128" y="494" on="0"/>
        <pt x="126" y="694" on="1"/>
        <pt x="126" y="749" on="1"/>
        <pt x="126" y="954" on="0"/>
        <pt x="290" y="1289" on="0"/>
        <pt x="579" y="1477" on="0"/>
        <pt x="750" y="1477" on="1"/>
        <pt x="923" y="1477" on="0"/>
        <pt x="1211" y="1292" on="0"/>
        <pt x="1374" y="960" on="0"/>
        <pt x="1375" y="756" on="1"/>
      </contour>
      <contour>
        <pt x="1184" y="751" on="1"/>
        <pt x="1184" y="913" on="0"/>
        <pt x="1074" y="1169" on="0"/>
        <pt x="875" y="1312" on="0"/>
        <pt x="750" y="1312" on="1"/>
        <pt x="630" y="1312" on="0"/>
        <pt x="432" y="1169" on="0"/>
        <pt x="318" y="915" on="0"/>
        <pt x="317" y="759" on="1"/>
        <pt x="317" y="706" on="1"/>
        <pt x="317" y="546" on="0"/>
        <pt x="430" y="288" on="0"/>
        <pt x="631" y="142" on="0"/>
        <pt x="752" y="142" on="1"/>
        <pt x="945" y="142" on="0"/>
        <pt x="1184" y="457" on="0"/>
        <pt x="1184" y="712" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          4 35 36
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          31
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          22 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          31 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00585" xMin="126" yMin="-252" xMax="1375" yMax="1477">
      <contour>
        <pt x="1375" y="706" on="1"/>
        <pt x="1375" y="494" on="0"/>
        <pt x="1206" y="154" on="0"/>
        <pt x="1058" y="64" on="1"/>
        <pt x="1308" y="-131" on="1"/>
        <pt x="1177" y="-252" on="1"/>
        <pt x="869" y="-9" on="1"/>
        <pt x="812" y="-21" on="0"/>
        <pt x="752" y="-21" on="1"/>
        <pt x="581" y="-21" on="0"/>
        <pt x="293" y="165" on="0"/>
        <pt x="129" y="491" on="0"/>
        <pt x="126" y="689" on="1"/>
        <pt x="126" y="747" on="1"/>
        <pt x="126" y="951" on="0"/>
        <pt x="288" y="1287" on="0"/>
        <pt x="578" y="1477" on="0"/>
        <pt x="750" y="1477" on="1"/>
        <pt x="924" y="1477" on="0"/>
        <pt x="1213" y="1290" on="0"/>
        <pt x="1375" y="954" on="0"/>
        <pt x="1375" y="748" on="1"/>
      </contour>
      <contour>
        <pt x="1184" y="749" on="1"/>
        <pt x="1184" y="912" on="0"/>
        <pt x="1074" y="1169" on="0"/>
        <pt x="875" y="1312" on="0"/>
        <pt x="750" y="1312" on="1"/>
        <pt x="630" y="1312" on="0"/>
        <pt x="431" y="1168" on="0"/>
        <pt x="318" y="913" on="0"/>
        <pt x="317" y="757" on="1"/>
        <pt x="317" y="706" on="1"/>
        <pt x="317" y="546" on="0"/>
        <pt x="430" y="288" on="0"/>
        <pt x="631" y="142" on="0"/>
        <pt x="752" y="142" on="1"/>
        <pt x="945" y="142" on="0"/>
        <pt x="1184" y="457" on="0"/>
        <pt x="1184" y="712" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          8 39 40
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          35
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          17 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          3 8 17
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          17
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          26 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          35 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00586" xMin="160" yMin="0" xMax="713" yMax="1165">
      <contour>
        <pt x="713" y="0" on="1"/>
        <pt x="528" y="0" on="1"/>
        <pt x="528" y="934" on="1"/>
        <pt x="160" y="795" on="1"/>
        <pt x="160" y="963" on="1"/>
        <pt x="682" y="1165" on="1"/>
        <pt x="713" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          4 0 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          3 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00587" xMin="131" yMin="0" xMax="1056" yMax="1184">
      <contour>
        <pt x="1056" y="0" on="1"/>
        <pt x="167" y="0" on="1"/>
        <pt x="167" y="131" on="1"/>
        <pt x="676" y="588" on="1"/>
        <pt x="801" y="703" on="0"/>
        <pt x="811" y="787" on="1"/>
        <pt x="814" y="840" on="1"/>
        <pt x="814" y="924" on="0"/>
        <pt x="689" y="1032" on="0"/>
        <pt x="587" y="1032" on="1"/>
        <pt x="465" y="1032" on="0"/>
        <pt x="316" y="890" on="0"/>
        <pt x="316" y="773" on="1"/>
        <pt x="131" y="773" on="1"/>
        <pt x="131" y="885" on="0"/>
        <pt x="251" y="1076" on="0"/>
        <pt x="461" y="1184" on="0"/>
        <pt x="587" y="1184" on="1"/>
        <pt x="774" y="1184" on="0"/>
        <pt x="999" y="1000" on="0"/>
        <pt x="999" y="848" on="1"/>
        <pt x="999" y="671" on="0"/>
        <pt x="802" y="491" on="1"/>
        <pt x="424" y="151" on="1"/>
        <pt x="1056" y="151" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          9 25 26
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          17 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          23 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          22 23 17
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          3 17 22
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          17
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          9 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          17
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00588" xMin="15" yMin="-349" xMax="990" yMax="1165">
      <contour>
        <pt x="740" y="1012" on="1"/>
        <pt x="88" y="1012" on="1"/>
        <pt x="88" y="1165" on="1"/>
        <pt x="970" y="1165" on="1"/>
        <pt x="970" y="1047" on="1"/>
        <pt x="586" y="643" on="1"/>
        <pt x="764" y="619" on="0"/>
        <pt x="990" y="373" on="0"/>
        <pt x="990" y="194" on="1"/>
        <pt x="990" y="-55" on="0"/>
        <pt x="682" y="-349" on="0"/>
        <pt x="427" y="-349" on="1"/>
        <pt x="225" y="-349" on="0"/>
        <pt x="15" y="-246" on="1"/>
        <pt x="67" y="-107" on="1"/>
        <pt x="232" y="-195" on="0"/>
        <pt x="409" y="-195" on="1"/>
        <pt x="589" y="-195" on="0"/>
        <pt x="804" y="7" on="0"/>
        <pt x="804" y="172" on="1"/>
        <pt x="804" y="343" on="0"/>
        <pt x="619" y="508" on="0"/>
        <pt x="427" y="508" on="1"/>
        <pt x="367" y="508" on="1"/>
        <pt x="367" y="611" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          1 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          5 11 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          16 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          23 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          24 23 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00589" xMin="62" yMin="-330" xMax="1184" yMax="1165">
      <contour>
        <pt x="987" y="150" on="1"/>
        <pt x="1184" y="150" on="1"/>
        <pt x="1184" y="-1" on="1"/>
        <pt x="987" y="-1" on="1"/>
        <pt x="987" y="-330" on="1"/>
        <pt x="801" y="-330" on="1"/>
        <pt x="801" y="-1" on="1"/>
        <pt x="62" y="-1" on="1"/>
        <pt x="62" y="108" on="1"/>
        <pt x="788" y="1165" on="1"/>
        <pt x="987" y="1165" on="1"/>
      </contour>
      <contour>
        <pt x="279" y="150" on="1"/>
        <pt x="801" y="150" on="1"/>
        <pt x="801" y="914" on="1"/>
        <pt x="773" y="861" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          13 9 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00590" xMin="101" yMin="-352" xMax="1029" yMax="1164">
      <contour>
        <pt x="134" y="372" on="1"/>
        <pt x="236" y="1164" on="1"/>
        <pt x="1024" y="1164" on="1"/>
        <pt x="1024" y="993" on="1"/>
        <pt x="382" y="993" on="1"/>
        <pt x="328" y="597" on="1"/>
        <pt x="439" y="661" on="0"/>
        <pt x="588" y="663" on="1"/>
        <pt x="788" y="665" on="0"/>
        <pt x="1029" y="398" on="0"/>
        <pt x="1029" y="173" on="1"/>
        <pt x="1029" y="-66" on="0"/>
        <pt x="741" y="-352" on="0"/>
        <pt x="500" y="-352" on="1"/>
        <pt x="276" y="-352" on="0"/>
        <pt x="101" y="-238" on="1"/>
        <pt x="159" y="-99" on="1"/>
        <pt x="289" y="-200" on="0"/>
        <pt x="500" y="-200" on="1"/>
        <pt x="653" y="-200" on="0"/>
        <pt x="844" y="7" on="0"/>
        <pt x="844" y="171" on="1"/>
        <pt x="844" y="314" on="0"/>
        <pt x="679" y="496" on="0"/>
        <pt x="544" y="496" on="1"/>
        <pt x="438" y="496" on="0"/>
        <pt x="321" y="438" on="0"/>
        <pt x="287" y="355" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          4 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          7 13 1
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          24 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          5 7 24
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          18 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          27
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00591" xMin="74" yMin="-330" xMax="1010" yMax="1165">
      <contour>
        <pt x="1010" y="1059" on="1"/>
        <pt x="402" y="-330" on="1"/>
        <pt x="216" y="-330" on="1"/>
        <pt x="815" y="1013" on="1"/>
        <pt x="74" y="1013" on="1"/>
        <pt x="74" y="1165" on="1"/>
        <pt x="1010" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          3 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 3 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00592" xMin="131" yMin="1241" xMax="722" yMax="1744">
      <contour>
        <pt x="722" y="1454" on="1"/>
        <pt x="722" y="1359" on="0"/>
        <pt x="561" y="1241" on="0"/>
        <pt x="427" y="1241" on="1"/>
        <pt x="292" y="1241" on="0"/>
        <pt x="131" y="1359" on="0"/>
        <pt x="131" y="1454" on="1"/>
        <pt x="281" y="1454" on="1"/>
        <pt x="281" y="1400" on="0"/>
        <pt x="355" y="1336" on="0"/>
        <pt x="427" y="1336" on="1"/>
        <pt x="498" y="1336" on="0"/>
        <pt x="572" y="1400" on="0"/>
        <pt x="572" y="1454" on="1"/>
      </contour>
      <contour>
        <pt x="713" y="1720" on="1"/>
        <pt x="713" y="1646" on="0"/>
        <pt x="617" y="1541" on="0"/>
        <pt x="547" y="1541" on="1"/>
        <pt x="489" y="1541" on="0"/>
        <pt x="370" y="1616" on="0"/>
        <pt x="326" y="1616" on="1"/>
        <pt x="292" y="1616" on="0"/>
        <pt x="244" y="1565" on="0"/>
        <pt x="244" y="1527" on="1"/>
        <pt x="161" y="1548" on="1"/>
        <pt x="161" y="1623" on="0"/>
        <pt x="257" y="1730" on="0"/>
        <pt x="326" y="1730" on="1"/>
        <pt x="374" y="1730" on="0"/>
        <pt x="503" y="1655" on="0"/>
        <pt x="547" y="1655" on="1"/>
        <pt x="582" y="1655" on="0"/>
        <pt x="630" y="1706" on="0"/>
        <pt x="630" y="1744" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 13 values pushed */
          15 7 31 7 47 7 63 7 79 7 95 7 6
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          10 4 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          20
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 11 values pushed */
          15 20 31 20 47 20 63 20 79 20 5
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          17
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          23
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          27 4 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          17
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          30 4 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          27
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          33
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00593" xMin="103" yMin="-359" xMax="289" yMax="153">
      <contour>
        <pt x="289" y="-359" on="1"/>
        <pt x="103" y="-359" on="1"/>
        <pt x="103" y="153" on="1"/>
        <pt x="289" y="153" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          1
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00594" xMin="96" yMin="-16" xMax="1645" yMax="1181">
      <contour>
        <pt x="1645" y="0" on="1"/>
        <pt x="976" y="0" on="1"/>
        <pt x="606" y="-16" on="1"/>
        <pt x="377" y="-16" on="0"/>
        <pt x="96" y="290" on="0"/>
        <pt x="96" y="553" on="1"/>
        <pt x="96" y="615" on="1"/>
        <pt x="96" y="873" on="0"/>
        <pt x="375" y="1181" on="0"/>
        <pt x="604" y="1181" on="1"/>
        <pt x="951" y="1165" on="1"/>
        <pt x="1638" y="1165" on="1"/>
        <pt x="1638" y="1012" on="1"/>
        <pt x="1025" y="1012" on="1"/>
        <pt x="1025" y="678" on="1"/>
        <pt x="1557" y="678" on="1"/>
        <pt x="1557" y="526" on="1"/>
        <pt x="1025" y="526" on="1"/>
        <pt x="1025" y="151" on="1"/>
        <pt x="1645" y="151" on="1"/>
      </contour>
      <contour>
        <pt x="606" y="138" on="1"/>
        <pt x="840" y="145" on="1"/>
        <pt x="840" y="1016" on="1"/>
        <pt x="604" y="1025" on="1"/>
        <pt x="454" y="1025" on="0"/>
        <pt x="279" y="811" on="0"/>
        <pt x="279" y="614" on="1"/>
        <pt x="279" y="548" on="1"/>
        <pt x="279" y="353" on="0"/>
        <pt x="455" y="138" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          21 30 31
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          10
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          12 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          31 15 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          223 15 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          16 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          19 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          20 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          23 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00595" xMin="130" yMin="-343" xMax="1087" yMax="1185">
      <contour>
        <pt x="479" y="-191" on="1"/>
        <pt x="656" y="-191" on="0"/>
        <pt x="876" y="53" on="0"/>
        <pt x="897" y="270" on="1"/>
        <pt x="778" y="165" on="0"/>
        <pt x="595" y="165" on="1"/>
        <pt x="385" y="165" on="0"/>
        <pt x="130" y="441" on="0"/>
        <pt x="130" y="667" on="1"/>
        <pt x="130" y="823" on="0"/>
        <pt x="247" y="1059" on="0"/>
        <pt x="457" y="1185" on="0"/>
        <pt x="589" y="1185" on="1"/>
        <pt x="824" y="1185" on="0"/>
        <pt x="1085" y="893" on="0"/>
        <pt x="1087" y="627" on="1"/>
        <pt x="1087" y="377" on="1"/>
        <pt x="1087" y="157" on="0"/>
        <pt x="941" y="-169" on="0"/>
        <pt x="672" y="-343" on="0"/>
        <pt x="497" y="-343" on="1"/>
        <pt x="338" y="-343" on="0"/>
        <pt x="220" y="-283" on="1"/>
        <pt x="258" y="-141" on="1"/>
        <pt x="380" y="-191" on="0"/>
      </contour>
      <contour>
        <pt x="604" y="317" on="1"/>
        <pt x="709" y="317" on="0"/>
        <pt x="868" y="409" on="0"/>
        <pt x="902" y="491" on="1"/>
        <pt x="902" y="639" on="1"/>
        <pt x="902" y="836" on="0"/>
        <pt x="741" y="1033" on="0"/>
        <pt x="595" y="1033" on="1"/>
        <pt x="468" y="1033" on="0"/>
        <pt x="316" y="838" on="0"/>
        <pt x="316" y="667" on="1"/>
        <pt x="316" y="518" on="0"/>
        <pt x="479" y="317" on="0"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          20
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          5 20 12
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          3 5 12
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          26 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          32 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00596" xMin="-74" yMin="-437" xMax="359" yMax="152">
      <contour>
        <pt x="359" y="152" on="1"/>
        <pt x="359" y="-93" on="1"/>
        <pt x="358" y="-261" on="0"/>
        <pt x="188" y="-437" on="0"/>
        <pt x="37" y="-437" on="1"/>
        <pt x="-22" y="-437" on="0"/>
        <pt x="-74" y="-419" on="1"/>
        <pt x="-60" y="-262" on="1"/>
        <pt x="-30" y="-275" on="0"/>
        <pt x="37" y="-275" on="1"/>
        <pt x="174" y="-275" on="0"/>
        <pt x="174" y="-81" on="1"/>
        <pt x="174" y="152" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          9 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00597" xMin="59" yMin="-349" xMax="1034" yMax="1165">
      <component glyphName="glyph00588" x="44" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00598" xMin="115" yMin="-352" xMax="1043" yMax="1164">
      <component glyphName="glyph00590" x="14" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00599" xMin="35" yMin="-330" xMax="1157" yMax="1165">
      <component glyphName="glyph00589" x="-27" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00600" xMin="119" yMin="0" xMax="1044" yMax="1184">
      <component glyphName="glyph00587" x="-12" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          17 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00601" xMin="118" yMin="-330" xMax="1054" yMax="1165">
      <component glyphName="glyph00591" x="44" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00602" xMin="55" yMin="-21" xMax="1096" yMax="1185">
      <component glyphName="glyph00613" x="-65" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00603" xMin="126" yMin="-20" xMax="1046" yMax="1457">
      <component glyphName="six" x="-6" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00604" xMin="95" yMin="-343" xMax="1052" yMax="1185">
      <component glyphName="glyph00595" x="-35" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          32
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00605" xMin="112" yMin="-20" xMax="1038" yMax="1476">
      <component glyphName="eight" x="0" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          21 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          27
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          34
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00606" xMin="244" yMin="0" xMax="797" yMax="1165">
      <component glyphName="glyph00586" x="84" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph00607" xMin="-76" yMin="-437" xMax="357" yMax="1082">
      <component glyphName="uni0237" x="0" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph00608" xMin="-76" yMin="-437" xMax="357" yMax="1082">
      <component glyphName="uni0237" x="0" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph00609" xMin="155" yMin="0" xMax="341" yMax="1082">
      <component glyphName="dotlessi" x="0" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00610" xMin="-6" yMin="-423" xMax="346" yMax="1082">
      <component glyphName="dotlessi" x="0" y="0" flags="0x4"/>
      <component glyphName="ogonek" x="-56" y="10" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph00611" xMin="155" yMin="0" xMax="341" yMax="1082">
      <component glyphName="dotlessi" x="0" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph00612" xMin="138" yMin="-20" xMax="1017" yMax="1181">
      <contour>
        <pt x="451" y="181" on="1"/>
        <pt x="533" y="130" on="0"/>
        <pt x="621" y="130" on="1"/>
        <pt x="718" y="130" on="0"/>
        <pt x="832" y="253" on="0"/>
        <pt x="832" y="352" on="1"/>
        <pt x="832" y="450" on="0"/>
        <pt x="696" y="535" on="0"/>
        <pt x="561" y="535" on="1"/>
        <pt x="477" y="535" on="1"/>
        <pt x="477" y="672" on="1"/>
        <pt x="714" y="967" on="1"/>
        <pt x="636" y="1029" on="0"/>
        <pt x="537" y="1029" on="1"/>
        <pt x="326" y="1029" on="0"/>
        <pt x="322" y="762" on="1"/>
        <pt x="322" y="0" on="1"/>
        <pt x="138" y="0" on="1"/>
        <pt x="138" y="757" on="1"/>
        <pt x="139" y="967" on="0"/>
        <pt x="336" y="1181" on="0"/>
        <pt x="537" y="1181" on="1"/>
        <pt x="644" y="1181" on="0"/>
        <pt x="839" y="1096" on="0"/>
        <pt x="940" y="998" on="1"/>
        <pt x="666" y="668" on="1"/>
        <pt x="835" y="653" on="0"/>
        <pt x="1017" y="490" on="0"/>
        <pt x="1017" y="356" on="1"/>
        <pt x="1017" y="184" on="0"/>
        <pt x="802" y="-20" on="0"/>
        <pt x="621" y="-20" on="1"/>
        <pt x="502" y="-20" on="0"/>
        <pt x="398" y="29" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          21 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          16 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          31
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          31 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          2 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          25 31 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          25
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 5 values pushed */
          31 25 47 25 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 2 values pushed */
          8 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MDRP[11100]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          10
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          13 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00613" xMin="120" yMin="-21" xMax="1161" yMax="1185">
      <contour>
        <pt x="1161" y="572" on="1"/>
        <pt x="1161" y="294" on="0"/>
        <pt x="881" y="-21" on="0"/>
        <pt x="403" y="-21" on="0"/>
        <pt x="121" y="295" on="0"/>
        <pt x="120" y="571" on="1"/>
        <pt x="120" y="591" on="1"/>
        <pt x="120" y="867" on="0"/>
        <pt x="401" y="1185" on="0"/>
        <pt x="879" y="1185" on="0"/>
        <pt x="1160" y="869" on="0"/>
        <pt x="1161" y="592" on="1"/>
      </contour>
      <contour>
        <pt x="975" y="605" on="1"/>
        <pt x="975" y="807" on="0"/>
        <pt x="797" y="1033" on="0"/>
        <pt x="640" y="1033" on="1"/>
        <pt x="485" y="1033" on="0"/>
        <pt x="307" y="809" on="0"/>
        <pt x="305" y="612" on="1"/>
        <pt x="305" y="560" on="1"/>
        <pt x="305" y="359" on="0"/>
        <pt x="487" y="130" on="0"/>
        <pt x="642" y="130" on="1"/>
        <pt x="796" y="130" on="0"/>
        <pt x="973" y="351" on="0"/>
        <pt x="975" y="553" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          15 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          22 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00614" xMin="59" yMin="0" xMax="978" yMax="1456">
      <contour>
        <pt x="978" y="1352" on="1"/>
        <pt x="400" y="0" on="1"/>
        <pt x="214" y="0" on="1"/>
        <pt x="790" y="1304" on="1"/>
        <pt x="59" y="1304" on="1"/>
        <pt x="59" y="1456" on="1"/>
        <pt x="978" y="1456" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          3 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 3 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00615" xMin="140" yMin="-20" xMax="1076" yMax="1536">
      <contour>
        <pt x="1076" y="530" on="1"/>
        <pt x="1076" y="371" on="0"/>
        <pt x="965" y="119" on="0"/>
        <pt x="764" y="-20" on="0"/>
        <pt x="636" y="-20" on="1"/>
        <pt x="427" y="-20" on="0"/>
        <pt x="315" y="129" on="1"/>
        <pt x="300" y="0" on="1"/>
        <pt x="140" y="0" on="1"/>
        <pt x="140" y="1536" on="1"/>
        <pt x="325" y="1536" on="1"/>
        <pt x="325" y="963" on="1"/>
        <pt x="437" y="1102" on="0"/>
        <pt x="634" y="1102" on="1"/>
        <pt x="835" y="1102" on="0"/>
        <pt x="1076" y="801" on="0"/>
        <pt x="1076" y="544" on="1"/>
      </contour>
      <contour>
        <pt x="891" y="551" on="1"/>
        <pt x="891" y="731" on="0"/>
        <pt x="728" y="945" on="0"/>
        <pt x="588" y="945" on="1"/>
        <pt x="405" y="945" on="0"/>
        <pt x="325" y="775" on="1"/>
        <pt x="325" y="307" on="1"/>
        <pt x="410" y="136" on="0"/>
        <pt x="590" y="136" on="1"/>
        <pt x="728" y="136" on="0"/>
        <pt x="891" y="352" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          20 28 29
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          6 13 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          11 13 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          20 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          25 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00616" xMin="92" yMin="-20" xMax="1007" yMax="1102">
      <contour>
        <pt x="576" y="131" on="1"/>
        <pt x="675" y="131" on="0"/>
        <pt x="823" y="251" on="0"/>
        <pt x="831" y="341" on="1"/>
        <pt x="1007" y="341" on="1"/>
        <pt x="1002" y="247" on="0"/>
        <pt x="882" y="79" on="0"/>
        <pt x="686" y="-20" on="0"/>
        <pt x="576" y="-20" on="1"/>
        <pt x="353" y="-20" on="0"/>
        <pt x="92" y="278" on="0"/>
        <pt x="92" y="530" on="1"/>
        <pt x="92" y="562" on="1"/>
        <pt x="92" y="719" on="0"/>
        <pt x="210" y="968" on="0"/>
        <pt x="429" y="1102" on="0"/>
        <pt x="576" y="1102" on="1"/>
        <pt x="758" y="1102" on="0"/>
        <pt x="999" y="884" on="0"/>
        <pt x="1007" y="710" on="1"/>
        <pt x="831" y="710" on="1"/>
        <pt x="823" y="815" on="0"/>
        <pt x="680" y="950" on="0"/>
        <pt x="576" y="950" on="1"/>
        <pt x="433" y="950" on="0"/>
        <pt x="278" y="744" on="0"/>
        <pt x="278" y="553" on="1"/>
        <pt x="278" y="520" on="1"/>
        <pt x="278" y="332" on="0"/>
        <pt x="435" y="131" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          0 30 31
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          16 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          23 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00617" xMin="91" yMin="-20" xMax="1024" yMax="1536">
      <contour>
        <pt x="91" y="550" on="1"/>
        <pt x="91" y="709" on="0"/>
        <pt x="204" y="961" on="0"/>
        <pt x="410" y="1102" on="0"/>
        <pt x="538" y="1102" on="1"/>
        <pt x="728" y="1102" on="0"/>
        <pt x="839" y="972" on="1"/>
        <pt x="839" y="1536" on="1"/>
        <pt x="1024" y="1536" on="1"/>
        <pt x="1024" y="0" on="1"/>
        <pt x="863" y="0" on="1"/>
        <pt x="849" y="120" on="1"/>
        <pt x="738" y="-20" on="0"/>
        <pt x="536" y="-20" on="1"/>
        <pt x="412" y="-20" on="0"/>
        <pt x="209" y="120" on="0"/>
        <pt x="92" y="371" on="0"/>
        <pt x="91" y="523" on="1"/>
      </contour>
      <contour>
        <pt x="276" y="529" on="1"/>
        <pt x="276" y="352" on="0"/>
        <pt x="444" y="136" on="0"/>
        <pt x="582" y="136" on="1"/>
        <pt x="757" y="136" on="0"/>
        <pt x="839" y="295" on="1"/>
        <pt x="839" y="792" on="1"/>
        <pt x="756" y="945" on="0"/>
        <pt x="584" y="945" on="1"/>
        <pt x="443" y="945" on="0"/>
        <pt x="276" y="731" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          26 29 30
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          26
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          6 4 13
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          11 4 13
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          21 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          26 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00618" xMin="91" yMin="-426" xMax="1024" yMax="1102">
      <contour>
        <pt x="91" y="550" on="1"/>
        <pt x="91" y="796" on="0"/>
        <pt x="339" y="1102" on="0"/>
        <pt x="537" y="1102" on="1"/>
        <pt x="741" y="1102" on="0"/>
        <pt x="852" y="954" on="1"/>
        <pt x="867" y="1082" on="1"/>
        <pt x="1024" y="1082" on="1"/>
        <pt x="1024" y="72" on="1"/>
        <pt x="1022" y="-167" on="0"/>
        <pt x="778" y="-426" on="0"/>
        <pt x="554" y="-426" on="1"/>
        <pt x="468" y="-426" on="0"/>
        <pt x="268" y="-371" on="0"/>
        <pt x="196" y="-321" on="1"/>
        <pt x="251" y="-183" on="1"/>
        <pt x="314" y="-225" on="0"/>
        <pt x="473" y="-275" on="0"/>
        <pt x="552" y="-275" on="1"/>
        <pt x="701" y="-275" on="0"/>
        <pt x="839" y="-99" on="0"/>
        <pt x="839" y="69" on="1"/>
        <pt x="839" y="109" on="1"/>
        <pt x="728" y="-20" on="0"/>
        <pt x="535" y="-20" on="1"/>
        <pt x="341" y="-20" on="0"/>
        <pt x="91" y="292" on="0"/>
        <pt x="91" y="536" on="1"/>
      </contour>
      <contour>
        <pt x="276" y="529" on="1"/>
        <pt x="276" y="353" on="0"/>
        <pt x="442" y="136" on="0"/>
        <pt x="581" y="136" on="1"/>
        <pt x="756" y="136" on="0"/>
        <pt x="839" y="297" on="1"/>
        <pt x="839" y="788" on="1"/>
        <pt x="756" y="945" on="0"/>
        <pt x="583" y="945" on="1"/>
        <pt x="441" y="945" on="0"/>
        <pt x="276" y="730" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          31 39 40
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          24
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          24 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          5 3 24
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          18 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          22 3 24
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          24
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          31 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          36 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00619" xMin="90" yMin="-20" xMax="1092" yMax="1102">
      <contour>
        <pt x="90" y="551" on="1"/>
        <pt x="90" y="707" on="0"/>
        <pt x="218" y="962" on="0"/>
        <pt x="445" y="1102" on="0"/>
        <pt x="589" y="1102" on="1"/>
        <pt x="810" y="1102" on="0"/>
        <pt x="1092" y="794" on="0"/>
        <pt x="1092" y="543" on="1"/>
        <pt x="1092" y="529" on="1"/>
        <pt x="1092" y="372" on="0"/>
        <pt x="966" y="120" on="0"/>
        <pt x="737" y="-20" on="0"/>
        <pt x="591" y="-20" on="1"/>
        <pt x="448" y="-20" on="0"/>
        <pt x="221" y="116" on="0"/>
        <pt x="92" y="365" on="0"/>
        <pt x="90" y="519" on="1"/>
      </contour>
      <contour>
        <pt x="275" y="529" on="1"/>
        <pt x="275" y="353" on="0"/>
        <pt x="450" y="131" on="0"/>
        <pt x="591" y="131" on="1"/>
        <pt x="733" y="131" on="0"/>
        <pt x="907" y="355" on="0"/>
        <pt x="907" y="551" on="1"/>
        <pt x="907" y="726" on="0"/>
        <pt x="730" y="950" on="0"/>
        <pt x="589" y="950" on="1"/>
        <pt x="450" y="950" on="0"/>
        <pt x="275" y="728" on="0"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          20 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          26 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00620" xMin="140" yMin="-416" xMax="1074" yMax="1102">
      <contour>
        <pt x="1074" y="529" on="1"/>
        <pt x="1074" y="371" on="0"/>
        <pt x="964" y="119" on="0"/>
        <pt x="764" y="-20" on="0"/>
        <pt x="635" y="-20" on="1"/>
        <pt x="438" y="-20" on="0"/>
        <pt x="325" y="105" on="1"/>
        <pt x="325" y="-416" on="1"/>
        <pt x="140" y="-416" on="1"/>
        <pt x="140" y="1082" on="1"/>
        <pt x="299" y="1082" on="1"/>
        <pt x="314" y="957" on="1"/>
        <pt x="430" y="1102" on="0"/>
        <pt x="632" y="1102" on="1"/>
        <pt x="825" y="1102" on="0"/>
        <pt x="1063" y="823" on="0"/>
        <pt x="1073" y="589" on="1"/>
      </contour>
      <contour>
        <pt x="889" y="550" on="1"/>
        <pt x="889" y="726" on="0"/>
        <pt x="720" y="945" on="0"/>
        <pt x="577" y="945" on="1"/>
        <pt x="409" y="945" on="0"/>
        <pt x="325" y="796" on="1"/>
        <pt x="325" y="279" on="1"/>
        <pt x="408" y="131" on="0"/>
        <pt x="579" y="131" on="1"/>
        <pt x="719" y="131" on="0"/>
        <pt x="889" y="354" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          25 28 29
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          6 13 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          11 13 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          20 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          25 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00621" xMin="91" yMin="-416" xMax="1023" yMax="1102">
      <contour>
        <pt x="91" y="549" on="1"/>
        <pt x="91" y="794" on="0"/>
        <pt x="338" y="1102" on="0"/>
        <pt x="542" y="1102" on="1"/>
        <pt x="738" y="1102" on="0"/>
        <pt x="849" y="968" on="1"/>
        <pt x="863" y="1082" on="1"/>
        <pt x="1023" y="1082" on="1"/>
        <pt x="1023" y="-416" on="1"/>
        <pt x="838" y="-416" on="1"/>
        <pt x="838" y="100" on="1"/>
        <pt x="726" y="-20" on="0"/>
        <pt x="540" y="-20" on="1"/>
        <pt x="341" y="-20" on="0"/>
        <pt x="91" y="289" on="0"/>
        <pt x="91" y="535" on="1"/>
      </contour>
      <contour>
        <pt x="276" y="528" on="1"/>
        <pt x="276" y="354" on="0"/>
        <pt x="446" y="131" on="0"/>
        <pt x="586" y="131" on="1"/>
        <pt x="752" y="131" on="0"/>
        <pt x="838" y="278" on="1"/>
        <pt x="838" y="807" on="1"/>
        <pt x="750" y="950" on="0"/>
        <pt x="588" y="950" on="1"/>
        <pt x="446" y="950" on="0"/>
        <pt x="276" y="727" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          24 27 28
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          24
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          5 3 12
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          10 3 12
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          19 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          24 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00622" xMin="93" yMin="-20" xMax="1011" yMax="1102">
      <contour>
        <pt x="625" y="-20" on="1"/>
        <pt x="396" y="-20" on="0"/>
        <pt x="105" y="259" on="0"/>
        <pt x="94" y="486" on="1"/>
        <pt x="93" y="564" on="1"/>
        <pt x="93" y="719" on="0"/>
        <pt x="217" y="964" on="0"/>
        <pt x="438" y="1102" on="0"/>
        <pt x="566" y="1102" on="1"/>
        <pt x="779" y="1102" on="0"/>
        <pt x="1011" y="844" on="0"/>
        <pt x="1011" y="604" on="1"/>
        <pt x="1011" y="488" on="1"/>
        <pt x="279" y="488" on="1"/>
        <pt x="287" y="331" on="0"/>
        <pt x="481" y="131" on="0"/>
        <pt x="634" y="131" on="1"/>
        <pt x="794" y="131" on="0"/>
        <pt x="914" y="221" on="1"/>
        <pt x="971" y="94" on="1"/>
        <pt x="840" y="-20" on="0"/>
      </contour>
      <contour>
        <pt x="566" y="950" on="1"/>
        <pt x="451" y="950" on="0"/>
        <pt x="299" y="790" on="0"/>
        <pt x="282" y="640" on="1"/>
        <pt x="826" y="640" on="1"/>
        <pt x="826" y="665" on="1"/>
        <pt x="826" y="796" on="0"/>
        <pt x="689" y="950" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          8 29 30
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          25 8 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          25
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 5 values pushed */
          191 25 207 25 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          12 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          16 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          21 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00623" xMin="96" yMin="-426" xMax="1010" yMax="1102">
      <contour>
        <pt x="96" y="549" on="1"/>
        <pt x="96" y="799" on="0"/>
        <pt x="328" y="1102" on="0"/>
        <pt x="523" y="1102" on="1"/>
        <pt x="725" y="1102" on="0"/>
        <pt x="837" y="955" on="1"/>
        <pt x="853" y="1082" on="1"/>
        <pt x="1010" y="1082" on="1"/>
        <pt x="1010" y="63" on="1"/>
        <pt x="1010" y="-171" on="0"/>
        <pt x="765" y="-426" on="0"/>
        <pt x="540" y="-426" on="1"/>
        <pt x="458" y="-426" on="0"/>
        <pt x="283" y="-381" on="0"/>
        <pt x="218" y="-340" on="1"/>
        <pt x="273" y="-202" on="1"/>
        <pt x="395" y="-275" on="0"/>
        <pt x="538" y="-275" on="1"/>
        <pt x="687" y="-275" on="0"/>
        <pt x="824" y="-108" on="0"/>
        <pt x="824" y="50" on="1"/>
        <pt x="824" y="108" on="1"/>
        <pt x="713" y="-20" on="0"/>
        <pt x="521" y="-20" on="1"/>
        <pt x="331" y="-20" on="0"/>
        <pt x="96" y="286" on="0"/>
        <pt x="96" y="536" on="1"/>
      </contour>
      <contour>
        <pt x="282" y="528" on="1"/>
        <pt x="282" y="347" on="0"/>
        <pt x="431" y="136" on="0"/>
        <pt x="567" y="136" on="1"/>
        <pt x="742" y="136" on="0"/>
        <pt x="824" y="296" on="1"/>
        <pt x="824" y="790" on="1"/>
        <pt x="739" y="945" on="0"/>
        <pt x="569" y="945" on="1"/>
        <pt x="432" y="945" on="0"/>
        <pt x="282" y="737" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          35 38 39
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          23 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          5 3 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          17 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          21 3 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          30 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          35 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00624" xMin="87" yMin="0" xMax="646" yMax="1463">
      <component glyphName="one" x="-83" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph00625" xMin="103" yMin="-16" xMax="1169" yMax="1181">
      <contour>
        <pt x="488" y="-16" on="1"/>
        <pt x="317" y="-16" on="0"/>
        <pt x="103" y="149" on="0"/>
        <pt x="103" y="278" on="1"/>
        <pt x="103" y="364" on="0"/>
        <pt x="181" y="498" on="0"/>
        <pt x="285" y="573" on="1"/>
        <pt x="360" y="627" on="1"/>
        <pt x="285" y="706" on="1"/>
        <pt x="192" y="810" on="0"/>
        <pt x="192" y="918" on="1"/>
        <pt x="192" y="1033" on="0"/>
        <pt x="365" y="1181" on="0"/>
        <pt x="509" y="1181" on="1"/>
        <pt x="643" y="1181" on="0"/>
        <pt x="820" y="1031" on="0"/>
        <pt x="820" y="919" on="1"/>
        <pt x="820" y="775" on="0"/>
        <pt x="665" y="664" on="1"/>
        <pt x="592" y="612" on="1"/>
        <pt x="860" y="327" on="1"/>
        <pt x="929" y="443" on="0"/>
        <pt x="929" y="600" on="1"/>
        <pt x="1097" y="600" on="1"/>
        <pt x="1097" y="376" on="0"/>
        <pt x="970" y="210" on="1"/>
        <pt x="1169" y="0" on="1"/>
        <pt x="959" y="0" on="1"/>
        <pt x="865" y="97" on="1"/>
        <pt x="714" y="-16" on="0"/>
      </contour>
      <contour>
        <pt x="505" y="137" on="1"/>
        <pt x="650" y="137" on="0"/>
        <pt x="756" y="212" on="1"/>
        <pt x="463" y="519" on="1"/>
        <pt x="363" y="446" on="1"/>
        <pt x="287" y="387" on="0"/>
        <pt x="287" y="303" on="1"/>
        <pt x="287" y="230" on="0"/>
        <pt x="394" y="137" on="0"/>
      </contour>
      <contour>
        <pt x="373" y="905" on="1"/>
        <pt x="373" y="847" on="0"/>
        <pt x="436" y="777" on="1"/>
        <pt x="490" y="720" on="1"/>
        <pt x="556" y="768" on="1"/>
        <pt x="639" y="828" on="0"/>
        <pt x="639" y="905" on="1"/>
        <pt x="639" y="957" on="0"/>
        <pt x="567" y="1026" on="0"/>
        <pt x="501" y="1026" on="1"/>
        <pt x="445" y="1026" on="0"/>
        <pt x="373" y="956" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          44 51 52
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          44
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          44
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          31
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          26
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          26 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          42 13 26
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          33 13 26
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          7 42 33
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          19 33 42
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          30 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          20 30 13
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          22 13 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          28 0 13
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          25 20 28
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          32 30 20
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          48 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00626" xMin="0" yMin="0" xMax="907" yMax="1165">
      <contour>
        <pt x="589" y="657" on="1"/>
        <pt x="323" y="572" on="1"/>
        <pt x="323" y="151" on="1"/>
        <pt x="907" y="151" on="1"/>
        <pt x="907" y="0" on="1"/>
        <pt x="138" y="0" on="1"/>
        <pt x="138" y="514" on="1"/>
        <pt x="0" y="470" on="1"/>
        <pt x="0" y="595" on="1"/>
        <pt x="138" y="639" on="1"/>
        <pt x="138" y="1165" on="1"/>
        <pt x="323" y="1165" on="1"/>
        <pt x="323" y="697" on="1"/>
        <pt x="589" y="782" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          0 14 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          13 4 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          0 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          1
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          2 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00627" xMin="9" yMin="0" xMax="1521" yMax="1165">
      <contour>
        <pt x="1416" y="533" on="1"/>
        <pt x="957" y="533" on="1"/>
        <pt x="971" y="149" on="1"/>
        <pt x="1521" y="149" on="1"/>
        <pt x="1521" y="0" on="1"/>
        <pt x="791" y="0" on="1"/>
        <pt x="780" y="301" on="1"/>
        <pt x="370" y="301" on="1"/>
        <pt x="207" y="0" on="1"/>
        <pt x="9" y="0" on="1"/>
        <pt x="671" y="1165" on="1"/>
        <pt x="1480" y="1165" on="1"/>
        <pt x="1480" y="1015" on="1"/>
        <pt x="940" y="1015" on="1"/>
        <pt x="952" y="683" on="1"/>
        <pt x="1416" y="683" on="1"/>
      </contour>
      <contour>
        <pt x="451" y="452" on="1"/>
        <pt x="775" y="452" on="1"/>
        <pt x="756" y="1014" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          5 19 20
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          15 10 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          2 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          17 10 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          6 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          12 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          18 10 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00628" xMin="138" yMin="0" xMax="951" yMax="1165">
      <contour>
        <pt x="138" y="1165" on="1"/>
        <pt x="323" y="1165" on="1"/>
        <pt x="323" y="962" on="1"/>
        <pt x="520" y="962" on="1"/>
        <pt x="716" y="958" on="0"/>
        <pt x="951" y="761" on="0"/>
        <pt x="951" y="595" on="1"/>
        <pt x="951" y="426" on="0"/>
        <pt x="717" y="236" on="0"/>
        <pt x="503" y="236" on="1"/>
        <pt x="323" y="236" on="1"/>
        <pt x="323" y="0" on="1"/>
        <pt x="138" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="323" y="810" on="1"/>
        <pt x="323" y="388" on="1"/>
        <pt x="505" y="388" on="1"/>
        <pt x="633" y="388" on="0"/>
        <pt x="765" y="496" on="0"/>
        <pt x="765" y="594" on="1"/>
        <pt x="765" y="690" on="0"/>
        <pt x="629" y="809" on="0"/>
        <pt x="510" y="810" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          21 22 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          2 0 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          15 0 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          9 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          13 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00629" xMin="96" yMin="-57" xMax="1114" yMax="1206">
      <contour>
        <pt x="982" y="1020" on="1"/>
        <pt x="1114" y="867" on="0"/>
        <pt x="1114" y="610" on="1"/>
        <pt x="1114" y="548" on="1"/>
        <pt x="1114" y="287" on="0"/>
        <pt x="838" y="-16" on="0"/>
        <pt x="606" y="-16" on="1"/>
        <pt x="452" y="-16" on="0"/>
        <pt x="336" y="55" on="1"/>
        <pt x="261" y="-57" on="1"/>
        <pt x="112" y="-57" on="1"/>
        <pt x="239" y="133" on="1"/>
        <pt x="96" y="287" on="0"/>
        <pt x="96" y="552" on="1"/>
        <pt x="96" y="615" on="1"/>
        <pt x="96" y="873" on="0"/>
        <pt x="375" y="1181" on="0"/>
        <pt x="604" y="1181" on="1"/>
        <pt x="765" y="1181" on="0"/>
        <pt x="888" y="1103" on="1"/>
        <pt x="957" y="1206" on="1"/>
        <pt x="1106" y="1206" on="1"/>
      </contour>
      <contour>
        <pt x="279" y="548" on="1"/>
        <pt x="279" y="389" on="0"/>
        <pt x="340" y="284" on="1"/>
        <pt x="797" y="966" on="1"/>
        <pt x="718" y="1025" on="0"/>
        <pt x="604" y="1025" on="1"/>
        <pt x="454" y="1025" on="0"/>
        <pt x="279" y="811" on="0"/>
        <pt x="279" y="614" on="1"/>
      </contour>
      <contour>
        <pt x="931" y="617" on="1"/>
        <pt x="931" y="768" on="0"/>
        <pt x="879" y="866" on="1"/>
        <pt x="426" y="190" on="1"/>
        <pt x="500" y="138" on="0"/>
        <pt x="606" y="138" on="1"/>
        <pt x="762" y="138" on="0"/>
        <pt x="931" y="349" on="0"/>
        <pt x="931" y="548" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          6 40 41
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          27
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          36
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          17 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          24 17 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          25 17 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          17
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          27 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          33 17 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          34 6 17
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          36 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00630" xMin="48" yMin="0" xMax="1203" yMax="1165">
      <contour>
        <pt x="1203" y="847" on="1"/>
        <pt x="1112" y="847" on="1"/>
        <pt x="1112" y="0" on="1"/>
        <pt x="927" y="0" on="1"/>
        <pt x="927" y="498" on="1"/>
        <pt x="323" y="498" on="1"/>
        <pt x="323" y="0" on="1"/>
        <pt x="138" y="0" on="1"/>
        <pt x="138" y="847" on="1"/>
        <pt x="48" y="847" on="1"/>
        <pt x="48" y="998" on="1"/>
        <pt x="138" y="998" on="1"/>
        <pt x="138" y="1165" on="1"/>
        <pt x="323" y="1165" on="1"/>
        <pt x="323" y="998" on="1"/>
        <pt x="927" y="998" on="1"/>
        <pt x="927" y="1165" on="1"/>
        <pt x="1112" y="1165" on="1"/>
        <pt x="1112" y="998" on="1"/>
        <pt x="1203" y="998" on="1"/>
      </contour>
      <contour>
        <pt x="323" y="650" on="1"/>
        <pt x="927" y="650" on="1"/>
        <pt x="927" y="847" on="1"/>
        <pt x="323" y="847" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          3 24 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          16 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          19 12 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          15 19 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          21 12 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          4 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          10
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00631" xMin="138" yMin="-437" xMax="1112" yMax="1165">
      <contour>
        <pt x="791" y="-437" on="1"/>
        <pt x="731" y="-437" on="0"/>
        <pt x="679" y="-419" on="1"/>
        <pt x="692" y="-262" on="1"/>
        <pt x="727" y="-275" on="0"/>
        <pt x="791" y="-275" on="1"/>
        <pt x="927" y="-275" on="0"/>
        <pt x="927" y="-80" on="1"/>
        <pt x="927" y="1" on="1"/>
        <pt x="323" y="876" on="1"/>
        <pt x="323" y="0" on="1"/>
        <pt x="138" y="0" on="1"/>
        <pt x="138" y="1165" on="1"/>
        <pt x="323" y="1165" on="1"/>
        <pt x="928" y="288" on="1"/>
        <pt x="928" y="1165" on="1"/>
        <pt x="1112" y="1165" on="1"/>
        <pt x="1112" y="-89" on="1"/>
        <pt x="1112" y="-258" on="0"/>
        <pt x="942" y="-437" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          2 20 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          15 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          5 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          9 12 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          14 10 12
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00815" xMin="-66" yMin="0" xMax="1055" yMax="1165">
      <component glyphName="glyph00560" x="0" y="0" flags="0x204"/>
      <component glyphName="glyph00550" x="-209" y="-136" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 3 values pushed */
          31 24 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 5 values pushed */
          223 24 239 24 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 5 values pushed */
          31 24 47 24 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          31 24 1
          DELTAP3[ ]	/* DeltaExceptionP3 */
          PUSH[ ]	/* 3 values pushed */
          79 24 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 5 values pushed */
          239 24 255 24 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          95 24 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00816" xMin="-66" yMin="0" xMax="1055" yMax="1165">
      <component glyphName="glyph00560" x="0" y="0" flags="0x204"/>
      <component glyphName="glyph00550" x="-209" y="-136" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 5 values pushed */
          239 23 255 23 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          79 23 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 3 values pushed */
          31 23 1
          DELTAP3[ ]	/* DeltaExceptionP3 */
          PUSH[ ]	/* 3 values pushed */
          223 23 1
          DELTAP3[ ]	/* DeltaExceptionP3 */
          PUSH[ ]	/* 3 values pushed */
          111 23 1
          DELTAP3[ ]	/* DeltaExceptionP3 */
          PUSH[ ]	/* 5 values pushed */
          223 23 239 23 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 3 values pushed */
          31 23 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 3 values pushed */
          95 23 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          31 23 47 23 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00817" xMin="40" yMin="0" xMax="1021" yMax="1165">
      <component glyphName="glyph00472" x="0" y="0" flags="0x204"/>
      <component glyphName="glyph00550" x="69" y="-32" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 3 values pushed */
          3 10 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          176 10 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00818" xMin="19" yMin="0" xMax="1136" yMax="1566">
      <component glyphName="glyph00563" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="213" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          12 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00819" xMin="19" yMin="0" xMax="1136" yMax="1566">
      <component glyphName="glyph00563" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="356" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          13 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00820" xMin="19" yMin="0" xMax="1136" yMax="1566">
      <component glyphName="glyph00563" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="110" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          15 4
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00821" xMin="19" yMin="0" xMax="1136" yMax="1546">
      <component glyphName="glyph00563" x="0" y="0" flags="0x204"/>
      <component glyphName="tilde" x="106" y="34" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          14 2
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00822" xMin="19" yMin="0" xMax="1136" yMax="1507">
      <component glyphName="glyph00563" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="158" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          18 2
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          27
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00823" xMin="19" yMin="0" xMax="1136" yMax="1657">
      <component glyphName="glyph00563" x="0" y="0" flags="0x204"/>
      <component glyphName="ring" x="245" y="41" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          14 6
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00824" xMin="19" yMin="0" xMax="1136" yMax="1660">
      <component glyphName="glyph00563" x="0" y="0" flags="0x204"/>
      <component glyphName="glyph00551" x="255" y="10" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph00825" xMin="96" yMin="-438" xMax="1072" yMax="1181">
      <component glyphName="glyph00561" x="0" y="0" flags="0x204"/>
      <component glyphName="cedilla" x="372" y="-3" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph00826" xMin="138" yMin="0" xMax="942" yMax="1566">
      <component glyphName="glyph00552" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="168" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          13 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00827" xMin="138" yMin="0" xMax="942" yMax="1566">
      <component glyphName="glyph00552" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="311" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          14 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00828" xMin="138" yMin="0" xMax="942" yMax="1566">
      <component glyphName="glyph00552" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="65" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          16 4
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00829" xMin="138" yMin="0" xMax="942" yMax="1507">
      <component glyphName="glyph00552" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="113" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          19 2
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          28
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00830" xMin="-66" yMin="0" xMax="351" yMax="1566">
      <component glyphName="glyph00483" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="-123" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          5 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00831" xMin="142" yMin="0" xMax="559" yMax="1566">
      <component glyphName="glyph00483" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="19" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          6 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00832" xMin="-57" yMin="0" xMax="548" yMax="1566">
      <component glyphName="glyph00483" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="-226" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          8 4
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00833" xMin="-77" yMin="0" xMax="572" yMax="1507">
      <component glyphName="glyph00483" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="-178" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          11 2
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00834" xMin="138" yMin="0" xMax="1112" yMax="1546">
      <component glyphName="glyph00478" x="0" y="0" flags="0x204"/>
      <component glyphName="tilde" x="149" y="34" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          13 2
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00835" xMin="96" yMin="-16" xMax="1114" yMax="1566">
      <component glyphName="glyph00477" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="238" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          29 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00836" xMin="96" yMin="-16" xMax="1114" yMax="1566">
      <component glyphName="glyph00477" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="381" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          30 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00837" xMin="96" yMin="-16" xMax="1114" yMax="1566">
      <component glyphName="glyph00477" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="135" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          32 4
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00838" xMin="96" yMin="-16" xMax="1114" yMax="1546">
      <component glyphName="glyph00477" x="0" y="0" flags="0x204"/>
      <component glyphName="tilde" x="131" y="34" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          31 2
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00839" xMin="96" yMin="-16" xMax="1114" yMax="1507">
      <component glyphName="glyph00477" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="183" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          35 2
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          44
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00840" xMin="116" yMin="-16" xMax="1034" yMax="1566">
      <component glyphName="glyph00471" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="207" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          19 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00841" xMin="116" yMin="-16" xMax="1034" yMax="1566">
      <component glyphName="glyph00471" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="350" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          17 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          20 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00842" xMin="116" yMin="-16" xMax="1034" yMax="1566">
      <component glyphName="glyph00471" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="104" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          22 4
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00843" xMin="116" yMin="-16" xMax="1034" yMax="1507">
      <component glyphName="glyph00471" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="152" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          25 2
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          34
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00844" xMin="13" yMin="0" xMax="1052" yMax="1566">
      <component glyphName="glyph00467" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="307" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          11 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00845" xMin="19" yMin="0" xMax="1136" yMax="1483">
      <component glyphName="glyph00563" x="0" y="0" flags="0x204"/>
      <component glyphName="macron" x="108" y="38" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          12
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00846" xMin="19" yMin="0" xMax="1136" yMax="1526">
      <component glyphName="glyph00563" x="0" y="0" flags="0x204"/>
      <component glyphName="breve" x="153" y="31" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          14 8
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00847" xMin="19" yMin="-433" xMax="1136" yMax="1165">
      <contour>
        <pt x="664" y="1165" on="1"/>
        <pt x="1136" y="0" on="1"/>
        <pt x="1098" y="0" on="1"/>
        <pt x="1040" y="-45" on="1"/>
        <pt x="927" y="-136" on="0"/>
        <pt x="927" y="-222" on="1"/>
        <pt x="927" y="-294" on="0"/>
        <pt x="1005" y="-294" on="1"/>
        <pt x="1053" y="-294" on="0"/>
        <pt x="1105" y="-268" on="1"/>
        <pt x="1118" y="-389" on="1"/>
        <pt x="1048" y="-433" on="0"/>
        <pt x="958" y="-433" on="1"/>
        <pt x="869" y="-433" on="0"/>
        <pt x="766" y="-329" on="0"/>
        <pt x="766" y="-243" on="1"/>
        <pt x="766" y="-95" on="0"/>
        <pt x="942" y="13" on="1"/>
        <pt x="838" y="279" on="1"/>
        <pt x="318" y="279" on="1"/>
        <pt x="208" y="0" on="1"/>
        <pt x="19" y="0" on="1"/>
        <pt x="498" y="1165" on="1"/>
      </contour>
      <contour>
        <pt x="378" y="430" on="1"/>
        <pt x="779" y="430" on="1"/>
        <pt x="580" y="939" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          20
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          20 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          7 3 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          23 20 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          19 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          25 0 20
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00848" xMin="96" yMin="-16" xMax="1072" yMax="1566">
      <component glyphName="glyph00561" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="361" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          31 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00849" xMin="96" yMin="-16" xMax="1072" yMax="1566">
      <component glyphName="glyph00561" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="115" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          33 4
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00850" xMin="96" yMin="-16" xMax="1072" yMax="1504">
      <component glyphName="glyph00561" x="0" y="0" flags="0x204"/>
      <component glyphName="dotaccent" x="336" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          35 2
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00851" xMin="96" yMin="-16" xMax="1072" yMax="1566">
      <component glyphName="glyph00561" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="136" y="31" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          33 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00852" xMin="138" yMin="0" xMax="1055" yMax="1566">
      <component glyphName="glyph00560" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="49" y="31" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          26 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00853" xMin="138" yMin="0" xMax="942" yMax="1483">
      <component glyphName="glyph00552" x="0" y="0" flags="0x204"/>
      <component glyphName="macron" x="63" y="38" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          13
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00854" xMin="138" yMin="0" xMax="942" yMax="1526">
      <component glyphName="glyph00552" x="0" y="0" flags="0x204"/>
      <component glyphName="breve" x="108" y="31" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          15 8
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00855" xMin="138" yMin="0" xMax="942" yMax="1504">
      <component glyphName="glyph00552" x="0" y="0" flags="0x204"/>
      <component glyphName="dotaccent" x="286" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          19 2
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00856" xMin="138" yMin="-433" xMax="942" yMax="1165">
      <contour>
        <pt x="855" y="526" on="1"/>
        <pt x="323" y="526" on="1"/>
        <pt x="323" y="151" on="1"/>
        <pt x="942" y="151" on="1"/>
        <pt x="942" y="0" on="1"/>
        <pt x="881" y="0" on="1"/>
        <pt x="823" y="-45" on="1"/>
        <pt x="710" y="-136" on="0"/>
        <pt x="710" y="-222" on="1"/>
        <pt x="710" y="-294" on="0"/>
        <pt x="788" y="-294" on="1"/>
        <pt x="836" y="-294" on="0"/>
        <pt x="888" y="-268" on="1"/>
        <pt x="901" y="-389" on="1"/>
        <pt x="831" y="-433" on="0"/>
        <pt x="741" y="-433" on="1"/>
        <pt x="652" y="-433" on="0"/>
        <pt x="549" y="-329" on="0"/>
        <pt x="549" y="-243" on="1"/>
        <pt x="549" y="-105" on="0"/>
        <pt x="704" y="0" on="1"/>
        <pt x="138" y="0" on="1"/>
        <pt x="138" y="1165" on="1"/>
        <pt x="936" y="1165" on="1"/>
        <pt x="936" y="1012" on="1"/>
        <pt x="323" y="1012" on="1"/>
        <pt x="323" y="678" on="1"/>
        <pt x="855" y="678" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          22
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          22 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          20
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          20 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          15 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          27
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          27
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          31 27 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          223 27 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          2 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          10 3 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          22
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          25 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00857" xMin="138" yMin="0" xMax="942" yMax="1566">
      <component glyphName="glyph00552" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="86" y="31" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          17 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00858" xMin="99" yMin="-16" xMax="1077" yMax="1566">
      <component glyphName="glyph00485" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="113" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          32 4
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00859" xMin="99" yMin="-16" xMax="1077" yMax="1526">
      <component glyphName="glyph00485" x="0" y="0" flags="0x204"/>
      <component glyphName="breve" x="156" y="31" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          32 8
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00860" xMin="99" yMin="-16" xMax="1077" yMax="1504">
      <component glyphName="glyph00485" x="0" y="0" flags="0x204"/>
      <component glyphName="dotaccent" x="334" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          37 2
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00861" xMin="99" yMin="-516" xMax="1077" yMax="1181">
      <component glyphName="glyph00485" x="0" y="0" flags="0x204"/>
      <component glyphName="uniF6C3" x="335" y="-355" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph00862" xMin="138" yMin="0" xMax="1112" yMax="1566">
      <component glyphName="glyph00484" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="144" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          16 4
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00863" xMin="-107" yMin="0" xMax="600" yMax="1546">
      <component glyphName="glyph00483" x="0" y="0" flags="0x204"/>
      <component glyphName="tilde" x="-230" y="34" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          7 2
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00864" xMin="-86" yMin="0" xMax="586" yMax="1483">
      <component glyphName="glyph00483" x="0" y="0" flags="0x204"/>
      <component glyphName="macron" x="-228" y="38" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          5
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00865" xMin="-54" yMin="0" xMax="545" yMax="1526">
      <component glyphName="glyph00483" x="0" y="0" flags="0x204"/>
      <component glyphName="breve" x="-183" y="31" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          7 8
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00866" xMin="6" yMin="-433" xMax="358" yMax="1165">
      <component glyphName="glyph00483" x="0" y="0" flags="0x204"/>
      <component glyphName="ogonek" x="-44" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph00867" xMin="136" yMin="0" xMax="355" yMax="1504">
      <component glyphName="glyph00483" x="0" y="0" flags="0x204"/>
      <component glyphName="dotaccent" x="-5" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          11 2
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00868" xMin="43" yMin="-16" xMax="1037" yMax="1566">
      <component glyphName="glyph00482" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="263" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          20 4
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00869" xMin="138" yMin="-507" xMax="1111" yMax="1165">
      <component glyphName="glyph00481" x="0" y="0" flags="0x204"/>
      <component glyphName="uniF6C3" x="276" y="-346" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph00870" xMin="130" yMin="0" xMax="907" yMax="1566">
      <component glyphName="glyph00480" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="7" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          8 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00871" xMin="138" yMin="-505" xMax="907" yMax="1165">
      <component glyphName="glyph00480" x="0" y="0" flags="0x204"/>
      <component glyphName="uniF6C3" x="272" y="-344" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph00872" xMin="138" yMin="0" xMax="907" yMax="1166">
      <component glyphName="glyph00480" x="0" y="0" flags="0x204"/>
      <component glyphName="uniF6C3" x="382" y="927" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00873" xMin="138" yMin="0" xMax="907" yMax="1165">
      <component glyphName="glyph00480" x="0" y="0" flags="0x204"/>
      <component glyphName="dotaccent" x="358" y="-713" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph00874" xMin="138" yMin="0" xMax="1112" yMax="1566">
      <component glyphName="glyph00478" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="399" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          12 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00875" xMin="138" yMin="-509" xMax="1112" yMax="1165">
      <component glyphName="glyph00478" x="0" y="0" flags="0x204"/>
      <component glyphName="uniF6C3" x="364" y="-348" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph00876" xMin="138" yMin="0" xMax="1112" yMax="1566">
      <component glyphName="glyph00478" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="174" y="31" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          15 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00877" xMin="96" yMin="-16" xMax="1114" yMax="1483">
      <component glyphName="glyph00477" x="0" y="0" flags="0x204"/>
      <component glyphName="macron" x="133" y="38" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          29
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00878" xMin="96" yMin="-16" xMax="1114" yMax="1526">
      <component glyphName="glyph00477" x="0" y="0" flags="0x204"/>
      <component glyphName="breve" x="178" y="31" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          31 8
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00879" xMin="96" yMin="-16" xMax="1114" yMax="1565">
      <component glyphName="glyph00477" x="0" y="0" flags="0x204"/>
      <component glyphName="hungarumlaut" x="263" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          30 6
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          34
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00880" xMin="138" yMin="0" xMax="1061" yMax="1566">
      <component glyphName="glyph00474" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="295" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          25 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00881" xMin="138" yMin="-505" xMax="1061" yMax="1165">
      <component glyphName="glyph00474" x="0" y="0" flags="0x204"/>
      <component glyphName="uniF6C3" x="269" y="-344" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph00882" xMin="138" yMin="0" xMax="1061" yMax="1566">
      <component glyphName="glyph00474" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="70" y="31" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          28 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00883" xMin="67" yMin="-16" xMax="989" yMax="1566">
      <component glyphName="glyph00473" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="318" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          40 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00884" xMin="67" yMin="-16" xMax="989" yMax="1566">
      <component glyphName="glyph00473" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="72" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          42 4
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00885" xMin="67" yMin="-435" xMax="989" yMax="1181">
      <component glyphName="glyph00473" x="0" y="0" flags="0x204"/>
      <component glyphName="cedilla" x="339" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph00886" xMin="67" yMin="-16" xMax="989" yMax="1566">
      <component glyphName="glyph00473" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="93" y="31" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          42 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00887" xMin="40" yMin="-511" xMax="1021" yMax="1165">
      <component glyphName="glyph00472" x="0" y="0" flags="0x204"/>
      <component glyphName="uniF6C3" x="276" y="-350" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph00888" xMin="40" yMin="0" xMax="1021" yMax="1566">
      <component glyphName="glyph00472" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="80" y="31" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          13 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00889" xMin="40" yMin="-433" xMax="1021" yMax="1165">
      <component glyphName="glyph00472" x="0" y="0" flags="0x204"/>
      <component glyphName="cedilla" x="318" y="2" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph00890" xMin="116" yMin="-16" xMax="1034" yMax="1546">
      <component glyphName="glyph00471" x="0" y="0" flags="0x204"/>
      <component glyphName="tilde" x="100" y="34" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          17 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          21 2
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00891" xMin="116" yMin="-16" xMax="1034" yMax="1483">
      <component glyphName="glyph00471" x="0" y="0" flags="0x204"/>
      <component glyphName="macron" x="102" y="38" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          19
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00892" xMin="116" yMin="-16" xMax="1034" yMax="1526">
      <component glyphName="glyph00471" x="0" y="0" flags="0x204"/>
      <component glyphName="breve" x="147" y="31" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          21 8
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00893" xMin="116" yMin="-16" xMax="1034" yMax="1657">
      <component glyphName="glyph00471" x="0" y="0" flags="0x204"/>
      <component glyphName="ring" x="239" y="41" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          21 6
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          31
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00894" xMin="116" yMin="-16" xMax="1044" yMax="1565">
      <component glyphName="glyph00471" x="0" y="0" flags="0x204"/>
      <component glyphName="hungarumlaut" x="232" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          17 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          20 6
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00895" xMin="116" yMin="-396" xMax="1034" yMax="1165">
      <contour>
        <pt x="1034" y="1165" on="1"/>
        <pt x="1034" y="384" on="1"/>
        <pt x="1034" y="262" on="0"/>
        <pt x="914" y="76" on="0"/>
        <pt x="803" y="28" on="1"/>
        <pt x="753" y="-12" on="1"/>
        <pt x="645" y="-103" on="0"/>
        <pt x="645" y="-185" on="1"/>
        <pt x="645" y="-257" on="0"/>
        <pt x="723" y="-257" on="1"/>
        <pt x="771" y="-257" on="0"/>
        <pt x="823" y="-231" on="1"/>
        <pt x="836" y="-352" on="1"/>
        <pt x="766" y="-396" on="0"/>
        <pt x="676" y="-396" on="1"/>
        <pt x="587" y="-396" on="0"/>
        <pt x="484" y="-292" on="0"/>
        <pt x="484" y="-206" on="1"/>
        <pt x="484" y="-102" on="0"/>
        <pt x="574" y="-16" on="1"/>
        <pt x="369" y="-16" on="0"/>
        <pt x="120" y="190" on="0"/>
        <pt x="116" y="374" on="1"/>
        <pt x="116" y="1165" on="1"/>
        <pt x="299" y="1165" on="1"/>
        <pt x="299" y="385" on="1"/>
        <pt x="299" y="264" on="0"/>
        <pt x="442" y="135" on="0"/>
        <pt x="575" y="135" on="1"/>
        <pt x="706" y="135" on="0"/>
        <pt x="849" y="262" on="0"/>
        <pt x="849" y="385" on="1"/>
        <pt x="849" y="1165" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          24
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          24 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          14 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          19 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          24
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          32
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          5 19 32
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          9 3 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          28 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00896" xMin="49" yMin="0" xMax="1521" yMax="1566">
      <component glyphName="glyph00469" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="315" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          23 4
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00897" xMin="13" yMin="0" xMax="1052" yMax="1566">
      <component glyphName="glyph00467" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="61" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          13 4
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00898" xMin="13" yMin="0" xMax="1052" yMax="1507">
      <component glyphName="glyph00467" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="109" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          16 2
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          25
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00899" xMin="71" yMin="0" xMax="992" yMax="1566">
      <component glyphName="glyph00466" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="307" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          12 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00900" xMin="71" yMin="0" xMax="992" yMax="1504">
      <component glyphName="glyph00466" x="0" y="0" flags="0x204"/>
      <component glyphName="dotaccent" x="282" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          17 2
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph00901" xMin="71" yMin="0" xMax="992" yMax="1566">
      <component glyphName="glyph00466" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="82" y="31" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          15 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01165" xMin="93" yMin="0" xMax="1075" yMax="1476">
      <component glyphName="two" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01166" xMin="94" yMin="-20" xMax="1017" yMax="1476">
      <component glyphName="three" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01167" xMin="53" yMin="0" xMax="1104" yMax="1456">
      <component glyphName="four" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01168" xMin="154" yMin="-20" xMax="1069" yMax="1456">
      <component glyphName="five" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01169" xMin="152" yMin="-20" xMax="1072" yMax="1457">
      <component glyphName="six" x="20" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01170" xMin="132" yMin="-20" xMax="1058" yMax="1476">
      <component glyphName="eight" x="20" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01171" xMin="100" yMin="-1" xMax="1016" yMax="1476">
      <component glyphName="nine" x="0" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01172" xMin="135" yMin="-20" xMax="1054" yMax="1476">
      <component glyphName="zero" x="20" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01173" xMin="122" yMin="-20" xMax="1244" yMax="1879">
      <component glyphName="G" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="446" y="343" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          34 8
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01174" xMin="96" yMin="-426" xMax="1010" yMax="1536">
      <component glyphName="g" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="331" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          39 9
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01175" xMin="169" yMin="0" xMax="1288" yMax="1846">
      <component glyphName="N" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="358" y="310" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          11 8
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01176" xMin="140" yMin="0" xMax="991" yMax="1536">
      <component glyphName="n" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="204" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          19 9
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01177" xMin="28" yMin="0" xMax="1309" yMax="1824">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030F" x="1133" y="306" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          12 8
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01178" xMin="57" yMin="-20" xMax="1002" yMax="1515">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030F" x="1042" y="-3" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          23 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          42 9
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          46
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01179" xMin="95" yMin="0" xMax="1094" yMax="1836">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030F" x="1080" y="318" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          13 8
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01180" xMin="41" yMin="-20" xMax="1011" yMax="1515">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030F" x="1026" y="-3" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          31 9
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          35
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01181" xMin="-246" yMin="0" xMax="490" yMax="1836">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030F" x="739" y="318" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          5 8
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01182" xMin="-272" yMin="0" xMax="464" yMax="1513">
      <component glyphName="dotlessi" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030F" x="713" y="-5" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          5 9
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01183" xMin="118" yMin="-20" xMax="1289" yMax="1826">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030F" x="1167" y="308" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          33 8
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          37
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01184" xMin="51" yMin="-20" xMax="1076" yMax="1515">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030F" x="1036" y="-3" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          29 9
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          33
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01185" xMin="85" yMin="0" xMax="1225" yMax="1824">
      <component glyphName="R" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030F" x="1070" y="306" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          25 8
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          29
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01186" xMin="-117" yMin="0" xMax="663" yMax="1515">
      <component glyphName="r" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030F" x="868" y="-3" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          15 9
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01187" xMin="140" yMin="-20" xMax="1194" yMax="1824">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030F" x="1128" y="306" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          20 8
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01188" xMin="43" yMin="-20" xMax="988" yMax="1515">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="uni030F" x="1028" y="-3" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          18 9
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01189" xMin="-298" yMin="0" xMax="1234" yMax="1599">
      <component glyphName="Upsilon1" x="100" y="0" flags="0x4"/>
      <component glyphName="tonos" x="-481" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01190" xMin="169" yMin="-340" xMax="1160" yMax="1456">
      <component glyphName="B" x="0" y="0" flags="0x204"/>
      <component glyphName="dotbelowcomb" x="1210" y="10" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01191" xMin="140" yMin="-359" xMax="1056" yMax="1536">
      <component glyphName="b" x="0" y="0" flags="0x204"/>
      <component glyphName="dotbelowcomb" x="1195" y="-9" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01192" xMin="169" yMin="-340" xMax="1222" yMax="1456">
      <component glyphName="D" x="0" y="0" flags="0x204"/>
      <component glyphName="dotbelowcomb" x="1209" y="10" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01193" xMin="95" yMin="-350" xMax="1008" yMax="1536">
      <component glyphName="d" x="0" y="0" flags="0x204"/>
      <component glyphName="dotbelowcomb" x="1213" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01194" xMin="169" yMin="-503" xMax="1222" yMax="1456">
      <component glyphName="D" x="0" y="0" flags="0x204"/>
      <component glyphName="uniF6C3" x="357" y="-342" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 3 values pushed */
          0 26 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01195" xMin="95" yMin="-513" xMax="1008" yMax="1536">
      <component glyphName="d" x="0" y="0" flags="0x204"/>
      <component glyphName="uniF6C3" x="361" y="-352" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01196" xMin="169" yMin="-340" xMax="1288" yMax="1456">
      <component glyphName="H" x="0" y="0" flags="0x204"/>
      <component glyphName="dotbelowcomb" x="1311" y="10" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01197" xMin="140" yMin="-340" xMax="991" yMax="1536">
      <component glyphName="h" x="0" y="0" flags="0x204"/>
      <component glyphName="dotbelowcomb" x="1185" y="10" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01198" xMin="169" yMin="0" xMax="1285" yMax="1840">
      <component glyphName="K" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="379" y="304" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          14 8
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01199" xMin="141" yMin="0" xMax="1036" yMax="1857">
      <component glyphName="k" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="324" y="321" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          15
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01200" xMin="169" yMin="-261" xMax="1285" yMax="1456">
      <component glyphName="K" x="0" y="0" flags="0x204"/>
      <component glyphName="dotbelowcomb" x="1256" y="89" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01201" xMin="141" yMin="-280" xMax="1036" yMax="1536">
      <component glyphName="k" x="0" y="0" flags="0x204"/>
      <component glyphName="dotbelowcomb" x="1125" y="70" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01202" xMin="169" yMin="-340" xMax="1052" yMax="1456">
      <component glyphName="L" x="0" y="0" flags="0x204"/>
      <component glyphName="dotbelowcomb" x="1216" y="10" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01203" xMin="134" yMin="-340" xMax="353" yMax="1536">
      <component glyphName="l" x="0" y="0" flags="0x204"/>
      <component glyphName="dotbelowcomb" x="846" y="10" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01204" xMin="169" yMin="-340" xMax="1618" yMax="1456">
      <component glyphName="M" x="0" y="0" flags="0x204"/>
      <component glyphName="dotbelowcomb" x="1490" y="10" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01205" xMin="139" yMin="-340" xMax="1656" yMax="1102">
      <component glyphName="m" x="0" y="0" flags="0x204"/>
      <component glyphName="dotbelowcomb" x="1494" y="10" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01206" xMin="169" yMin="-340" xMax="1288" yMax="1456">
      <component glyphName="N" x="0" y="0" flags="0x204"/>
      <component glyphName="dotbelowcomb" x="1316" y="10" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01207" xMin="140" yMin="-340" xMax="991" yMax="1102">
      <component glyphName="n" x="0" y="0" flags="0x204"/>
      <component glyphName="dotbelowcomb" x="1159" y="10" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01208" xMin="118" yMin="-20" xMax="1289" yMax="2022">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="glyph00566" x="1291" y="339" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          35
          MDRP[11100]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          127 35 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 3 values pushed */
          239 35 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 3 values pushed */
          79 35 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 3 values pushed */
          47 35 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 1 value pushed */
          55
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01209" xMin="169" yMin="0" xMax="1216" yMax="1858">
      <component glyphName="P" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="380" y="322" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          22 8
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01210" xMin="140" yMin="-416" xMax="1054" yMax="1527">
      <component glyphName="p" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="403" y="-9" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          29 9
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01211" xMin="168" yMin="-340" xMax="1225" yMax="1456">
      <component glyphName="R" x="0" y="0" flags="0x204"/>
      <component glyphName="dotbelowcomb" x="1207" y="10" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01212" xMin="130" yMin="-340" xMax="663" yMax="1102">
      <component glyphName="r" x="0" y="0" flags="0x204"/>
      <component glyphName="dotbelowcomb" x="842" y="10" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01213" xMin="80" yMin="-350" xMax="1138" yMax="1476">
      <component glyphName="S" x="0" y="0" flags="0x204"/>
      <component glyphName="dotbelowcomb" x="1225" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01214" xMin="95" yMin="-358" xMax="955" yMax="1102">
      <component glyphName="s" x="0" y="0" flags="0x204"/>
      <component glyphName="dotbelowcomb" x="1159" y="-8" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01215" xMin="49" yMin="-350" xMax="1175" yMax="1456">
      <component glyphName="T" x="0" y="0" flags="0x204"/>
      <component glyphName="dotbelowcomb" x="1210" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01216" xMin="9" yMin="-350" xMax="598" yMax="1344">
      <component glyphName="t" x="0" y="0" flags="0x204"/>
      <component glyphName="dotbelowcomb" x="1049" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01217" xMin="140" yMin="-20" xMax="1194" yMax="2020">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="glyph00566" x="1252" y="337" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          18
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          18 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          22
          MDRP[11100]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          42
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01218" xMin="28" yMin="0" xMax="1277" yMax="1838">
      <component glyphName="V" x="0" y="0" flags="0x204"/>
      <component glyphName="tilde" x="180" y="326" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          10 4
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01219" xMin="33" yMin="0" xMax="954" yMax="1507">
      <component glyphName="v" x="0" y="0" flags="0x204"/>
      <component glyphName="tilde" x="29" y="-5" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          10 1
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01220" xMin="28" yMin="-340" xMax="1277" yMax="1456">
      <component glyphName="V" x="0" y="0" flags="0x204"/>
      <component glyphName="dotbelowcomb" x="1252" y="10" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01221" xMin="33" yMin="-340" xMax="954" yMax="1082">
      <component glyphName="v" x="0" y="0" flags="0x204"/>
      <component glyphName="dotbelowcomb" x="1101" y="10" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01222" xMin="61" yMin="-340" xMax="1773" yMax="1456">
      <component glyphName="W" x="0" y="0" flags="0x204"/>
      <component glyphName="dotbelowcomb" x="1519" y="10" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01223" xMin="43" yMin="-340" xMax="1491" yMax="1082">
      <component glyphName="w" x="0" y="0" flags="0x204"/>
      <component glyphName="dotbelowcomb" x="1363" y="10" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01224" xMin="86" yMin="-340" xMax="1146" yMax="1456">
      <component glyphName="Z" x="0" y="0" flags="0x204"/>
      <component glyphName="dotbelowcomb" x="1210" y="10" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01225" xMin="88" yMin="-340" xMax="947" yMax="1082">
      <component glyphName="z" x="0" y="0" flags="0x204"/>
      <component glyphName="dotbelowcomb" x="1122" y="10" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01227" xMin="19" yMin="0" xMax="1136" yMax="1308">
      <component glyphName="glyph00563" x="0" y="0" flags="0x204"/>
      <component glyphName="tonos" x="-36" y="-291" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01228" xMin="-157" yMin="0" xMax="1002" yMax="1311">
      <component glyphName="glyph00552" x="60" y="0" flags="0x4"/>
      <component glyphName="tonos" x="-340" y="-288" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01229" xMin="-128" yMin="0" xMax="1172" yMax="1308">
      <component glyphName="glyph00484" x="60" y="0" flags="0x4"/>
      <component glyphName="tonos" x="-311" y="-291" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01230" xMin="-124" yMin="0" xMax="397" yMax="1310">
      <component glyphName="glyph00483" x="60" y="0" flags="0x4"/>
      <component glyphName="tonos" x="-307" y="-289" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01231" xMin="-43" yMin="-16" xMax="1124" yMax="1308">
      <component glyphName="glyph00477" x="10" y="0" flags="0x4"/>
      <component glyphName="tonos" x="-226" y="-291" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01232" xMin="-229" yMin="0" xMax="1112" yMax="1308">
      <component glyphName="glyph00467" x="60" y="0" flags="0x4"/>
      <component glyphName="tonos" x="-412" y="-291" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01233" xMin="-18" yMin="0" xMax="1160" yMax="1307">
      <component glyphName="glyph00499" x="10" y="0" flags="0x4"/>
      <component glyphName="tonos" x="-201" y="-292" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01234" xMin="19" yMin="0" xMax="1136" yMax="1165">
      <component glyphName="glyph00563" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01235" xMin="138" yMin="0" xMax="1007" yMax="1165">
      <component glyphName="glyph00562" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01236" xMin="138" yMin="0" xMax="942" yMax="1165">
      <component glyphName="glyph00552" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01237" xMin="71" yMin="0" xMax="992" yMax="1165">
      <component glyphName="glyph00466" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01238" xMin="138" yMin="0" xMax="1112" yMax="1165">
      <component glyphName="glyph00484" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01239" xMin="151" yMin="0" xMax="337" yMax="1165">
      <component glyphName="glyph00483" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01240" xMin="138" yMin="0" xMax="1111" yMax="1165">
      <component glyphName="glyph00481" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01241" xMin="138" yMin="0" xMax="1399" yMax="1165">
      <component glyphName="glyph00479" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01242" xMin="138" yMin="0" xMax="1112" yMax="1165">
      <component glyphName="glyph00478" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01243" xMin="96" yMin="-16" xMax="1114" yMax="1181">
      <component glyphName="glyph00477" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01244" xMin="138" yMin="0" xMax="1051" yMax="1165">
      <component glyphName="glyph00476" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01245" xMin="40" yMin="0" xMax="1021" yMax="1165">
      <component glyphName="glyph00472" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01246" xMin="13" yMin="0" xMax="1052" yMax="1165">
      <component glyphName="glyph00467" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01247" xMin="38" yMin="0" xMax="1073" yMax="1165">
      <component glyphName="glyph00468" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01248" xMin="-77" yMin="0" xMax="572" yMax="1507">
      <component glyphName="glyph00483" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="-178" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          11 2
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01249" xMin="13" yMin="0" xMax="1052" yMax="1507">
      <component glyphName="glyph00467" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="109" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          16 2
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          25
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01250" xMin="138" yMin="0" xMax="942" yMax="1507">
      <component glyphName="glyph00552" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="113" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          19 2
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          28
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01251" xMin="138" yMin="0" xMax="901" yMax="1566">
      <component glyphName="glyph00490" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="308" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          8 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01252" xMin="67" yMin="-16" xMax="989" yMax="1181">
      <component glyphName="glyph00473" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01253" xMin="151" yMin="0" xMax="337" yMax="1165">
      <component glyphName="glyph00483" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01254" xMin="-77" yMin="0" xMax="572" yMax="1507">
      <component glyphName="glyph00483" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="-178" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          11 2
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01255" xMin="43" yMin="-16" xMax="845" yMax="1165">
      <component glyphName="glyph00482" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01256" xMin="138" yMin="0" xMax="1111" yMax="1566">
      <component glyphName="glyph00481" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="293" y="30" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          15 6
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01257" xMin="34" yMin="-20" xMax="1035" yMax="1526">
      <component glyphName="glyph00513" x="0" y="0" flags="0x204"/>
      <component glyphName="breve" x="103" y="31" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          20 8
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01258" xMin="19" yMin="0" xMax="1136" yMax="1165">
      <component glyphName="glyph00563" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01259" xMin="138" yMin="0" xMax="1007" yMax="1165">
      <component glyphName="glyph00562" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01260" xMin="138" yMin="0" xMax="901" yMax="1165">
      <component glyphName="glyph00490" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01261" xMin="138" yMin="0" xMax="942" yMax="1165">
      <component glyphName="glyph00552" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01262" xMin="138" yMin="0" xMax="1121" yMax="1526">
      <component glyphName="glyph00510" x="0" y="0" flags="0x204"/>
      <component glyphName="breve" x="201" y="31" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          13 8
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01263" xMin="138" yMin="0" xMax="1399" yMax="1165">
      <component glyphName="glyph00479" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01264" xMin="138" yMin="0" xMax="1112" yMax="1165">
      <component glyphName="glyph00484" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01265" xMin="96" yMin="-16" xMax="1114" yMax="1181">
      <component glyphName="glyph00477" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01266" xMin="138" yMin="0" xMax="1092" yMax="1165">
      <component glyphName="glyph00495" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01267" xMin="138" yMin="0" xMax="1051" yMax="1165">
      <component glyphName="glyph00476" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01268" xMin="96" yMin="-16" xMax="1072" yMax="1181">
      <component glyphName="glyph00561" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01269" xMin="40" yMin="0" xMax="1021" yMax="1165">
      <component glyphName="glyph00472" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01270" xMin="38" yMin="0" xMax="1073" yMax="1165">
      <component glyphName="glyph00468" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01271" xMin="71" yMin="-432" xMax="980" yMax="1181">
      <contour>
        <pt x="776" y="848" on="1"/>
        <pt x="776" y="932" on="0"/>
        <pt x="638" y="1025" on="0"/>
        <pt x="513" y="1025" on="1"/>
        <pt x="403" y="1025" on="0"/>
        <pt x="274" y="937" on="0"/>
        <pt x="274" y="858" on="1"/>
        <pt x="88" y="858" on="1"/>
        <pt x="88" y="1000" on="0"/>
        <pt x="325" y="1181" on="0"/>
        <pt x="513" y="1181" on="1"/>
        <pt x="724" y="1181" on="0"/>
        <pt x="962" y="1013" on="0"/>
        <pt x="962" y="863" on="1"/>
        <pt x="962" y="777" on="0"/>
        <pt x="852" y="636" on="0"/>
        <pt x="749" y="595" on="1"/>
        <pt x="867" y="559" on="0"/>
        <pt x="980" y="413" on="0"/>
        <pt x="980" y="322" on="1"/>
        <pt x="980" y="182" on="0"/>
        <pt x="777" y="7" on="0"/>
        <pt x="602" y="-11" on="1"/>
        <pt x="602" y="-432" on="1"/>
        <pt x="416" y="-432" on="1"/>
        <pt x="416" y="-9" on="1"/>
        <pt x="253" y="11" on="0"/>
        <pt x="71" y="184" on="0"/>
        <pt x="71" y="320" on="1"/>
        <pt x="256" y="320" on="1"/>
        <pt x="261" y="234" on="0"/>
        <pt x="392" y="138" on="0"/>
        <pt x="513" y="138" on="1"/>
        <pt x="649" y="138" on="0"/>
        <pt x="795" y="234" on="0"/>
        <pt x="795" y="322" on="1"/>
        <pt x="795" y="515" on="0"/>
        <pt x="538" y="520" on="1"/>
        <pt x="381" y="520" on="1"/>
        <pt x="381" y="672" on="1"/>
        <pt x="537" y="672" on="1"/>
        <pt x="776" y="677" on="0"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          25
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          25 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          24
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          24 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          3 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          6 10 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          39 25 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RUTG[ ]	/* RoundUpToGrid */
          PUSH[ ]	/* 1 value pushed */
          39
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSH[ ]	/* 3 values pushed */
          240 39 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          0 39 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 3 values pushed */
          160 39 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          96 39 112 39 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          48 39 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 5 values pushed */
          96 39 112 39 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 3 values pushed */
          38 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          16 38 39
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          29 25 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          32 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01272" xMin="138" yMin="-359" xMax="1274" yMax="1165">
      <contour>
        <pt x="1274" y="-359" on="1"/>
        <pt x="1088" y="-359" on="1"/>
        <pt x="1088" y="0" on="1"/>
        <pt x="927" y="0" on="1"/>
        <pt x="927" y="498" on="1"/>
        <pt x="323" y="498" on="1"/>
        <pt x="323" y="0" on="1"/>
        <pt x="138" y="0" on="1"/>
        <pt x="138" y="1165" on="1"/>
        <pt x="323" y="1165" on="1"/>
        <pt x="323" y="650" on="1"/>
        <pt x="927" y="650" on="1"/>
        <pt x="927" y="1165" on="1"/>
        <pt x="1112" y="1165" on="1"/>
        <pt x="1112" y="153" on="1"/>
        <pt x="1274" y="153" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          11 3 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RUTG[ ]	/* RoundUpToGrid */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSH[ ]	/* 3 values pushed */
          160 11 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          4 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          14 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01273" xMin="96" yMin="-426" xMax="1072" yMax="1181">
      <contour>
        <pt x="1072" y="377" on="1"/>
        <pt x="1052" y="209" on="0"/>
        <pt x="849" y="10" on="0"/>
        <pt x="680" y="-10" on="1"/>
        <pt x="680" y="-426" on="1"/>
        <pt x="494" y="-426" on="1"/>
        <pt x="494" y="-8" on="1"/>
        <pt x="311" y="22" on="0"/>
        <pt x="96" y="308" on="0"/>
        <pt x="96" y="535" on="1"/>
        <pt x="96" y="632" on="1"/>
        <pt x="96" y="796" on="0"/>
        <pt x="219" y="1045" on="0"/>
        <pt x="450" y="1181" on="0"/>
        <pt x="602" y="1181" on="1"/>
        <pt x="806" y="1181" on="0"/>
        <pt x="1053" y="970" on="0"/>
        <pt x="1072" y="783" on="1"/>
        <pt x="887" y="783" on="1"/>
        <pt x="869" y="913" on="0"/>
        <pt x="728" y="1029" on="0"/>
        <pt x="602" y="1029" on="1"/>
        <pt x="449" y="1029" on="0"/>
        <pt x="282" y="826" on="0"/>
        <pt x="281" y="637" on="1"/>
        <pt x="281" y="531" on="1"/>
        <pt x="281" y="342" on="0"/>
        <pt x="440" y="135" on="0"/>
        <pt x="591" y="135" on="1"/>
        <pt x="726" y="135" on="0"/>
        <pt x="867" y="246" on="0"/>
        <pt x="887" y="377" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          14 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          18
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          21 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          28 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          31
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01274" xMin="13" yMin="0" xMax="1052" yMax="1165">
      <component glyphName="glyph00467" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01275" xMin="2" yMin="-431" xMax="1387" yMax="1181">
      <component glyphName="glyph00535" x="0" y="0" flags="0x204"/>
      <component glyphName="glyph00593" x="700" y="-72" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01276" xMin="138" yMin="0" xMax="1121" yMax="1483">
      <component glyphName="glyph00510" x="0" y="0" flags="0x204"/>
      <component glyphName="macron" x="156" y="38" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          11
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01277" xMin="34" yMin="-20" xMax="1035" yMax="1483">
      <component glyphName="glyph00513" x="0" y="0" flags="0x204"/>
      <component glyphName="macron" x="58" y="38" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          17 28
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          19
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="glyph01278" xMin="96" yMin="0" xMax="1286" yMax="1165">
      <component glyphName="glyph00497" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="glyph01279" xMin="151" yMin="-16" xMax="1333" yMax="1165">
      <component glyphName="glyph00483" x="0" y="0" flags="0x4"/>
      <component glyphName="glyph00482" x="488" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01280" xMin="9" yMin="0" xMax="1521" yMax="1536">
      <component glyphName="glyph00627" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="670" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01281" xMin="96" yMin="-57" xMax="1114" yMax="1566">
      <component glyphName="glyph00629" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="381" y="30" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01282" xMin="67" yMin="-513" xMax="989" yMax="1181">
      <component glyphName="glyph00473" x="0" y="0" flags="0x204"/>
      <component glyphName="uniF6C3" x="297" y="-352" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01283" xMin="49" yMin="0" xMax="1521" yMax="1566">
      <component glyphName="glyph00469" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="418" y="30" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01284" xMin="49" yMin="0" xMax="1521" yMax="1566">
      <component glyphName="glyph00469" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="561" y="30" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01285" xMin="49" yMin="0" xMax="1521" yMax="1507">
      <component glyphName="glyph00469" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="363" y="30" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01286" xMin="13" yMin="0" xMax="1052" yMax="1566">
      <component glyphName="glyph00467" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="164" y="30" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01287" xMin="28" yMin="-433" xMax="1309" yMax="1456">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="ogonek" x="380" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01288" xMin="109" yMin="-433" xMax="1002" yMax="1102">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="ogonek" x="196" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01289" xMin="169" yMin="-423" xMax="1094" yMax="1456">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="ogonek" x="314" y="10" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01290" xMin="93" yMin="-433" xMax="1011" yMax="1102">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="ogonek" x="262" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01291" xMin="19" yMin="-433" xMax="1136" yMax="1165">
      <component glyphName="glyph00563" x="0" y="0" flags="0x204"/>
      <component glyphName="ogonek" x="286" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01292" xMin="138" yMin="-425" xMax="942" yMax="1165">
      <component glyphName="glyph00552" x="0" y="0" flags="0x204"/>
      <component glyphName="ogonek" x="231" y="8" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="glyph01293" xMin="133" yMin="-340" xMax="352" yMax="1082">
      <component glyphName="dotlessi" x="0" y="0" flags="0x204"/>
      <component glyphName="dotbelowcomb" x="845" y="10" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="grave" xMin="57" yMin="1242" xMax="474" yMax="1536">
      <contour>
        <pt x="474" y="1242" on="1"/>
        <pt x="315" y="1242" on="1"/>
        <pt x="57" y="1536" on="1"/>
        <pt x="280" y="1536" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          15 1 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 5 values pushed */
          15 2 31 2 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="gravecomb" xMin="-857" yMin="1242" xMax="-440" yMax="1536">
      <contour>
        <pt x="-440" y="1242" on="1"/>
        <pt x="-599" y="1242" on="1"/>
        <pt x="-857" y="1536" on="1"/>
        <pt x="-633" y="1536" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 5 values pushed */
          15 2 31 2 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="greater" xMin="134" yMin="196" xMax="988" yMax="1099">
      <contour>
        <pt x="795" y="650" on="1"/>
        <pt x="134" y="909" on="1"/>
        <pt x="134" y="1099" on="1"/>
        <pt x="988" y="721" on="1"/>
        <pt x="988" y="575" on="1"/>
        <pt x="134" y="196" on="1"/>
        <pt x="134" y="388" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="greaterequal" xMin="133" yMin="1" xMax="988" yMax="1104">
      <component glyphName="greater" x="0" y="115" scalex="1.0" scaley="0.9" flags="0x4"/>
      <component glyphName="minus" x="-35" y="-650" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="guillemotleft" xMin="102" yMin="151" xMax="868" yMax="947">
      <component glyphName="guilsinglleft" x="-6" y="-2" flags="0x4"/>
      <component glyphName="guilsinglleft" x="324" y="-2" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="guillemotright" xMin="102" yMin="152" xMax="888" yMax="949">
      <component glyphName="guilsinglright" x="13" y="0" flags="0x4"/>
      <component glyphName="guilsinglright" x="362" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="guilsinglleft" xMin="108" yMin="153" xMax="544" yMax="949">
      <contour>
        <pt x="286" y="550" on="1"/>
        <pt x="544" y="153" on="1"/>
        <pt x="403" y="153" on="1"/>
        <pt x="108" y="541" on="1"/>
        <pt x="108" y="560" on="1"/>
        <pt x="403" y="949" on="1"/>
        <pt x="544" y="949" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          2 7 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="guilsinglright" xMin="89" yMin="152" xMax="526" yMax="949">
      <contour>
        <pt x="231" y="949" on="1"/>
        <pt x="526" y="560" on="1"/>
        <pt x="526" y="541" on="1"/>
        <pt x="231" y="152" on="1"/>
        <pt x="89" y="152" on="1"/>
        <pt x="347" y="550" on="1"/>
        <pt x="89" y="949" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          3 7 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="h" xMin="140" yMin="0" xMax="991" yMax="1536">
      <contour>
        <pt x="325" y="951" on="1"/>
        <pt x="448" y="1102" on="0"/>
        <pt x="645" y="1102" on="1"/>
        <pt x="988" y="1102" on="0"/>
        <pt x="991" y="715" on="1"/>
        <pt x="991" y="0" on="1"/>
        <pt x="806" y="0" on="1"/>
        <pt x="806" y="716" on="1"/>
        <pt x="805" y="833" on="0"/>
        <pt x="700" y="945" on="0"/>
        <pt x="589" y="945" on="1"/>
        <pt x="499" y="945" on="0"/>
        <pt x="363" y="849" on="0"/>
        <pt x="325" y="771" on="1"/>
        <pt x="325" y="0" on="1"/>
        <pt x="140" y="0" on="1"/>
        <pt x="140" y="1536" on="1"/>
        <pt x="325" y="1536" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          10 18 19
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          14 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 2 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          10 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="hbar" xMin="-30" yMin="0" xMax="1021" yMax="1536">
      <contour>
        <pt x="606" y="1234" on="1"/>
        <pt x="355" y="1234" on="1"/>
        <pt x="355" y="951" on="1"/>
        <pt x="478" y="1102" on="0"/>
        <pt x="675" y="1102" on="1"/>
        <pt x="1018" y="1102" on="0"/>
        <pt x="1021" y="715" on="1"/>
        <pt x="1021" y="0" on="1"/>
        <pt x="836" y="0" on="1"/>
        <pt x="836" y="716" on="1"/>
        <pt x="835" y="833" on="0"/>
        <pt x="730" y="945" on="0"/>
        <pt x="619" y="945" on="1"/>
        <pt x="529" y="945" on="0"/>
        <pt x="393" y="849" on="0"/>
        <pt x="355" y="771" on="1"/>
        <pt x="355" y="0" on="1"/>
        <pt x="170" y="0" on="1"/>
        <pt x="170" y="1234" on="1"/>
        <pt x="-30" y="1234" on="1"/>
        <pt x="-30" y="1385" on="1"/>
        <pt x="170" y="1385" on="1"/>
        <pt x="170" y="1536" on="1"/>
        <pt x="355" y="1536" on="1"/>
        <pt x="355" y="1385" on="1"/>
        <pt x="606" y="1385" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          16 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          47 23 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          15 23 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          21 16 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          18 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          1
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          2 16 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          12 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="hcircumflex" xMin="140" yMin="0" xMax="991" yMax="1857">
      <component glyphName="h" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="29" y="321" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          20
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="hookabovecomb" xMin="-674" yMin="1241" xMax="-364" yMax="1652">
      <contour>
        <pt x="-652" y="1241" on="1"/>
        <pt x="-653" y="1394" on="1"/>
        <pt x="-578" y="1399" on="0"/>
        <pt x="-508" y="1429" on="0"/>
        <pt x="-508" y="1507" on="0"/>
        <pt x="-599" y="1546" on="0"/>
        <pt x="-674" y="1546" on="1"/>
        <pt x="-667" y="1652" on="1"/>
        <pt x="-518" y="1652" on="0"/>
        <pt x="-364" y="1549" on="0"/>
        <pt x="-364" y="1464" on="1"/>
        <pt x="-364" y="1403" on="0"/>
        <pt x="-442" y="1323" on="0"/>
        <pt x="-519" y="1312" on="1"/>
        <pt x="-520" y="1241" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          15 0 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 9 values pushed */
          15 7 31 7 47 7 63 7 4
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          1 0 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          13 0 7
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="hungarumlaut" xMin="94" yMin="1232" xMax="812" yMax="1535">
      <contour>
        <pt x="605" y="1535" on="1"/>
        <pt x="812" y="1535" on="1"/>
        <pt x="543" y="1232" on="1"/>
        <pt x="374" y="1232" on="1"/>
      </contour>
      <contour>
        <pt x="265" y="1535" on="1"/>
        <pt x="462" y="1535" on="1"/>
        <pt x="244" y="1232" on="1"/>
        <pt x="94" y="1232" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 5 values pushed */
          15 0 31 0 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="hyphen" xMin="37" yMin="543" xMax="525" yMax="694">
      <contour>
        <pt x="525" y="543" on="1"/>
        <pt x="37" y="543" on="1"/>
        <pt x="37" y="694" on="1"/>
        <pt x="525" y="694" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          1 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="i" xMin="141" yMin="0" xMax="360" yMax="1476">
      <contour>
        <pt x="341" y="0" on="1"/>
        <pt x="156" y="0" on="1"/>
        <pt x="156" y="1082" on="1"/>
        <pt x="341" y="1082" on="1"/>
      </contour>
      <contour>
        <pt x="141" y="1369" on="1"/>
        <pt x="141" y="1414" on="0"/>
        <pt x="196" y="1476" on="0"/>
        <pt x="304" y="1476" on="0"/>
        <pt x="360" y="1414" on="0"/>
        <pt x="360" y="1324" on="0"/>
        <pt x="304" y="1264" on="0"/>
        <pt x="196" y="1264" on="0"/>
        <pt x="141" y="1324" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          6 13 14
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          1
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          10
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          6 5 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="iacute" xMin="150" yMin="0" xMax="567" yMax="1535">
      <component glyphName="dotlessi" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="27" y="-1" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          6 9
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ibreve" xMin="-46" yMin="0" xMax="553" yMax="1495">
      <component glyphName="dotlessi" x="0" y="0" flags="0x204"/>
      <component glyphName="breve" x="-175" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          7
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="icircumflex" xMin="-49" yMin="0" xMax="556" yMax="1535">
      <component glyphName="dotlessi" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="-218" y="-1" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          8 1
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="idieresis" xMin="-69" yMin="0" xMax="580" yMax="1476">
      <component glyphName="dotlessi" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="-170" y="-1" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          11 1
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="igrave" xMin="-58" yMin="0" xMax="359" yMax="1535">
      <component glyphName="dotlessi" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="-115" y="-1" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          5 9
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ij" xMin="141" yMin="-437" xMax="842" yMax="1476">
      <component glyphName="i" x="0" y="0" flags="0x4"/>
      <component glyphName="j" x="497" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="imacron" xMin="-78" yMin="0" xMax="594" yMax="1451">
      <component glyphName="dotlessi" x="0" y="0" flags="0x204"/>
      <component glyphName="macron" x="-220" y="6" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          5
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="infinity" xMin="98" yMin="-21" xMax="1995" yMax="1102">
      <contour>
        <pt x="1995" y="527" on="1"/>
        <pt x="1995" y="380" on="0"/>
        <pt x="1869" y="124" on="0"/>
        <pt x="1646" y="-21" on="0"/>
        <pt x="1509" y="-21" on="1"/>
        <pt x="1364" y="-21" on="0"/>
        <pt x="1126" y="163" on="0"/>
        <pt x="1046" y="340" on="1"/>
        <pt x="965" y="161" on="0"/>
        <pt x="729" y="-21" on="0"/>
        <pt x="585" y="-21" on="1"/>
        <pt x="448" y="-21" on="0"/>
        <pt x="226" y="122" on="0"/>
        <pt x="98" y="378" on="0"/>
        <pt x="98" y="529" on="1"/>
        <pt x="98" y="553" on="1"/>
        <pt x="98" y="700" on="0"/>
        <pt x="224" y="956" on="0"/>
        <pt x="447" y="1102" on="0"/>
        <pt x="583" y="1102" on="1"/>
        <pt x="728" y="1102" on="0"/>
        <pt x="965" y="919" on="0"/>
        <pt x="1046" y="740" on="1"/>
        <pt x="1126" y="917" on="0"/>
        <pt x="1365" y="1102" on="0"/>
        <pt x="1511" y="1102" on="1"/>
        <pt x="1717" y="1102" on="0"/>
        <pt x="1995" y="783" on="0"/>
        <pt x="1995" y="540" on="1"/>
      </contour>
      <contour>
        <pt x="283" y="527" on="1"/>
        <pt x="283" y="350" on="0"/>
        <pt x="449" y="130" on="0"/>
        <pt x="585" y="130" on="1"/>
        <pt x="699" y="130" on="0"/>
        <pt x="884" y="318" on="0"/>
        <pt x="936" y="481" on="1"/>
        <pt x="947" y="520" on="1"/>
        <pt x="947" y="562" on="1"/>
        <pt x="923" y="661" on="0"/>
        <pt x="809" y="853" on="0"/>
        <pt x="663" y="950" on="0"/>
        <pt x="583" y="950" on="1"/>
        <pt x="449" y="950" on="0"/>
        <pt x="283" y="730" on="0"/>
        <pt x="283" y="545" on="1"/>
      </contour>
      <contour>
        <pt x="1810" y="553" on="1"/>
        <pt x="1810" y="727" on="0"/>
        <pt x="1644" y="950" on="0"/>
        <pt x="1511" y="950" on="1"/>
        <pt x="1396" y="950" on="0"/>
        <pt x="1208" y="761" on="0"/>
        <pt x="1155" y="593" on="1"/>
        <pt x="1146" y="562" on="1"/>
        <pt x="1146" y="520" on="1"/>
        <pt x="1168" y="423" on="0"/>
        <pt x="1285" y="226" on="0"/>
        <pt x="1429" y="130" on="0"/>
        <pt x="1509" y="130" on="1"/>
        <pt x="1645" y="130" on="0"/>
        <pt x="1810" y="352" on="0"/>
        <pt x="1810" y="536" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          7 61 62
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          36
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          52
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          25
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          25
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          7 25 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          22 25 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          32 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          41 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          48
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          32
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          57
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="integral" xMin="-80" yMin="-437" xMax="654" yMax="1557">
      <contour>
        <pt x="357" y="-107" on="1"/>
        <pt x="357" y="-269" on="0"/>
        <pt x="193" y="-437" on="0"/>
        <pt x="35" y="-437" on="1"/>
        <pt x="-22" y="-437" on="0"/>
        <pt x="-80" y="-417" on="1"/>
        <pt x="-62" y="-272" on="1"/>
        <pt x="-16" y="-285" on="0"/>
        <pt x="17" y="-285" on="1"/>
        <pt x="172" y="-285" on="0"/>
        <pt x="172" y="-108" on="1"/>
        <pt x="172" y="1197" on="1"/>
        <pt x="172" y="1367" on="0"/>
        <pt x="349" y="1557" on="0"/>
        <pt x="510" y="1557" on="1"/>
        <pt x="570" y="1557" on="0"/>
        <pt x="654" y="1536" on="1"/>
        <pt x="630" y="1394" on="1"/>
        <pt x="593" y="1405" on="0"/>
        <pt x="539" y="1405" on="1"/>
        <pt x="357" y="1405" on="0"/>
        <pt x="357" y="1186" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          2 22 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          14 32
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          8 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          19 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="iogonek" xMin="-5" yMin="-433" xMax="360" yMax="1476">
      <component glyphName="i" x="0" y="0" flags="0x204"/>
      <component glyphName="ogonek" x="-55" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="iota" xMin="195" yMin="-12" xMax="587" yMax="1082">
      <contour>
        <pt x="380" y="1082" on="1"/>
        <pt x="380" y="273" on="1"/>
        <pt x="380" y="210" on="0"/>
        <pt x="435" y="146" on="0"/>
        <pt x="499" y="146" on="1"/>
        <pt x="547" y="146" on="0"/>
        <pt x="586" y="158" on="1"/>
        <pt x="587" y="7" on="1"/>
        <pt x="517" y="-12" on="0"/>
        <pt x="444" y="-12" on="1"/>
        <pt x="195" y="-12" on="0"/>
        <pt x="195" y="282" on="1"/>
        <pt x="195" y="1082" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          4 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="iotadieresis" xMin="-27" yMin="-12" xMax="622" yMax="1457">
      <component glyphName="iota" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="-128" y="-20" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          20 1
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          29
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="iotadieresistonos" xMin="-101" yMin="-12" xMax="685" yMax="1652">
      <component glyphName="iota" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresistonos" x="-214" y="-20" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          24 1
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          24
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          33
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="iotatonos" xMin="195" yMin="-12" xMax="587" yMax="1573">
      <component glyphName="iota" x="0" y="0" flags="0x204"/>
      <component glyphName="tonos" x="42" y="-26" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          15 1
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="itilde" xMin="-99" yMin="0" xMax="608" yMax="1514">
      <component glyphName="dotlessi" x="0" y="0" flags="0x204"/>
      <component glyphName="tilde" x="-222" y="2" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          7 1
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="j" xMin="-65" yMin="-437" xMax="345" yMax="1476">
      <contour>
        <pt x="331" y="1082" on="1"/>
        <pt x="331" y="-125" on="1"/>
        <pt x="331" y="-437" on="0"/>
        <pt x="48" y="-437" on="1"/>
        <pt x="-13" y="-437" on="0"/>
        <pt x="-65" y="-419" on="1"/>
        <pt x="-65" y="-271" on="1"/>
        <pt x="-33" y="-279" on="0"/>
        <pt x="19" y="-279" on="1"/>
        <pt x="81" y="-279" on="0"/>
        <pt x="146" y="-212" on="0"/>
        <pt x="146" y="-129" on="1"/>
        <pt x="146" y="1082" on="1"/>
      </contour>
      <contour>
        <pt x="127" y="1369" on="1"/>
        <pt x="127" y="1413" on="0"/>
        <pt x="182" y="1476" on="0"/>
        <pt x="235" y="1476" on="1"/>
        <pt x="289" y="1476" on="0"/>
        <pt x="345" y="1414" on="0"/>
        <pt x="345" y="1324" on="0"/>
        <pt x="289" y="1264" on="0"/>
        <pt x="181" y="1264" on="0"/>
        <pt x="127" y="1324" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          16 23 24
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          8 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          16 5 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="jcircumflex" xMin="-76" yMin="-437" xMax="569" yMax="1496">
      <component glyphName="uni0237" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="-205" y="-40" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          18 4
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="k" xMin="141" yMin="0" xMax="1036" yMax="1536">
      <contour>
        <pt x="442" y="501" on="1"/>
        <pt x="326" y="380" on="1"/>
        <pt x="326" y="0" on="1"/>
        <pt x="141" y="0" on="1"/>
        <pt x="141" y="1536" on="1"/>
        <pt x="326" y="1536" on="1"/>
        <pt x="326" y="607" on="1"/>
        <pt x="425" y="726" on="1"/>
        <pt x="762" y="1082" on="1"/>
        <pt x="987" y="1082" on="1"/>
        <pt x="566" y="630" on="1"/>
        <pt x="1036" y="0" on="1"/>
        <pt x="819" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 32
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 8 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 21 values pushed */
          58 0 74 0 90 0 106 0 122 0 138 0 154 0 170 0 186 0 202 0 10
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          6 8 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 21 values pushed */
          54 6 70 6 86 6 102 6 118 6 134 6 150 6 166 6 182 6 198 6 10
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="kappa" xMin="154" yMin="0" xMax="1087" yMax="1082">
      <component glyphName="kgreenlandic" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="kgreenlandic" xMin="154" yMin="0" xMax="1087" yMax="1082">
      <contour>
        <pt x="447" y="461" on="1"/>
        <pt x="340" y="461" on="1"/>
        <pt x="340" y="0" on="1"/>
        <pt x="154" y="0" on="1"/>
        <pt x="154" y="1082" on="1"/>
        <pt x="340" y="1082" on="1"/>
        <pt x="340" y="624" on="1"/>
        <pt x="431" y="624" on="1"/>
        <pt x="828" y="1082" on="1"/>
        <pt x="1051" y="1082" on="1"/>
        <pt x="599" y="557" on="1"/>
        <pt x="1087" y="0" on="1"/>
        <pt x="854" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          159 6 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          191 6 207 6 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          47 6 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          255 6 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          1 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          10 1 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="l" xMin="156" yMin="0" xMax="341" yMax="1536">
      <contour>
        <pt x="341" y="0" on="1"/>
        <pt x="156" y="0" on="1"/>
        <pt x="156" y="1536" on="1"/>
        <pt x="341" y="1536" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 32
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="lacute" xMin="147" yMin="0" xMax="564" yMax="1942">
      <component glyphName="l" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="24" y="406" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 32
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          6 9
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="lambda" xMin="37" yMin="-17" xMax="1083" yMax="1518">
      <contour>
        <pt x="261" y="1518" on="1"/>
        <pt x="359" y="1518" on="0"/>
        <pt x="479" y="1438" on="0"/>
        <pt x="512" y="1343" on="1"/>
        <pt x="939" y="234" on="1"/>
        <pt x="959" y="183" on="0"/>
        <pt x="1004" y="144" on="0"/>
        <pt x="1039" y="144" on="1"/>
        <pt x="1077" y="147" on="1"/>
        <pt x="1083" y="-5" on="1"/>
        <pt x="1047" y="-17" on="0"/>
        <pt x="1005" y="-17" on="1"/>
        <pt x="928" y="-17" on="0"/>
        <pt x="850" y="20" on="0"/>
        <pt x="788" y="106" on="0"/>
        <pt x="759" y="186" on="1"/>
        <pt x="529" y="779" on="1"/>
        <pt x="243" y="0" on="1"/>
        <pt x="37" y="0" on="1"/>
        <pt x="431" y="1029" on="1"/>
        <pt x="335" y="1264" on="1"/>
        <pt x="312" y="1320" on="0"/>
        <pt x="259" y="1366" on="0"/>
        <pt x="214" y="1366" on="1"/>
        <pt x="167" y="1364" on="1"/>
        <pt x="166" y="1506" on="1"/>
        <pt x="208" y="1518" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          16 27 28
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          17 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          7 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          16 0 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          23 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="lcaron" xMin="156" yMin="0" xMax="685" yMax="1538">
      <component glyphName="l" x="0" y="0" flags="0x4"/>
      <component glyphName="uniF6C3" x="342" y="1299" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 3 values pushed */
          31 8 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          159 8 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          31 8 47 8 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 3 values pushed */
          175 8 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 5 values pushed */
          47 8 63 8 2
          DELTAP3[ ]	/* DeltaExceptionP3 */
          PUSH[ ]	/* 3 values pushed */
          223 8 1
          DELTAP3[ ]	/* DeltaExceptionP3 */
          PUSH[ ]	/* 7 values pushed */
          95 8 111 8 127 8 3
          DELTAP3[ ]	/* DeltaExceptionP3 */
          PUSH[ ]	/* 5 values pushed */
          207 8 223 8 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 3 values pushed */
          79 8 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 3 values pushed */
          207 8 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          79 8 95 8 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          96 8 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          240 8 1
          DELTAP3[ ]	/* DeltaExceptionP3 */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ldot" xMin="156" yMin="0" xMax="672" yMax="1536">
      <component glyphName="l" x="0" y="0" flags="0x4"/>
      <component glyphName="dotaccent" x="312" y="-586" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="less" xMin="72" yMin="195" xMax="890" yMax="1098">
      <contour>
        <pt x="264" y="644" on="1"/>
        <pt x="890" y="391" on="1"/>
        <pt x="890" y="195" on="1"/>
        <pt x="72" y="574" on="1"/>
        <pt x="72" y="720" on="1"/>
        <pt x="890" y="1098" on="1"/>
        <pt x="890" y="902" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="lessequal" xMin="62" yMin="2" xMax="897" yMax="1085">
      <component glyphName="less" x="0" y="97" scalex="1.0" scaley="0.9" flags="0x4"/>
      <component glyphName="minus" x="-106" y="-649" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="lira" xMin="91" yMin="0" xMax="1128" yMax="1476">
      <contour>
        <pt x="789" y="470" on="1"/>
        <pt x="454" y="470" on="1"/>
        <pt x="457" y="402" on="1"/>
        <pt x="457" y="248" on="0"/>
        <pt x="395" y="157" on="1"/>
        <pt x="1128" y="157" on="1"/>
        <pt x="1127" y="0" on="1"/>
        <pt x="95" y="0" on="1"/>
        <pt x="95" y="157" on="1"/>
        <pt x="172" y="157" on="1"/>
        <pt x="212" y="166" on="0"/>
        <pt x="262" y="297" on="0"/>
        <pt x="264" y="393" on="1"/>
        <pt x="264" y="401" on="1"/>
        <pt x="261" y="470" on="1"/>
        <pt x="91" y="470" on="1"/>
        <pt x="91" y="595" on="1"/>
        <pt x="257" y="595" on="1"/>
        <pt x="253" y="731" on="1"/>
        <pt x="91" y="731" on="1"/>
        <pt x="91" y="856" on="1"/>
        <pt x="248" y="856" on="1"/>
        <pt x="242" y="1039" on="1"/>
        <pt x="242" y="1238" on="0"/>
        <pt x="487" y="1476" on="0"/>
        <pt x="687" y="1476" on="1"/>
        <pt x="877" y="1476" on="0"/>
        <pt x="1099" y="1264" on="0"/>
        <pt x="1099" y="1087" on="1"/>
        <pt x="908" y="1087" on="1"/>
        <pt x="908" y="1194" on="0"/>
        <pt x="781" y="1318" on="0"/>
        <pt x="670" y="1318" on="1"/>
        <pt x="565" y="1318" on="0"/>
        <pt x="435" y="1164" on="0"/>
        <pt x="435" y="1039" on="1"/>
        <pt x="441" y="856" on="1"/>
        <pt x="789" y="856" on="1"/>
        <pt x="789" y="731" on="1"/>
        <pt x="446" y="731" on="1"/>
        <pt x="450" y="595" on="1"/>
        <pt x="789" y="595" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          33 42 43
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          25
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          25 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          41 25 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          41
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          0 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          4 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          41
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          41
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 7 values pushed */
          15 21 31 21 47 21 3
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          18 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          29
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          32 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          36
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          38
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="logicalnot" xMin="127" yMin="375" xMax="958" yMax="800">
      <contour>
        <pt x="958" y="375" on="1"/>
        <pt x="772" y="375" on="1"/>
        <pt x="772" y="639" on="1"/>
        <pt x="127" y="639" on="1"/>
        <pt x="127" y="800" on="1"/>
        <pt x="958" y="800" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          1
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          2 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="longs" xMin="160" yMin="0" xMax="642" yMax="1557">
      <contour>
        <pt x="160" y="0" on="1"/>
        <pt x="160" y="1198" on="1"/>
        <pt x="161" y="1367" on="0"/>
        <pt x="337" y="1557" on="0"/>
        <pt x="499" y="1557" on="1"/>
        <pt x="558" y="1557" on="0"/>
        <pt x="642" y="1536" on="1"/>
        <pt x="619" y="1394" on="1"/>
        <pt x="579" y="1405" on="0"/>
        <pt x="528" y="1405" on="1"/>
        <pt x="345" y="1405" on="0"/>
        <pt x="345" y="1184" on="1"/>
        <pt x="345" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          3 13 14
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 32
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          9 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="lozenge" xMin="43" yMin="0" xMax="988" yMax="1456">
      <contour>
        <pt x="444" y="1456" on="1"/>
        <pt x="584" y="1456" on="1"/>
        <pt x="988" y="727" on="1"/>
        <pt x="588" y="0" on="1"/>
        <pt x="447" y="0" on="1"/>
        <pt x="43" y="727" on="1"/>
      </contour>
      <contour>
        <pt x="513" y="1254" on="1"/>
        <pt x="234" y="727" on="1"/>
        <pt x="518" y="201" on="1"/>
        <pt x="798" y="727" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          8 10 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          1
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          6 0 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          8 0 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="lslash" xMin="34" yMin="0" xMax="522" yMax="1536">
      <contour>
        <pt x="364" y="869" on="1"/>
        <pt x="522" y="930" on="1"/>
        <pt x="522" y="807" on="1"/>
        <pt x="364" y="746" on="1"/>
        <pt x="364" y="0" on="1"/>
        <pt x="178" y="0" on="1"/>
        <pt x="178" y="675" on="1"/>
        <pt x="34" y="620" on="1"/>
        <pt x="34" y="743" on="1"/>
        <pt x="178" y="798" on="1"/>
        <pt x="178" y="1536" on="1"/>
        <pt x="364" y="1536" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 32
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          1 4 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          2 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="m" xMin="139" yMin="0" xMax="1656" yMax="1102">
      <contour>
        <pt x="314" y="1082" on="1"/>
        <pt x="319" y="962" on="1"/>
        <pt x="438" y="1102" on="0"/>
        <pt x="640" y="1102" on="1"/>
        <pt x="867" y="1102" on="0"/>
        <pt x="949" y="928" on="1"/>
        <pt x="1003" y="1006" on="0"/>
        <pt x="1176" y="1102" on="0"/>
        <pt x="1294" y="1102" on="1"/>
        <pt x="1650" y="1102" on="0"/>
        <pt x="1656" y="725" on="1"/>
        <pt x="1656" y="0" on="1"/>
        <pt x="1471" y="0" on="1"/>
        <pt x="1471" y="714" on="1"/>
        <pt x="1471" y="830" on="0"/>
        <pt x="1365" y="945" on="0"/>
        <pt x="1240" y="945" on="1"/>
        <pt x="1137" y="945" on="0"/>
        <pt x="1001" y="822" on="0"/>
        <pt x="990" y="718" on="1"/>
        <pt x="990" y="0" on="1"/>
        <pt x="804" y="0" on="1"/>
        <pt x="804" y="709" on="1"/>
        <pt x="804" y="945" on="0"/>
        <pt x="573" y="945" on="1"/>
        <pt x="391" y="945" on="0"/>
        <pt x="324" y="790" on="1"/>
        <pt x="324" y="0" on="1"/>
        <pt x="139" y="0" on="1"/>
        <pt x="139" y="1082" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          4 30 31
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          20
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          20 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          27
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          27 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          1 8 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          5 8 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          16 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="macron" xMin="142" yMin="1302" xMax="814" yMax="1445">
      <contour>
        <pt x="814" y="1302" on="1"/>
        <pt x="142" y="1302" on="1"/>
        <pt x="142" y="1445" on="1"/>
        <pt x="814" y="1445" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          1 4 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          0 16 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="minus" xMin="168" yMin="651" xMax="1003" yMax="802">
      <contour>
        <pt x="1003" y="651" on="1"/>
        <pt x="168" y="651" on="1"/>
        <pt x="168" y="802" on="1"/>
        <pt x="1003" y="802" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 24
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          1 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="minute" xMin="103" yMin="1057" xMax="253" yMax="1536">
      <component glyphName="quotesingle" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="mu" xMin="154" yMin="-416" xMax="1006" yMax="1082">
      <contour>
        <pt x="339" y="1082" on="1"/>
        <pt x="339" y="449" on="1"/>
        <pt x="340" y="286" on="0"/>
        <pt x="443" y="130" on="0"/>
        <pt x="559" y="130" on="1"/>
        <pt x="758" y="130" on="0"/>
        <pt x="820" y="282" on="1"/>
        <pt x="820" y="1082" on="1"/>
        <pt x="1006" y="1082" on="1"/>
        <pt x="1006" y="0" on="1"/>
        <pt x="839" y="0" on="1"/>
        <pt x="830" y="115" on="1"/>
        <pt x="737" y="-20" on="0"/>
        <pt x="567" y="-20" on="1"/>
        <pt x="420" y="-20" on="0"/>
        <pt x="339" y="53" on="1"/>
        <pt x="339" y="-416" on="1"/>
        <pt x="154" y="-416" on="1"/>
        <pt x="154" y="1082" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          13 19 20
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          16 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          4 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          11 7 13
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="multiply" xMin="89" yMin="206" xMax="989" yMax="1123">
      <contour>
        <pt x="89" y="329" on="1"/>
        <pt x="419" y="665" on="1"/>
        <pt x="91" y="1000" on="1"/>
        <pt x="210" y="1123" on="1"/>
        <pt x="539" y="788" on="1"/>
        <pt x="868" y="1123" on="1"/>
        <pt x="987" y="1000" on="1"/>
        <pt x="659" y="665" on="1"/>
        <pt x="989" y="329" on="1"/>
        <pt x="870" y="206" on="1"/>
        <pt x="539" y="543" on="1"/>
        <pt x="208" y="206" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          9 12 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          10 9 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          4 3 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          1 10 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          7 4 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="n" xMin="140" yMin="0" xMax="991" yMax="1102">
      <contour>
        <pt x="315" y="1082" on="1"/>
        <pt x="321" y="946" on="1"/>
        <pt x="445" y="1102" on="0"/>
        <pt x="645" y="1102" on="1"/>
        <pt x="988" y="1102" on="0"/>
        <pt x="991" y="715" on="1"/>
        <pt x="991" y="0" on="1"/>
        <pt x="806" y="0" on="1"/>
        <pt x="806" y="716" on="1"/>
        <pt x="805" y="833" on="0"/>
        <pt x="700" y="945" on="0"/>
        <pt x="589" y="945" on="1"/>
        <pt x="499" y="945" on="0"/>
        <pt x="363" y="849" on="0"/>
        <pt x="325" y="771" on="1"/>
        <pt x="325" y="0" on="1"/>
        <pt x="140" y="0" on="1"/>
        <pt x="140" y="1082" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          11 18 19
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          15 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          1 3 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          11 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="nacute" xMin="140" yMin="0" xMax="991" yMax="1536">
      <component glyphName="n" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="347" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          20 9
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="napostrophe" xMin="-68" yMin="0" xMax="991" yMax="1540">
      <component glyphName="n" x="0" y="0" flags="0x204"/>
      <component glyphName="uniF6C3" x="-160" y="1301" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          79 23 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          159 23 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ncaron" xMin="140" yMin="0" xMax="991" yMax="1536">
      <component glyphName="n" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="122" y="1" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          22 1
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="nine" xMin="100" yMin="-1" xMax="1016" yMax="1476">
      <contour>
        <pt x="830" y="640" on="1"/>
        <pt x="772" y="571" on="0"/>
        <pt x="611" y="487" on="0"/>
        <pt x="515" y="487" on="1"/>
        <pt x="389" y="487" on="0"/>
        <pt x="202" y="611" on="0"/>
        <pt x="100" y="836" on="0"/>
        <pt x="100" y="972" on="1"/>
        <pt x="100" y="1118" on="0"/>
        <pt x="211" y="1352" on="0"/>
        <pt x="415" y="1476" on="0"/>
        <pt x="551" y="1476" on="1"/>
        <pt x="767" y="1476" on="0"/>
        <pt x="1016" y="1153" on="0"/>
        <pt x="1016" y="874" on="1"/>
        <pt x="1016" y="820" on="1"/>
        <pt x="1016" y="395" on="0"/>
        <pt x="680" y="4" on="0"/>
        <pt x="341" y="-1" on="1"/>
        <pt x="305" y="-1" on="1"/>
        <pt x="305" y="155" on="1"/>
        <pt x="344" y="155" on="1"/>
        <pt x="573" y="159" on="0"/>
        <pt x="819" y="390" on="0"/>
      </contour>
      <contour>
        <pt x="545" y="640" on="1"/>
        <pt x="638" y="640" on="0"/>
        <pt x="795" y="754" on="0"/>
        <pt x="831" y="838" on="1"/>
        <pt x="831" y="912" on="1"/>
        <pt x="831" y="1094" on="0"/>
        <pt x="673" y="1322" on="0"/>
        <pt x="552" y="1322" on="1"/>
        <pt x="430" y="1322" on="0"/>
        <pt x="282" y="1135" on="0"/>
        <pt x="282" y="982" on="1"/>
        <pt x="282" y="833" on="0"/>
        <pt x="425" y="640" on="0"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          19 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          3 19 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          0 3 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          20 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          24 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          31 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="notequal" xMin="152" yMin="155" xMax="986" yMax="1237">
      <contour>
        <pt x="986" y="399" on="1"/>
        <pt x="455" y="399" on="1"/>
        <pt x="313" y="155" on="1"/>
        <pt x="218" y="214" on="1"/>
        <pt x="326" y="399" on="1"/>
        <pt x="152" y="399" on="1"/>
        <pt x="152" y="559" on="1"/>
        <pt x="419" y="559" on="1"/>
        <pt x="568" y="814" on="1"/>
        <pt x="152" y="814" on="1"/>
        <pt x="152" y="975" on="1"/>
        <pt x="662" y="975" on="1"/>
        <pt x="815" y="1237" on="1"/>
        <pt x="910" y="1178" on="1"/>
        <pt x="791" y="975" on="1"/>
        <pt x="986" y="975" on="1"/>
        <pt x="986" y="814" on="1"/>
        <pt x="697" y="814" on="1"/>
        <pt x="549" y="559" on="1"/>
        <pt x="986" y="559" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          16 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ntilde" xMin="140" yMin="0" xMax="991" yMax="1516">
      <component glyphName="n" x="0" y="0" flags="0x204"/>
      <component glyphName="tilde" x="97" y="4" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          21 1
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="nu" xMin="33" yMin="0" xMax="954" yMax="1082">
      <component glyphName="v" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="numbersign" xMin="119" yMin="0" xMax="1235" yMax="1456">
      <contour>
        <pt x="765" y="410" on="1"/>
        <pt x="501" y="410" on="1"/>
        <pt x="421" y="0" on="1"/>
        <pt x="278" y="0" on="1"/>
        <pt x="358" y="410" on="1"/>
        <pt x="119" y="410" on="1"/>
        <pt x="119" y="547" on="1"/>
        <pt x="384" y="547" on="1"/>
        <pt x="453" y="901" on="1"/>
        <pt x="195" y="901" on="1"/>
        <pt x="195" y="1040" on="1"/>
        <pt x="480" y="1040" on="1"/>
        <pt x="562" y="1456" on="1"/>
        <pt x="705" y="1456" on="1"/>
        <pt x="623" y="1040" on="1"/>
        <pt x="887" y="1040" on="1"/>
        <pt x="969" y="1456" on="1"/>
        <pt x="1113" y="1456" on="1"/>
        <pt x="1031" y="1040" on="1"/>
        <pt x="1235" y="1040" on="1"/>
        <pt x="1235" y="901" on="1"/>
        <pt x="1004" y="901" on="1"/>
        <pt x="935" y="547" on="1"/>
        <pt x="1160" y="547" on="1"/>
        <pt x="1160" y="410" on="1"/>
        <pt x="909" y="410" on="1"/>
        <pt x="829" y="0" on="1"/>
        <pt x="685" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="527" y="547" on="1"/>
        <pt x="791" y="547" on="1"/>
        <pt x="860" y="901" on="1"/>
        <pt x="596" y="901" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          16 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          26
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          26 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          29 12 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RUTG[ ]	/* RoundUpToGrid */
          PUSH[ ]	/* 1 value pushed */
          29
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSH[ ]	/* 3 values pushed */
          0 3 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          29
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          29
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          8 3 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          18
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          29
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="o" xMin="91" yMin="-20" xMax="1076" yMax="1102">
      <contour>
        <pt x="91" y="551" on="1"/>
        <pt x="91" y="710" on="0"/>
        <pt x="216" y="964" on="0"/>
        <pt x="439" y="1102" on="0"/>
        <pt x="582" y="1102" on="1"/>
        <pt x="803" y="1102" on="0"/>
        <pt x="1076" y="796" on="0"/>
        <pt x="1076" y="542" on="1"/>
        <pt x="1076" y="529" on="1"/>
        <pt x="1076" y="371" on="0"/>
        <pt x="955" y="120" on="0"/>
        <pt x="730" y="-20" on="0"/>
        <pt x="584" y="-20" on="1"/>
        <pt x="364" y="-20" on="0"/>
        <pt x="91" y="286" on="0"/>
        <pt x="91" y="538" on="1"/>
      </contour>
      <contour>
        <pt x="277" y="529" on="1"/>
        <pt x="277" y="349" on="0"/>
        <pt x="444" y="131" on="0"/>
        <pt x="584" y="131" on="1"/>
        <pt x="725" y="131" on="0"/>
        <pt x="891" y="352" on="0"/>
        <pt x="891" y="551" on="1"/>
        <pt x="891" y="729" on="0"/>
        <pt x="722" y="950" on="0"/>
        <pt x="582" y="950" on="1"/>
        <pt x="445" y="950" on="0"/>
        <pt x="277" y="732" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          12 28 29
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          19 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          25 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="oacute" xMin="91" yMin="-20" xMax="1076" yMax="1536">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="350" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          30 9
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="obreve" xMin="91" yMin="-20" xMax="1076" yMax="1496">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="breve" x="147" y="1" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          31
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ocircumflex" xMin="91" yMin="-20" xMax="1076" yMax="1536">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="104" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          30 1
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="odieresis" xMin="91" yMin="-20" xMax="1076" yMax="1477">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="152" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          35 1
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          44
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="oe" xMin="97" yMin="-20" xMax="1792" yMax="1102">
      <contour>
        <pt x="97" y="551" on="1"/>
        <pt x="97" y="711" on="0"/>
        <pt x="218" y="965" on="0"/>
        <pt x="437" y="1102" on="0"/>
        <pt x="579" y="1102" on="1"/>
        <pt x="716" y="1102" on="0"/>
        <pt x="917" y="985" on="0"/>
        <pt x="978" y="885" on="1"/>
        <pt x="1043" y="987" on="0"/>
        <pt x="1239" y="1102" on="0"/>
        <pt x="1351" y="1102" on="1"/>
        <pt x="1558" y="1102" on="0"/>
        <pt x="1792" y="848" on="0"/>
        <pt x="1792" y="613" on="1"/>
        <pt x="1792" y="497" on="1"/>
        <pt x="1074" y="497" on="1"/>
        <pt x="1081" y="327" on="0"/>
        <pt x="1245" y="130" on="0"/>
        <pt x="1379" y="130" on="1"/>
        <pt x="1567" y="130" on="0"/>
        <pt x="1687" y="238" on="1"/>
        <pt x="1761" y="112" on="1"/>
        <pt x="1624" y="-20" on="0"/>
        <pt x="1379" y="-20" on="1"/>
        <pt x="1244" y="-20" on="0"/>
        <pt x="1039" y="92" on="0"/>
        <pt x="976" y="192" on="1"/>
        <pt x="914" y="93" on="0"/>
        <pt x="715" y="-20" on="0"/>
        <pt x="581" y="-20" on="1"/>
        <pt x="361" y="-20" on="0"/>
        <pt x="97" y="284" on="0"/>
        <pt x="97" y="538" on="1"/>
      </contour>
      <contour>
        <pt x="282" y="529" on="1"/>
        <pt x="282" y="346" on="0"/>
        <pt x="442" y="130" on="0"/>
        <pt x="581" y="130" on="1"/>
        <pt x="718" y="130" on="0"/>
        <pt x="878" y="345" on="0"/>
        <pt x="878" y="551" on="1"/>
        <pt x="878" y="733" on="0"/>
        <pt x="717" y="950" on="0"/>
        <pt x="579" y="950" on="1"/>
        <pt x="444" y="950" on="0"/>
        <pt x="282" y="736" on="0"/>
      </contour>
      <contour>
        <pt x="1351" y="950" on="1"/>
        <pt x="1252" y="950" on="0"/>
        <pt x="1102" y="787" on="0"/>
        <pt x="1080" y="649" on="1"/>
        <pt x="1606" y="649" on="1"/>
        <pt x="1606" y="675" on="1"/>
        <pt x="1606" y="800" on="0"/>
        <pt x="1469" y="950" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          6 53 54
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          38
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          48
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          23 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          29
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          29 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          7 10 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          49 10 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          49
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          14 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          18 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          20 10 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          26 10 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          36
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          42 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          45
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ogonek" xMin="50" yMin="-433" xMax="402" yMax="56">
      <contour>
        <pt x="382" y="0" on="1"/>
        <pt x="324" y="-45" on="1"/>
        <pt x="211" y="-136" on="0"/>
        <pt x="211" y="-222" on="1"/>
        <pt x="211" y="-294" on="0"/>
        <pt x="289" y="-294" on="1"/>
        <pt x="337" y="-294" on="0"/>
        <pt x="389" y="-268" on="1"/>
        <pt x="402" y="-389" on="1"/>
        <pt x="332" y="-433" on="0"/>
        <pt x="242" y="-433" on="1"/>
        <pt x="153" y="-433" on="0"/>
        <pt x="50" y="-329" on="0"/>
        <pt x="50" y="-243" on="1"/>
        <pt x="50" y="-154" on="0"/>
        <pt x="184" y="0" on="0"/>
        <pt x="307" y="56" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          5 17 18
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          5 3 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 9 values pushed */
          15 16 31 16 47 16 63 16 4
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ograve" xMin="91" yMin="-20" xMax="1076" yMax="1536">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="207" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          29 9
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ohorn" xMin="91" yMin="-20" xMax="1210" yMax="1200">
      <contour>
        <pt x="91" y="551" on="1"/>
        <pt x="91" y="710" on="0"/>
        <pt x="214" y="963" on="0"/>
        <pt x="439" y="1102" on="0"/>
        <pt x="582" y="1102" on="1"/>
        <pt x="789" y="1102" on="0"/>
        <pt x="925" y="964" on="1"/>
        <pt x="996" y="972" on="0"/>
        <pt x="1060" y="1072" on="0"/>
        <pt x="1060" y="1200" on="1"/>
        <pt x="1210" y="1200" on="1"/>
        <pt x="1210" y="909" on="0"/>
        <pt x="1003" y="858" on="1"/>
        <pt x="1076" y="720" on="0"/>
        <pt x="1076" y="551" on="1"/>
        <pt x="1076" y="529" on="1"/>
        <pt x="1076" y="371" on="0"/>
        <pt x="952" y="117" on="0"/>
        <pt x="728" y="-20" on="0"/>
        <pt x="584" y="-20" on="1"/>
        <pt x="362" y="-20" on="0"/>
        <pt x="91" y="287" on="0"/>
        <pt x="91" y="538" on="1"/>
      </contour>
      <contour>
        <pt x="276" y="529" on="1"/>
        <pt x="276" y="349" on="0"/>
        <pt x="443" y="131" on="0"/>
        <pt x="584" y="131" on="1"/>
        <pt x="723" y="131" on="0"/>
        <pt x="890" y="350" on="0"/>
        <pt x="890" y="535" on="1"/>
        <pt x="890" y="551" on="1"/>
        <pt x="890" y="732" on="0"/>
        <pt x="721" y="950" on="0"/>
        <pt x="582" y="950" on="1"/>
        <pt x="444" y="950" on="0"/>
        <pt x="276" y="732" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          19 36 37
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          26
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          19 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          6 4 19
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          26 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          33 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ohungarumlaut" xMin="91" yMin="-20" xMax="1076" yMax="1535">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="hungarumlaut" x="232" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          34 9
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="omacron" xMin="91" yMin="-20" xMax="1076" yMax="1453">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="macron" x="102" y="8" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          29
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="omega" xMin="122" yMin="-20" xMax="1561" yMax="1082">
      <contour>
        <pt x="452" y="1082" on="1"/>
        <pt x="314" y="799" on="0"/>
        <pt x="307" y="560" on="1"/>
        <pt x="307" y="357" on="0"/>
        <pt x="421" y="130" on="0"/>
        <pt x="527" y="130" on="1"/>
        <pt x="635" y="130" on="0"/>
        <pt x="748" y="303" on="0"/>
        <pt x="748" y="469" on="1"/>
        <pt x="748" y="770" on="1"/>
        <pt x="935" y="770" on="1"/>
        <pt x="935" y="464" on="1"/>
        <pt x="936" y="300" on="0"/>
        <pt x="1049" y="130" on="0"/>
        <pt x="1156" y="130" on="1"/>
        <pt x="1262" y="130" on="0"/>
        <pt x="1376" y="356" on="0"/>
        <pt x="1376" y="560" on="1"/>
        <pt x="1369" y="799" on="0"/>
        <pt x="1231" y="1082" on="1"/>
        <pt x="1426" y="1082" on="1"/>
        <pt x="1561" y="838" on="0"/>
        <pt x="1561" y="560" on="1"/>
        <pt x="1561" y="285" on="0"/>
        <pt x="1354" y="-20" on="0"/>
        <pt x="1166" y="-20" on="1"/>
        <pt x="926" y="-20" on="0"/>
        <pt x="841" y="218" on="1"/>
        <pt x="800" y="101" on="0"/>
        <pt x="636" y="-20" on="0"/>
        <pt x="517" y="-20" on="1"/>
        <pt x="329" y="-20" on="0"/>
        <pt x="122" y="285" on="0"/>
        <pt x="122" y="560" on="1"/>
        <pt x="122" y="847" on="0"/>
        <pt x="257" y="1082" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          27 36 37
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          19 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          25
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          25 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          30
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          30 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          5 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          9 0 30
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          27 19 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="omega1" xMin="74" yMin="-20" xMax="1563" yMax="1082">
      <contour>
        <pt x="1563" y="929" on="1"/>
        <pt x="1427" y="929" on="1"/>
        <pt x="1491" y="757" on="0"/>
        <pt x="1491" y="560" on="1"/>
        <pt x="1491" y="287" on="0"/>
        <pt x="1303" y="-20" on="0"/>
        <pt x="1132" y="-20" on="1"/>
        <pt x="891" y="-20" on="0"/>
        <pt x="808" y="219" on="1"/>
        <pt x="725" y="-20" on="0"/>
        <pt x="485" y="-20" on="1"/>
        <pt x="315" y="-20" on="0"/>
        <pt x="126" y="284" on="0"/>
        <pt x="126" y="560" on="1"/>
        <pt x="126" y="751" on="0"/>
        <pt x="190" y="929" on="1"/>
        <pt x="74" y="929" on="1"/>
        <pt x="74" y="1082" on="1"/>
        <pt x="1563" y="1082" on="1"/>
      </contour>
      <contour>
        <pt x="1305" y="560" on="1"/>
        <pt x="1301" y="730" on="0"/>
        <pt x="1227" y="929" on="1"/>
        <pt x="390" y="929" on="1"/>
        <pt x="315" y="729" on="0"/>
        <pt x="311" y="560" on="1"/>
        <pt x="311" y="357" on="0"/>
        <pt x="407" y="130" on="0"/>
        <pt x="495" y="130" on="1"/>
        <pt x="600" y="130" on="0"/>
        <pt x="713" y="297" on="0"/>
        <pt x="715" y="459" on="1"/>
        <pt x="715" y="722" on="1"/>
        <pt x="902" y="722" on="1"/>
        <pt x="902" y="459" on="1"/>
        <pt x="904" y="297" on="0"/>
        <pt x="1017" y="130" on="0"/>
        <pt x="1123" y="130" on="1"/>
        <pt x="1209" y="130" on="0"/>
        <pt x="1305" y="356" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          8 39 40
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          17 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          17
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          8 17 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          27 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          31 10 17
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          36
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="omegatonos" xMin="122" yMin="-20" xMax="1561" yMax="1570">
      <component glyphName="omega" x="0" y="0" flags="0x204"/>
      <component glyphName="tonos" x="595" y="-29" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          38 1
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="omicron" xMin="91" yMin="-20" xMax="1076" yMax="1102">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="omicrontonos" xMin="91" yMin="-20" xMax="1076" yMax="1594">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="tonos" x="323" y="-5" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          30 1
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="one" xMin="170" yMin="0" xMax="729" yMax="1463">
      <contour>
        <pt x="729" y="0" on="1"/>
        <pt x="543" y="0" on="1"/>
        <pt x="543" y="1233" on="1"/>
        <pt x="170" y="1096" on="1"/>
        <pt x="170" y="1264" on="1"/>
        <pt x="700" y="1463" on="1"/>
        <pt x="729" y="1463" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          4 0 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          3 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          2 3 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="oneeighth" xMin="84" yMin="-11" xMax="1459" yMax="1435">
      <component glyphName="glyph00454" x="-38" y="646" flags="0x4"/>
      <component glyphName="fraction" x="230" y="0" flags="0x4"/>
      <component glyphName="glyph00548" x="788" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="onehalf" xMin="80" yMin="0" xMax="1481" yMax="1453">
      <component glyphName="fraction" x="236" y="8" flags="0x4"/>
      <component glyphName="glyph00454" x="-42" y="664" flags="0x4"/>
      <component glyphName="glyph00453" x="798" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="onequarter" xMin="85" yMin="0" xMax="1425" yMax="1453">
      <component glyphName="glyph00454" x="-37" y="664" flags="0x4"/>
      <component glyphName="fraction" x="280" y="8" flags="0x4"/>
      <component glyphName="glyph00544" x="726" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ordfeminine" xMin="147" yMin="691" xMax="783" yMax="1476">
      <contour>
        <pt x="618" y="705" on="1"/>
        <pt x="606" y="739" on="0"/>
        <pt x="600" y="777" on="1"/>
        <pt x="524" y="691" on="0"/>
        <pt x="396" y="691" on="1"/>
        <pt x="277" y="691" on="0"/>
        <pt x="147" y="815" on="0"/>
        <pt x="147" y="918" on="1"/>
        <pt x="147" y="1029" on="0"/>
        <pt x="314" y="1149" on="0"/>
        <pt x="486" y="1149" on="1"/>
        <pt x="594" y="1149" on="1"/>
        <pt x="594" y="1201" on="1"/>
        <pt x="594" y="1336" on="0"/>
        <pt x="470" y="1336" on="1"/>
        <pt x="401" y="1336" on="0"/>
        <pt x="322" y="1282" on="0"/>
        <pt x="322" y="1231" on="1"/>
        <pt x="161" y="1243" on="1"/>
        <pt x="161" y="1346" on="0"/>
        <pt x="333" y="1476" on="0"/>
        <pt x="470" y="1476" on="1"/>
        <pt x="603" y="1476" on="0"/>
        <pt x="757" y="1333" on="0"/>
        <pt x="757" y="1199" on="1"/>
        <pt x="757" y="883" on="1"/>
        <pt x="757" y="786" on="0"/>
        <pt x="783" y="705" on="1"/>
      </contour>
      <contour>
        <pt x="435" y="828" on="1"/>
        <pt x="478" y="828" on="0"/>
        <pt x="566" y="868" on="0"/>
        <pt x="594" y="895" on="1"/>
        <pt x="594" y="1037" on="1"/>
        <pt x="482" y="1037" on="1"/>
        <pt x="399" y="1036" on="0"/>
        <pt x="310" y="973" on="0"/>
        <pt x="310" y="922" on="1"/>
        <pt x="310" y="828" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          14 38 39
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          29
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          21 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          4 38 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          2 4 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          11 4 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          14 3 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          17 11 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          28 3 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          32 4 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ordmasculine" xMin="122" yMin="690" xMax="807" yMax="1476">
      <contour>
        <pt x="122" y="1123" on="1"/>
        <pt x="122" y="1281" on="0"/>
        <pt x="310" y="1476" on="0"/>
        <pt x="464" y="1476" on="1"/>
        <pt x="619" y="1476" on="0"/>
        <pt x="807" y="1283" on="0"/>
        <pt x="807" y="1117" on="1"/>
        <pt x="807" y="1043" on="1"/>
        <pt x="807" y="884" on="0"/>
        <pt x="620" y="690" on="0"/>
        <pt x="312" y="690" on="0"/>
        <pt x="122" y="884" on="0"/>
        <pt x="122" y="1049" on="1"/>
      </contour>
      <contour>
        <pt x="285" y="1043" on="1"/>
        <pt x="285" y="943" on="0"/>
        <pt x="382" y="829" on="0"/>
        <pt x="466" y="829" on="1"/>
        <pt x="549" y="829" on="0"/>
        <pt x="644" y="944" on="0"/>
        <pt x="644" y="1045" on="1"/>
        <pt x="644" y="1123" on="1"/>
        <pt x="644" y="1222" on="0"/>
        <pt x="547" y="1336" on="0"/>
        <pt x="464" y="1336" on="1"/>
        <pt x="383" y="1336" on="0"/>
        <pt x="287" y="1226" on="0"/>
        <pt x="285" y="1129" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          3 27 28
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          10 27 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          16 3 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          23 3 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="oslash" xMin="91" yMin="-134" xMax="1076" yMax="1208">
      <contour>
        <pt x="91" y="551" on="1"/>
        <pt x="91" y="710" on="0"/>
        <pt x="214" y="963" on="0"/>
        <pt x="439" y="1102" on="0"/>
        <pt x="582" y="1102" on="1"/>
        <pt x="692" y="1102" on="0"/>
        <pt x="786" y="1060" on="1"/>
        <pt x="859" y="1208" on="1"/>
        <pt x="983" y="1208" on="1"/>
        <pt x="881" y="1003" on="1"/>
        <pt x="1076" y="849" on="0"/>
        <pt x="1076" y="529" on="1"/>
        <pt x="1076" y="371" on="0"/>
        <pt x="952" y="117" on="0"/>
        <pt x="728" y="-20" on="0"/>
        <pt x="584" y="-20" on="1"/>
        <pt x="480" y="-20" on="0"/>
        <pt x="394" y="15" on="1"/>
        <pt x="320" y="-134" on="1"/>
        <pt x="196" y="-134" on="1"/>
        <pt x="296" y="69" on="1"/>
        <pt x="91" y="218" on="0"/>
      </contour>
      <contour>
        <pt x="276" y="529" on="1"/>
        <pt x="276" y="335" on="0"/>
        <pt x="373" y="224" on="1"/>
        <pt x="716" y="918" on="1"/>
        <pt x="654" y="950" on="0"/>
        <pt x="582" y="950" on="1"/>
        <pt x="444" y="950" on="0"/>
        <pt x="276" y="732" on="0"/>
      </contour>
      <contour>
        <pt x="890" y="551" on="1"/>
        <pt x="890" y="733" on="0"/>
        <pt x="803" y="844" on="1"/>
        <pt x="463" y="156" on="1"/>
        <pt x="518" y="131" on="0"/>
        <pt x="584" y="131" on="1"/>
        <pt x="723" y="131" on="0"/>
        <pt x="890" y="350" on="0"/>
        <pt x="890" y="535" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          4 39 40
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          27
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          35
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          15 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          35 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          33 35 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          33
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          27 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          25 27 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          32
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="oslashacute" xMin="91" yMin="-134" xMax="1076" yMax="1536">
      <component glyphName="oslash" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="311" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          41 9
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="otilde" xMin="91" yMin="-20" xMax="1076" yMax="1516">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="tilde" x="100" y="4" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          31 1
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="p" xMin="140" yMin="-416" xMax="1054" yMax="1102">
      <contour>
        <pt x="1054" y="529" on="1"/>
        <pt x="1054" y="282" on="0"/>
        <pt x="828" y="-20" on="0"/>
        <pt x="635" y="-20" on="1"/>
        <pt x="438" y="-20" on="0"/>
        <pt x="325" y="105" on="1"/>
        <pt x="325" y="-416" on="1"/>
        <pt x="140" y="-416" on="1"/>
        <pt x="140" y="1082" on="1"/>
        <pt x="309" y="1082" on="1"/>
        <pt x="318" y="962" on="1"/>
        <pt x="431" y="1102" on="0"/>
        <pt x="632" y="1102" on="1"/>
        <pt x="827" y="1102" on="0"/>
        <pt x="1054" y="808" on="0"/>
        <pt x="1054" y="546" on="1"/>
      </contour>
      <contour>
        <pt x="869" y="550" on="1"/>
        <pt x="869" y="733" on="0"/>
        <pt x="713" y="945" on="0"/>
        <pt x="577" y="945" on="1"/>
        <pt x="409" y="945" on="0"/>
        <pt x="325" y="796" on="1"/>
        <pt x="325" y="279" on="1"/>
        <pt x="408" y="131" on="0"/>
        <pt x="579" y="131" on="1"/>
        <pt x="712" y="131" on="0"/>
        <pt x="869" y="342" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          19 27 28
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          5 12 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          10 12 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          19 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          24 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="paragraph" xMin="67" yMin="0" xMax="832" yMax="1456">
      <contour>
        <pt x="646" y="0" on="1"/>
        <pt x="646" y="520" on="1"/>
        <pt x="562" y="520" on="1"/>
        <pt x="332" y="520" on="0"/>
        <pt x="67" y="774" on="0"/>
        <pt x="67" y="988" on="1"/>
        <pt x="67" y="1201" on="0"/>
        <pt x="333" y="1456" on="0"/>
        <pt x="563" y="1456" on="1"/>
        <pt x="832" y="1456" on="1"/>
        <pt x="832" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          2 11 12
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          1 0 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="parenleft" xMin="133" yMin="-470" xMax="661" yMax="1643">
      <contour>
        <pt x="133" y="591" on="1"/>
        <pt x="133" y="817" on="0"/>
        <pt x="254" y="1233" on="0"/>
        <pt x="494" y="1573" on="0"/>
        <pt x="623" y="1643" on="1"/>
        <pt x="661" y="1521" on="1"/>
        <pt x="515" y="1409" on="0"/>
        <pt x="328" y="949" on="0"/>
        <pt x="319" y="664" on="1"/>
        <pt x="318" y="579" on="1"/>
        <pt x="318" y="193" on="0"/>
        <pt x="459" y="-91" on="1"/>
        <pt x="544" y="-261" on="0"/>
        <pt x="661" y="-357" on="1"/>
        <pt x="623" y="-470" on="1"/>
        <pt x="490" y="-396" on="0"/>
        <pt x="369" y="-222" on="1"/>
        <pt x="133" y="118" on="0"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="parenright" xMin="38" yMin="-470" xMax="567" yMax="1643">
      <contour>
        <pt x="567" y="581" on="1"/>
        <pt x="567" y="358" on="0"/>
        <pt x="450" y="-51" on="0"/>
        <pt x="209" y="-397" on="0"/>
        <pt x="77" y="-470" on="1"/>
        <pt x="38" y="-357" on="1"/>
        <pt x="192" y="-239" on="0"/>
        <pt x="379" y="258" on="0"/>
        <pt x="381" y="561" on="1"/>
        <pt x="381" y="593" on="1"/>
        <pt x="381" y="803" on="0"/>
        <pt x="293" y="1164" on="0"/>
        <pt x="136" y="1450" on="0"/>
        <pt x="38" y="1530" on="1"/>
        <pt x="77" y="1643" on="1"/>
        <pt x="209" y="1570" on="0"/>
        <pt x="448" y="1228" on="0"/>
        <pt x="567" y="816" on="0"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="partialdiff" xMin="106" yMin="-21" xMax="1074" yMax="1516">
      <contour>
        <pt x="572" y="1022" on="1"/>
        <pt x="665" y="1022" on="0"/>
        <pt x="831" y="945" on="0"/>
        <pt x="889" y="877" on="1"/>
        <pt x="875" y="1017" on="0"/>
        <pt x="770" y="1234" on="0"/>
        <pt x="604" y="1355" on="0"/>
        <pt x="508" y="1355" on="1"/>
        <pt x="379" y="1355" on="0"/>
        <pt x="224" y="1296" on="1"/>
        <pt x="208" y="1447" on="1"/>
        <pt x="257" y="1468" on="1"/>
        <pt x="373" y="1516" on="0"/>
        <pt x="524" y="1516" on="1"/>
        <pt x="787" y="1516" on="0"/>
        <pt x="1074" y="1082" on="0"/>
        <pt x="1074" y="680" on="1"/>
        <pt x="1074" y="630" on="1"/>
        <pt x="1074" y="442" on="0"/>
        <pt x="954" y="144" on="0"/>
        <pt x="732" y="-21" on="0"/>
        <pt x="588" y="-21" on="1"/>
        <pt x="370" y="-21" on="0"/>
        <pt x="106" y="270" on="0"/>
        <pt x="106" y="516" on="1"/>
        <pt x="106" y="530" on="1"/>
        <pt x="106" y="750" on="0"/>
        <pt x="362" y="1022" on="0"/>
      </contour>
      <contour>
        <pt x="590" y="870" on="1"/>
        <pt x="450" y="870" on="0"/>
        <pt x="291" y="683" on="0"/>
        <pt x="291" y="523" on="1"/>
        <pt x="291" y="507" on="1"/>
        <pt x="291" y="337" on="0"/>
        <pt x="450" y="130" on="0"/>
        <pt x="588" y="130" on="1"/>
        <pt x="730" y="130" on="0"/>
        <pt x="889" y="379" on="0"/>
        <pt x="889" y="598" on="1"/>
        <pt x="889" y="659" on="1"/>
        <pt x="885" y="674" on="1"/>
        <pt x="857" y="764" on="0"/>
        <pt x="697" y="870" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          21 43 44
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          35
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          21 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 13 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          3 0 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          7 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          28 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          35 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="percent" xMin="105" yMin="-21" xMax="1411" yMax="1477">
      <contour>
        <pt x="105" y="1176" on="1"/>
        <pt x="105" y="1307" on="0"/>
        <pt x="272" y="1477" on="0"/>
        <pt x="403" y="1477" on="1"/>
        <pt x="536" y="1477" on="0"/>
        <pt x="701" y="1306" on="0"/>
        <pt x="701" y="1170" on="1"/>
        <pt x="701" y="1099" on="1"/>
        <pt x="701" y="967" on="0"/>
        <pt x="534" y="800" on="0"/>
        <pt x="405" y="800" on="1"/>
        <pt x="275" y="800" on="0"/>
        <pt x="105" y="967" on="0"/>
        <pt x="105" y="1106" on="1"/>
      </contour>
      <contour>
        <pt x="243" y="1099" on="1"/>
        <pt x="243" y="1021" on="0"/>
        <pt x="331" y="920" on="0"/>
        <pt x="405" y="920" on="1"/>
        <pt x="476" y="920" on="0"/>
        <pt x="563" y="1018" on="0"/>
        <pt x="563" y="1103" on="1"/>
        <pt x="563" y="1176" on="1"/>
        <pt x="563" y="1254" on="0"/>
        <pt x="477" y="1356" on="0"/>
        <pt x="329" y="1356" on="0"/>
        <pt x="243" y="1254" on="0"/>
        <pt x="243" y="1172" on="1"/>
      </contour>
      <contour>
        <pt x="814" y="357" on="1"/>
        <pt x="814" y="488" on="0"/>
        <pt x="981" y="657" on="0"/>
        <pt x="1243" y="657" on="0"/>
        <pt x="1411" y="489" on="0"/>
        <pt x="1411" y="350" on="1"/>
        <pt x="1411" y="279" on="1"/>
        <pt x="1411" y="148" on="0"/>
        <pt x="1244" y="-21" on="0"/>
        <pt x="984" y="-21" on="0"/>
        <pt x="814" y="146" on="0"/>
        <pt x="814" y="285" on="1"/>
      </contour>
      <contour>
        <pt x="952" y="279" on="1"/>
        <pt x="952" y="200" on="0"/>
        <pt x="1040" y="99" on="0"/>
        <pt x="1114" y="99" on="1"/>
        <pt x="1186" y="99" on="0"/>
        <pt x="1272" y="198" on="0"/>
        <pt x="1272" y="283" on="1"/>
        <pt x="1272" y="357" on="1"/>
        <pt x="1272" y="436" on="0"/>
        <pt x="1185" y="536" on="0"/>
        <pt x="1112" y="536" on="1"/>
        <pt x="1041" y="536" on="0"/>
        <pt x="952" y="437" on="0"/>
        <pt x="952" y="353" on="1"/>
      </contour>
      <contour>
        <pt x="447" y="110" on="1"/>
        <pt x="342" y="176" on="1"/>
        <pt x="1053" y="1314" on="1"/>
        <pt x="1158" y="1248" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          35
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          35 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          10
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          17 4 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          24 4 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          29
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          29
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          42 4 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          29
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          49 4 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          53 35 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          53
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          55 3 35
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          55
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="period" xMin="144" yMin="-11" xMax="374" yMax="209">
      <contour>
        <pt x="144" y="97" on="1"/>
        <pt x="144" y="145" on="0"/>
        <pt x="201" y="209" on="0"/>
        <pt x="315" y="209" on="0"/>
        <pt x="374" y="145" on="0"/>
        <pt x="374" y="97" on="1"/>
        <pt x="374" y="51" on="0"/>
        <pt x="315" y="-11" on="0"/>
        <pt x="201" y="-11" on="0"/>
        <pt x="144" y="51" on="0"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          2 5 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="periodcentered" xMin="147" yMin="619" xMax="377" yMax="841">
      <contour>
        <pt x="147" y="729" on="1"/>
        <pt x="147" y="777" on="0"/>
        <pt x="204" y="841" on="0"/>
        <pt x="318" y="841" on="0"/>
        <pt x="377" y="777" on="0"/>
        <pt x="377" y="729" on="1"/>
        <pt x="377" y="682" on="0"/>
        <pt x="318" y="619" on="0"/>
        <pt x="204" y="619" on="0"/>
        <pt x="147" y="682" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          3 10 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 2 values pushed */
          8 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MDRP[11100]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="perthousand" xMin="68" yMin="-21" xMax="1879" yMax="1477">
      <contour>
        <pt x="823" y="357" on="1"/>
        <pt x="823" y="488" on="0"/>
        <pt x="990" y="657" on="0"/>
        <pt x="1121" y="657" on="1"/>
        <pt x="1273" y="657" on="0"/>
        <pt x="1350" y="536" on="1"/>
        <pt x="1429" y="657" on="0"/>
        <pt x="1580" y="657" on="1"/>
        <pt x="1711" y="657" on="0"/>
        <pt x="1879" y="489" on="0"/>
        <pt x="1879" y="350" on="1"/>
        <pt x="1879" y="279" on="1"/>
        <pt x="1879" y="148" on="0"/>
        <pt x="1712" y="-21" on="0"/>
        <pt x="1582" y="-21" on="1"/>
        <pt x="1429" y="-21" on="0"/>
        <pt x="1350" y="99" on="1"/>
        <pt x="1274" y="-21" on="0"/>
        <pt x="1123" y="-21" on="1"/>
        <pt x="993" y="-21" on="0"/>
        <pt x="823" y="146" on="0"/>
        <pt x="823" y="285" on="1"/>
      </contour>
      <contour>
        <pt x="68" y="1176" on="1"/>
        <pt x="68" y="1307" on="0"/>
        <pt x="235" y="1477" on="0"/>
        <pt x="366" y="1477" on="1"/>
        <pt x="498" y="1477" on="0"/>
        <pt x="665" y="1307" on="0"/>
        <pt x="665" y="1171" on="1"/>
        <pt x="665" y="1099" on="1"/>
        <pt x="665" y="970" on="0"/>
        <pt x="500" y="800" on="0"/>
        <pt x="368" y="800" on="1"/>
        <pt x="238" y="800" on="0"/>
        <pt x="68" y="967" on="0"/>
        <pt x="68" y="1106" on="1"/>
      </contour>
      <contour>
        <pt x="429" y="110" on="1"/>
        <pt x="325" y="176" on="1"/>
        <pt x="1036" y="1314" on="1"/>
        <pt x="1140" y="1248" on="1"/>
      </contour>
      <contour>
        <pt x="961" y="279" on="1"/>
        <pt x="961" y="200" on="0"/>
        <pt x="1049" y="99" on="0"/>
        <pt x="1123" y="99" on="1"/>
        <pt x="1195" y="99" on="0"/>
        <pt x="1281" y="198" on="0"/>
        <pt x="1281" y="283" on="1"/>
        <pt x="1281" y="357" on="1"/>
        <pt x="1281" y="436" on="0"/>
        <pt x="1194" y="536" on="0"/>
        <pt x="1121" y="536" on="1"/>
        <pt x="1050" y="536" on="0"/>
        <pt x="961" y="437" on="0"/>
        <pt x="961" y="353" on="1"/>
      </contour>
      <contour>
        <pt x="1420" y="279" on="1"/>
        <pt x="1420" y="200" on="0"/>
        <pt x="1508" y="99" on="0"/>
        <pt x="1581" y="99" on="1"/>
        <pt x="1653" y="99" on="0"/>
        <pt x="1739" y="201" on="0"/>
        <pt x="1739" y="283" on="1"/>
        <pt x="1739" y="357" on="1"/>
        <pt x="1739" y="436" on="0"/>
        <pt x="1652" y="536" on="0"/>
        <pt x="1579" y="536" on="1"/>
        <pt x="1507" y="536" on="0"/>
        <pt x="1420" y="436" on="0"/>
        <pt x="1420" y="353" on="1"/>
      </contour>
      <contour>
        <pt x="206" y="1099" on="1"/>
        <pt x="206" y="1021" on="0"/>
        <pt x="294" y="920" on="0"/>
        <pt x="368" y="920" on="1"/>
        <pt x="439" y="920" on="0"/>
        <pt x="526" y="1018" on="0"/>
        <pt x="526" y="1103" on="1"/>
        <pt x="526" y="1176" on="1"/>
        <pt x="526" y="1254" on="0"/>
        <pt x="440" y="1356" on="0"/>
        <pt x="366" y="1356" on="1"/>
        <pt x="294" y="1356" on="0"/>
        <pt x="206" y="1255" on="0"/>
        <pt x="206" y="1172" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          2 82 83
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          27
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          38
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          40
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          54
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          73
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          25
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          25 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          18
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          18 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          32
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          32
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          36 18 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          36
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          38 25 18
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          38
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          43 4 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          50 4 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          43
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          57
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          50
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          64
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          32
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          71 4 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          78 4 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="peseta" xMin="167" yMin="-20" xMax="1539" yMax="1456">
      <contour>
        <pt x="1534" y="939" on="1"/>
        <pt x="1332" y="939" on="1"/>
        <pt x="1332" y="268" on="1"/>
        <pt x="1332" y="203" on="0"/>
        <pt x="1386" y="138" on="0"/>
        <pt x="1451" y="138" on="1"/>
        <pt x="1486" y="138" on="0"/>
        <pt x="1538" y="150" on="1"/>
        <pt x="1539" y="0" on="1"/>
        <pt x="1466" y="-20" on="0"/>
        <pt x="1396" y="-20" on="1"/>
        <pt x="1272" y="-20" on="0"/>
        <pt x="1146" y="130" on="0"/>
        <pt x="1146" y="268" on="1"/>
        <pt x="1146" y="939" on="1"/>
        <pt x="1003" y="939" on="1"/>
        <pt x="983" y="756" on="0"/>
        <pt x="752" y="567" on="0"/>
        <pt x="553" y="565" on="1"/>
        <pt x="352" y="565" on="1"/>
        <pt x="352" y="0" on="1"/>
        <pt x="167" y="0" on="1"/>
        <pt x="167" y="1456" on="1"/>
        <pt x="544" y="1456" on="1"/>
        <pt x="746" y="1456" on="0"/>
        <pt x="983" y="1264" on="0"/>
        <pt x="1003" y="1082" on="1"/>
        <pt x="1146" y="1082" on="1"/>
        <pt x="1146" y="1344" on="1"/>
        <pt x="1332" y="1344" on="1"/>
        <pt x="1332" y="1082" on="1"/>
        <pt x="1534" y="1082" on="1"/>
      </contour>
      <contour>
        <pt x="352" y="716" on="1"/>
        <pt x="544" y="716" on="1"/>
        <pt x="683" y="716" on="0"/>
        <pt x="822" y="857" on="0"/>
        <pt x="822" y="1008" on="1"/>
        <pt x="822" y="1160" on="0"/>
        <pt x="687" y="1302" on="0"/>
        <pt x="555" y="1304" on="1"/>
        <pt x="352" y="1304" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          35 41 42
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          22
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          22 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          26
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          26 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          30
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          30 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          20
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          20 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          30
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          5 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          33 20 22
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          33
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          18 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          30
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          29
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          29
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          22
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          39 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="phi" xMin="87" yMin="-478" xMax="1356" yMax="1082">
      <contour>
        <pt x="620" y="-17" on="1"/>
        <pt x="364" y="6" on="0"/>
        <pt x="87" y="313" on="0"/>
        <pt x="87" y="564" on="1"/>
        <pt x="87" y="732" on="0"/>
        <pt x="216" y="995" on="0"/>
        <pt x="343" y="1082" on="1"/>
        <pt x="444" y="949" on="1"/>
        <pt x="283" y="809" on="0"/>
        <pt x="273" y="564" on="1"/>
        <pt x="273" y="391" on="0"/>
        <pt x="454" y="162" on="0"/>
        <pt x="620" y="136" on="1"/>
        <pt x="620" y="852" on="1"/>
        <pt x="620" y="957" on="0"/>
        <pt x="758" y="1082" on="0"/>
        <pt x="871" y="1082" on="1"/>
        <pt x="1001" y="1082" on="0"/>
        <pt x="1226" y="941" on="0"/>
        <pt x="1356" y="693" on="0"/>
        <pt x="1356" y="544" on="1"/>
        <pt x="1356" y="301" on="0"/>
        <pt x="1066" y="4" on="0"/>
        <pt x="805" y="-17" on="1"/>
        <pt x="805" y="-478" on="1"/>
        <pt x="620" y="-478" on="1"/>
      </contour>
      <contour>
        <pt x="805" y="136" on="1"/>
        <pt x="975" y="158" on="0"/>
        <pt x="1171" y="380" on="0"/>
        <pt x="1171" y="544" on="1"/>
        <pt x="1166" y="713" on="0"/>
        <pt x="1001" y="929" on="0"/>
        <pt x="871" y="929" on="1"/>
        <pt x="805" y="929" on="0"/>
        <pt x="805" y="847" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          15 35 36
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          26
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          24
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          16 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          23 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          26 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          32 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="pi" xMin="41" yMin="-12" xMax="1188" yMax="1082">
      <contour>
        <pt x="1137" y="929" on="1"/>
        <pt x="981" y="929" on="1"/>
        <pt x="981" y="275" on="1"/>
        <pt x="981" y="211" on="0"/>
        <pt x="1035" y="146" on="0"/>
        <pt x="1100" y="146" on="1"/>
        <pt x="1148" y="146" on="0"/>
        <pt x="1187" y="158" on="1"/>
        <pt x="1188" y="7" on="1"/>
        <pt x="1118" y="-12" on="0"/>
        <pt x="1045" y="-12" on="1"/>
        <pt x="796" y="-12" on="0"/>
        <pt x="796" y="282" on="1"/>
        <pt x="796" y="929" on="1"/>
        <pt x="395" y="929" on="1"/>
        <pt x="395" y="0" on="1"/>
        <pt x="210" y="0" on="1"/>
        <pt x="210" y="929" on="1"/>
        <pt x="41" y="929" on="1"/>
        <pt x="41" y="1082" on="1"/>
        <pt x="1137" y="1082" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          11 21 22
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          19 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          15 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          5 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          18
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="plus" xMin="78" yMin="146" xMax="1076" yMax="1206">
      <contour>
        <pt x="670" y="781" on="1"/>
        <pt x="1076" y="781" on="1"/>
        <pt x="1076" y="606" on="1"/>
        <pt x="670" y="606" on="1"/>
        <pt x="670" y="146" on="1"/>
        <pt x="484" y="146" on="1"/>
        <pt x="484" y="606" on="1"/>
        <pt x="78" y="606" on="1"/>
        <pt x="78" y="781" on="1"/>
        <pt x="484" y="781" on="1"/>
        <pt x="484" y="1206" on="1"/>
        <pt x="670" y="1206" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          6 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="plusminus" xMin="97" yMin="0" xMax="1013" yMax="1267">
      <contour>
        <pt x="649" y="854" on="1"/>
        <pt x="1013" y="854" on="1"/>
        <pt x="1013" y="703" on="1"/>
        <pt x="649" y="703" on="1"/>
        <pt x="649" y="289" on="1"/>
        <pt x="482" y="289" on="1"/>
        <pt x="482" y="703" on="1"/>
        <pt x="97" y="703" on="1"/>
        <pt x="97" y="854" on="1"/>
        <pt x="482" y="854" on="1"/>
        <pt x="482" y="1267" on="1"/>
        <pt x="649" y="1267" on="1"/>
      </contour>
      <contour>
        <pt x="970" y="0" on="1"/>
        <pt x="135" y="0" on="1"/>
        <pt x="135" y="152" on="1"/>
        <pt x="970" y="152" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          6 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          14 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          5 14 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 5 values pushed */
          11 5 27 5 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="product" xMin="169" yMin="-213" xMax="1253" yMax="1456">
      <contour>
        <pt x="1253" y="-213" on="1"/>
        <pt x="1068" y="-213" on="1"/>
        <pt x="1068" y="1304" on="1"/>
        <pt x="354" y="1304" on="1"/>
        <pt x="354" y="-213" on="1"/>
        <pt x="169" y="-213" on="1"/>
        <pt x="169" y="1456" on="1"/>
        <pt x="1253" y="1456" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          1
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          2 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="psi" xMin="95" yMin="-472" xMax="1347" yMax="1082">
      <contour>
        <pt x="796" y="1082" on="1"/>
        <pt x="796" y="136" on="1"/>
        <pt x="967" y="160" on="0"/>
        <pt x="1162" y="389" on="0"/>
        <pt x="1162" y="567" on="1"/>
        <pt x="1157" y="799" on="0"/>
        <pt x="1035" y="1082" on="1"/>
        <pt x="1229" y="1082" on="1"/>
        <pt x="1347" y="846" on="0"/>
        <pt x="1347" y="567" on="1"/>
        <pt x="1347" y="308" on="0"/>
        <pt x="1062" y="4" on="0"/>
        <pt x="796" y="-17" on="1"/>
        <pt x="796" y="-472" on="1"/>
        <pt x="611" y="-472" on="1"/>
        <pt x="611" y="-15" on="1"/>
        <pt x="356" y="11" on="0"/>
        <pt x="95" y="321" on="0"/>
        <pt x="95" y="596" on="1"/>
        <pt x="95" y="1082" on="1"/>
        <pt x="281" y="1082" on="1"/>
        <pt x="281" y="584" on="1"/>
        <pt x="283" y="390" on="0"/>
        <pt x="449" y="162" on="0"/>
        <pt x="611" y="137" on="1"/>
        <pt x="611" y="1082" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          0 26 27
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          19 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          1 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="q" xMin="95" yMin="-416" xMax="1007" yMax="1102">
      <contour>
        <pt x="95" y="550" on="1"/>
        <pt x="95" y="805" on="0"/>
        <pt x="329" y="1102" on="0"/>
        <pt x="526" y="1102" on="1"/>
        <pt x="718" y="1102" on="0"/>
        <pt x="829" y="973" on="1"/>
        <pt x="837" y="1082" on="1"/>
        <pt x="1007" y="1082" on="1"/>
        <pt x="1007" y="-416" on="1"/>
        <pt x="822" y="-416" on="1"/>
        <pt x="822" y="100" on="1"/>
        <pt x="710" y="-20" on="0"/>
        <pt x="524" y="-20" on="1"/>
        <pt x="328" y="-20" on="0"/>
        <pt x="95" y="285" on="0"/>
        <pt x="95" y="537" on="1"/>
      </contour>
      <contour>
        <pt x="280" y="529" on="1"/>
        <pt x="280" y="343" on="0"/>
        <pt x="437" y="131" on="0"/>
        <pt x="570" y="131" on="1"/>
        <pt x="735" y="131" on="0"/>
        <pt x="822" y="277" on="1"/>
        <pt x="822" y="807" on="1"/>
        <pt x="734" y="950" on="0"/>
        <pt x="572" y="950" on="1"/>
        <pt x="438" y="950" on="0"/>
        <pt x="280" y="737" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          24 27 28
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          24
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          5 3 12
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          10 3 12
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          19 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          24 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="question" xMin="75" yMin="-11" xMax="886" yMax="1476">
      <contour>
        <pt x="357" y="410" on="1"/>
        <pt x="359" y="529" on="0"/>
        <pt x="409" y="667" on="0"/>
        <pt x="486" y="751" on="1"/>
        <pt x="617" y="886" on="1"/>
        <pt x="701" y="981" on="0"/>
        <pt x="701" y="1090" on="1"/>
        <pt x="701" y="1195" on="0"/>
        <pt x="591" y="1314" on="0"/>
        <pt x="486" y="1314" on="1"/>
        <pt x="384" y="1314" on="0"/>
        <pt x="260" y="1206" on="0"/>
        <pt x="260" y="1115" on="1"/>
        <pt x="75" y="1115" on="1"/>
        <pt x="77" y="1277" on="0"/>
        <pt x="304" y="1476" on="0"/>
        <pt x="486" y="1476" on="1"/>
        <pt x="675" y="1476" on="0"/>
        <pt x="886" y="1273" on="0"/>
        <pt x="886" y="1096" on="1"/>
        <pt x="886" y="921" on="0"/>
        <pt x="724" y="751" on="1"/>
        <pt x="615" y="643" on="1"/>
        <pt x="542" y="562" on="0"/>
        <pt x="542" y="410" on="1"/>
      </contour>
      <contour>
        <pt x="349" y="93" on="1"/>
        <pt x="349" y="138" on="0"/>
        <pt x="404" y="199" on="0"/>
        <pt x="512" y="199" on="0"/>
        <pt x="568" y="138" on="0"/>
        <pt x="568" y="48" on="0"/>
        <pt x="512" y="-11" on="0"/>
        <pt x="404" y="-11" on="0"/>
        <pt x="349" y="48" on="0"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          16 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          32
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          32 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          27 5 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 27 16
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          4 16 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          9 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          21 0 16
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="questiondown" xMin="68" yMin="-385" xMax="888" yMax="1101">
      <contour>
        <pt x="588" y="680" on="1"/>
        <pt x="587" y="574" on="0"/>
        <pt x="546" y="447" on="0"/>
        <pt x="450" y="329" on="0"/>
        <pt x="266" y="136" on="0"/>
        <pt x="255" y="37" on="1"/>
        <pt x="253" y="0" on="1"/>
        <pt x="253" y="-109" on="0"/>
        <pt x="369" y="-224" on="0"/>
        <pt x="478" y="-224" on="1"/>
        <pt x="578" y="-224" on="0"/>
        <pt x="703" y="-111" on="0"/>
        <pt x="703" y="-20" on="1"/>
        <pt x="888" y="-20" on="1"/>
        <pt x="886" y="-181" on="0"/>
        <pt x="661" y="-385" on="0"/>
        <pt x="478" y="-385" on="1"/>
        <pt x="282" y="-385" on="0"/>
        <pt x="68" y="-184" on="0"/>
        <pt x="68" y="-5" on="1"/>
        <pt x="68" y="168" on="0"/>
        <pt x="228" y="343" on="1"/>
        <pt x="337" y="456" on="1"/>
        <pt x="403" y="534" on="0"/>
        <pt x="403" y="680" on="1"/>
      </contour>
      <contour>
        <pt x="596" y="997" on="1"/>
        <pt x="596" y="952" on="0"/>
        <pt x="541" y="890" on="0"/>
        <pt x="433" y="890" on="0"/>
        <pt x="377" y="952" on="0"/>
        <pt x="377" y="997" on="1"/>
        <pt x="377" y="1041" on="0"/>
        <pt x="433" y="1101" on="0"/>
        <pt x="541" y="1101" on="0"/>
        <pt x="596" y="1041" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          9 35 36
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          28
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          33
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          33 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 16 33
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          3 16 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          9 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          21 0 16
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          33
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          27 5 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="quotedbl" xMin="136" yMin="1042" xMax="547" yMax="1536">
      <contour>
        <pt x="277" y="1400" on="1"/>
        <pt x="247" y="1042" on="1"/>
        <pt x="136" y="1042" on="1"/>
        <pt x="137" y="1536" on="1"/>
        <pt x="277" y="1536" on="1"/>
      </contour>
      <contour>
        <pt x="547" y="1400" on="1"/>
        <pt x="517" y="1042" on="1"/>
        <pt x="406" y="1042" on="1"/>
        <pt x="407" y="1536" on="1"/>
        <pt x="547" y="1536" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          2 10 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="quotedblbase" xMin="36" yMin="-301" xMax="612" yMax="246">
      <contour>
        <pt x="141" y="-301" on="1"/>
        <pt x="36" y="-229" on="1"/>
        <pt x="127" y="-92" on="0"/>
        <pt x="130" y="61" on="1"/>
        <pt x="130" y="246" on="1"/>
        <pt x="315" y="246" on="1"/>
        <pt x="315" y="82" on="1"/>
        <pt x="315" y="-26" on="0"/>
        <pt x="216" y="-237" on="0"/>
      </contour>
      <contour>
        <pt x="437" y="-301" on="1"/>
        <pt x="332" y="-229" on="1"/>
        <pt x="423" y="-92" on="0"/>
        <pt x="426" y="61" on="1"/>
        <pt x="426" y="246" on="1"/>
        <pt x="612" y="246" on="1"/>
        <pt x="612" y="82" on="1"/>
        <pt x="612" y="-25" on="0"/>
        <pt x="515" y="-234" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          10 18 19
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          18
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          4 5 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="quotedblleft" xMin="104" yMin="1073" xMax="699" yMax="1555">
      <component glyphName="quoteleft" x="8" y="0" flags="0x4"/>
      <component glyphName="quoteleft" x="323" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="quotedblright" xMin="60" yMin="1046" xMax="646" yMax="1536">
      <component glyphName="quoteright" x="12" y="0" flags="0x4"/>
      <component glyphName="quoteright" x="319" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="quoteleft" xMin="96" yMin="1073" xMax="376" yMax="1555">
      <contour>
        <pt x="270" y="1555" on="1"/>
        <pt x="376" y="1483" on="1"/>
        <pt x="283" y="1356" on="0"/>
        <pt x="280" y="1209" on="1"/>
        <pt x="280" y="1073" on="1"/>
        <pt x="96" y="1073" on="1"/>
        <pt x="96" y="1189" on="1"/>
        <pt x="96" y="1291" on="0"/>
        <pt x="193" y="1491" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          8 9 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 32
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          5 9 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="quotereversed" xMin="79" yMin="1046" xMax="359" yMax="1536">
      <contour>
        <pt x="262" y="1536" on="1"/>
        <pt x="262" y="1389" on="1"/>
        <pt x="266" y="1245" on="0"/>
        <pt x="359" y="1118" on="1"/>
        <pt x="253" y="1046" on="1"/>
        <pt x="176" y="1110" on="0"/>
        <pt x="81" y="1304" on="0"/>
        <pt x="79" y="1401" on="1"/>
        <pt x="79" y="1536" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="quoteright" xMin="48" yMin="1046" xMax="327" yMax="1536">
      <contour>
        <pt x="153" y="1046" on="1"/>
        <pt x="48" y="1118" on="1"/>
        <pt x="141" y="1248" on="0"/>
        <pt x="144" y="1392" on="1"/>
        <pt x="144" y="1536" on="1"/>
        <pt x="327" y="1536" on="1"/>
        <pt x="327" y="1406" on="1"/>
        <pt x="326" y="1306" on="0"/>
        <pt x="229" y="1107" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          8 9 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          4 32
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 9 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="quotesinglbase" xMin="36" yMin="-283" xMax="315" yMax="181">
      <contour>
        <pt x="141" y="-283" on="1"/>
        <pt x="36" y="-210" on="1"/>
        <pt x="127" y="-83" on="0"/>
        <pt x="130" y="63" on="1"/>
        <pt x="130" y="181" on="1"/>
        <pt x="315" y="181" on="1"/>
        <pt x="315" y="81" on="1"/>
        <pt x="315" y="-20" on="0"/>
        <pt x="216" y="-222" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          8 9 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          4 5 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="quotesingle" xMin="103" yMin="1057" xMax="253" yMax="1536">
      <contour>
        <pt x="253" y="1425" on="1"/>
        <pt x="232" y="1057" on="1"/>
        <pt x="103" y="1057" on="1"/>
        <pt x="104" y="1536" on="1"/>
        <pt x="253" y="1536" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          2 5 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="r" xMin="140" yMin="0" xMax="663" yMax="1102">
      <contour>
        <pt x="663" y="916" on="1"/>
        <pt x="621" y="923" on="0"/>
        <pt x="572" y="923" on="1"/>
        <pt x="390" y="923" on="0"/>
        <pt x="325" y="768" on="1"/>
        <pt x="325" y="0" on="1"/>
        <pt x="140" y="0" on="1"/>
        <pt x="140" y="1082" on="1"/>
        <pt x="320" y="1082" on="1"/>
        <pt x="323" y="957" on="1"/>
        <pt x="414" y="1102" on="0"/>
        <pt x="581" y="1102" on="1"/>
        <pt x="635" y="1102" on="0"/>
        <pt x="663" y="1088" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          4 14 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          2 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          9 11 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="racute" xMin="140" yMin="0" xMax="722" yMax="1536">
      <component glyphName="r" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="182" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          16 9
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="radical" xMin="63" yMin="0" xMax="1176" yMax="1456">
      <contour>
        <pt x="560" y="284" on="1"/>
        <pt x="987" y="1456" on="1"/>
        <pt x="1176" y="1456" on="1"/>
        <pt x="634" y="0" on="1"/>
        <pt x="493" y="0" on="1"/>
        <pt x="248" y="628" on="1"/>
        <pt x="63" y="628" on="1"/>
        <pt x="63" y="782" on="1"/>
        <pt x="378" y="782" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          3 9 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 1 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          6 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="rcaron" xMin="99" yMin="0" xMax="717" yMax="1536">
      <component glyphName="r" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="-42" y="1" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          18 1
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="registered" xMin="90" yMin="-21" xMax="1509" yMax="1476">
      <contour>
        <pt x="90" y="729" on="1"/>
        <pt x="90" y="931" on="0"/>
        <pt x="277" y="1277" on="0"/>
        <pt x="608" y="1476" on="0"/>
        <pt x="992" y="1476" on="0"/>
        <pt x="1322" y="1277" on="0"/>
        <pt x="1509" y="931" on="0"/>
        <pt x="1509" y="729" on="1"/>
        <pt x="1509" y="532" on="0"/>
        <pt x="1329" y="188" on="0"/>
        <pt x="998" y="-21" on="0"/>
        <pt x="800" y="-21" on="1"/>
        <pt x="603" y="-21" on="0"/>
        <pt x="272" y="186" on="0"/>
        <pt x="90" y="530" on="0"/>
      </contour>
      <contour>
        <pt x="205" y="729" on="1"/>
        <pt x="205" y="557" on="0"/>
        <pt x="365" y="264" on="0"/>
        <pt x="640" y="98" on="0"/>
        <pt x="800" y="98" on="1"/>
        <pt x="961" y="98" on="0"/>
        <pt x="1237" y="267" on="0"/>
        <pt x="1394" y="557" on="0"/>
        <pt x="1394" y="729" on="1"/>
        <pt x="1394" y="900" on="0"/>
        <pt x="1237" y="1189" on="0"/>
        <pt x="961" y="1356" on="0"/>
        <pt x="800" y="1356" on="1"/>
        <pt x="640" y="1356" on="0"/>
        <pt x="364" y="1191" on="0"/>
        <pt x="205" y="899" on="0"/>
      </contour>
      <contour>
        <pt x="653" y="654" on="1"/>
        <pt x="653" y="316" on="1"/>
        <pt x="512" y="316" on="1"/>
        <pt x="512" y="1165" on="1"/>
        <pt x="788" y="1165" on="1"/>
        <pt x="941" y="1165" on="0"/>
        <pt x="1110" y="1034" on="0"/>
        <pt x="1110" y="909" on="1"/>
        <pt x="1110" y="786" on="0"/>
        <pt x="982" y="721" on="1"/>
        <pt x="1104" y="671" on="0"/>
        <pt x="1105" y="517" on="1"/>
        <pt x="1105" y="456" on="1"/>
        <pt x="1105" y="370" on="0"/>
        <pt x="1122" y="332" on="1"/>
        <pt x="1122" y="316" on="1"/>
        <pt x="977" y="316" on="1"/>
        <pt x="963" y="352" on="0"/>
        <pt x="963" y="537" on="0"/>
        <pt x="960" y="554" on="1"/>
        <pt x="944" y="650" on="0"/>
        <pt x="829" y="654" on="1"/>
      </contour>
      <contour>
        <pt x="653" y="782" on="1"/>
        <pt x="809" y="782" on="1"/>
        <pt x="881" y="784" on="0"/>
        <pt x="969" y="850" on="0"/>
        <pt x="969" y="904" on="1"/>
        <pt x="969" y="977" on="0"/>
        <pt x="891" y="1038" on="0"/>
        <pt x="791" y="1038" on="1"/>
        <pt x="653" y="1038" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          54 62 63
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          54
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          54
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          54
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          35
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          11 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          19 4 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          27 4 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          32 11 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          32
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          34 3 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          34
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 5 values pushed */
          0 34 16 34 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          53 32 34
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          53
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          191 53 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          0 53 16 53 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          31 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          40 31 53
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          32
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          47
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          47
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          34
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          61 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="rho" xMin="145" yMin="-416" xMax="1055" yMax="1102">
      <contour>
        <pt x="592" y="1102" on="1"/>
        <pt x="799" y="1102" on="0"/>
        <pt x="1043" y="820" on="0"/>
        <pt x="1054" y="566" on="1"/>
        <pt x="1055" y="500" on="1"/>
        <pt x="1055" y="260" on="0"/>
        <pt x="831" y="-20" on="0"/>
        <pt x="640" y="-20" on="1"/>
        <pt x="445" y="-20" on="0"/>
        <pt x="331" y="104" on="1"/>
        <pt x="331" y="-416" on="1"/>
        <pt x="145" y="-416" on="1"/>
        <pt x="145" y="580" on="1"/>
        <pt x="145" y="738" on="0"/>
        <pt x="258" y="974" on="0"/>
        <pt x="463" y="1102" on="0"/>
      </contour>
      <contour>
        <pt x="331" y="278" on="1"/>
        <pt x="414" y="131" on="0"/>
        <pt x="585" y="131" on="1"/>
        <pt x="720" y="131" on="0"/>
        <pt x="870" y="326" on="0"/>
        <pt x="870" y="521" on="1"/>
        <pt x="870" y="726" on="0"/>
        <pt x="725" y="950" on="0"/>
        <pt x="592" y="950" on="1"/>
        <pt x="475" y="950" on="0"/>
        <pt x="331" y="734" on="0"/>
        <pt x="331" y="565" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          18 28 29
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          9 0 7
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          18 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          24 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ring" xMin="121" yMin="1204" xMax="551" yMax="1616">
      <contour>
        <pt x="551" y="1408" on="1"/>
        <pt x="551" y="1321" on="0"/>
        <pt x="427" y="1204" on="0"/>
        <pt x="336" y="1204" on="1"/>
        <pt x="244" y="1204" on="0"/>
        <pt x="121" y="1322" on="0"/>
        <pt x="121" y="1494" on="0"/>
        <pt x="244" y="1616" on="0"/>
        <pt x="428" y="1616" on="0"/>
        <pt x="551" y="1494" on="0"/>
      </contour>
      <contour>
        <pt x="220" y="1408" on="1"/>
        <pt x="220" y="1361" on="0"/>
        <pt x="287" y="1293" on="0"/>
        <pt x="336" y="1293" on="1"/>
        <pt x="384" y="1293" on="0"/>
        <pt x="452" y="1359" on="0"/>
        <pt x="452" y="1457" on="0"/>
        <pt x="385" y="1526" on="0"/>
        <pt x="336" y="1526" on="1"/>
        <pt x="286" y="1526" on="0"/>
        <pt x="220" y="1456" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          3 21 22
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          63 7 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          18
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="s" xMin="95" yMin="-20" xMax="955" yMax="1102">
      <contour>
        <pt x="770" y="287" on="1"/>
        <pt x="770" y="362" on="0"/>
        <pt x="657" y="445" on="0"/>
        <pt x="376" y="505" on="0"/>
        <pt x="211" y="589" on="0"/>
        <pt x="132" y="705" on="0"/>
        <pt x="132" y="785" on="1"/>
        <pt x="132" y="918" on="0"/>
        <pt x="357" y="1102" on="0"/>
        <pt x="532" y="1102" on="1"/>
        <pt x="716" y="1102" on="0"/>
        <pt x="945" y="912" on="0"/>
        <pt x="945" y="764" on="1"/>
        <pt x="759" y="764" on="1"/>
        <pt x="759" y="840" on="0"/>
        <pt x="630" y="950" on="0"/>
        <pt x="532" y="950" on="1"/>
        <pt x="431" y="950" on="0"/>
        <pt x="317" y="862" on="0"/>
        <pt x="317" y="791" on="1"/>
        <pt x="317" y="724" on="0"/>
        <pt x="423" y="656" on="0"/>
        <pt x="700" y="594" on="0"/>
        <pt x="872" y="508" on="0"/>
        <pt x="955" y="387" on="0"/>
        <pt x="955" y="300" on="1"/>
        <pt x="955" y="155" on="0"/>
        <pt x="723" y="-20" on="0"/>
        <pt x="538" y="-20" on="1"/>
        <pt x="408" y="-20" on="0"/>
        <pt x="208" y="72" on="0"/>
        <pt x="95" y="237" on="0"/>
        <pt x="95" y="333" on="1"/>
        <pt x="280" y="333" on="1"/>
        <pt x="285" y="240" on="0"/>
        <pt x="424" y="131" on="0"/>
        <pt x="538" y="131" on="1"/>
        <pt x="643" y="131" on="0"/>
        <pt x="770" y="216" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          9 39 40
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          28
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          28 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          3 28 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          16 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          21 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          33
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          36 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="sacute" xMin="95" yMin="-20" xMax="955" yMax="1536">
      <component glyphName="s" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="337" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          41 9
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="scaron" xMin="95" yMin="-20" xMax="955" yMax="1536">
      <component glyphName="s" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="112" y="1" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          43 1
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="scedilla" xMin="95" yMin="-443" xMax="955" yMax="1102">
      <component glyphName="s" x="0" y="0" flags="0x204"/>
      <component glyphName="cedilla" x="349" y="-8" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="scircumflex" xMin="95" yMin="-20" xMax="955" yMax="1536">
      <component glyphName="s" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="91" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          41 1
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="second" xMin="136" yMin="1042" xMax="547" yMax="1536">
      <component glyphName="quotedbl" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="section" xMin="90" yMin="-495" xMax="1145" yMax="1476">
      <contour>
        <pt x="1145" y="431" on="1"/>
        <pt x="1145" y="242" on="0"/>
        <pt x="959" y="157" on="1"/>
        <pt x="1028" y="108" on="0"/>
        <pt x="1100" y="-28" on="0"/>
        <pt x="1100" y="-128" on="1"/>
        <pt x="1100" y="-296" on="0"/>
        <pt x="840" y="-495" on="0"/>
        <pt x="612" y="-495" on="1"/>
        <pt x="500" y="-495" on="0"/>
        <pt x="299" y="-439" on="0"/>
        <pt x="229" y="-382" on="1"/>
        <pt x="90" y="-269" on="0"/>
        <pt x="90" y="-64" on="1"/>
        <pt x="276" y="-62" on="1"/>
        <pt x="276" y="-192" on="0"/>
        <pt x="456" y="-343" on="0"/>
        <pt x="612" y="-343" on="1"/>
        <pt x="748" y="-343" on="0"/>
        <pt x="914" y="-226" on="0"/>
        <pt x="914" y="-130" on="1"/>
        <pt x="914" y="-41" on="0"/>
        <pt x="772" y="64" on="0"/>
        <pt x="563" y="126" on="1"/>
        <pt x="381" y="174" on="0"/>
        <pt x="189" y="285" on="0"/>
        <pt x="96" y="440" on="0"/>
        <pt x="96" y="551" on="1"/>
        <pt x="96" y="737" on="0"/>
        <pt x="278" y="825" on="1"/>
        <pt x="212" y="874" on="0"/>
        <pt x="141" y="1010" on="0"/>
        <pt x="141" y="1110" on="1"/>
        <pt x="141" y="1276" on="0"/>
        <pt x="408" y="1476" on="0"/>
        <pt x="630" y="1476" on="1"/>
        <pt x="862" y="1476" on="0"/>
        <pt x="1122" y="1250" on="0"/>
        <pt x="1122" y="1045" on="1"/>
        <pt x="937" y="1045" on="1"/>
        <pt x="937" y="1170" on="0"/>
        <pt x="769" y="1325" on="0"/>
        <pt x="630" y="1325" on="1"/>
        <pt x="488" y="1325" on="0"/>
        <pt x="327" y="1210" on="0"/>
        <pt x="327" y="1112" on="1"/>
        <pt x="327" y="1043" on="0"/>
        <pt x="383" y="963" on="0"/>
        <pt x="518" y="898" on="0"/>
        <pt x="805" y="818" on="0"/>
        <pt x="974" y="746" on="0"/>
        <pt x="1087" y="649" on="0"/>
        <pt x="1145" y="520" on="0"/>
      </contour>
      <contour>
        <pt x="602" y="691" on="1"/>
        <pt x="512" y="715" on="0"/>
        <pt x="437" y="742" on="1"/>
        <pt x="357" y="723" on="0"/>
        <pt x="282" y="622" on="0"/>
        <pt x="282" y="553" on="1"/>
        <pt x="282" y="483" on="0"/>
        <pt x="336" y="403" on="0"/>
        <pt x="469" y="337" on="0"/>
        <pt x="753" y="255" on="0"/>
        <pt x="797" y="238" on="1"/>
        <pt x="875" y="258" on="0"/>
        <pt x="959" y="359" on="0"/>
        <pt x="959" y="428" on="1"/>
        <pt x="959" y="516" on="0"/>
        <pt x="820" y="625" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          35 69 70
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          53
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          35
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          35 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          22 8 35
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          22
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          63 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          2 22 63
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          17 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          48 35 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          48
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          55 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          29 55 48
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          39
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          42 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="semicolon" xMin="41" yMin="-290" xMax="341" yMax="1092">
      <component glyphName="period" x="-33" y="883" flags="0x4"/>
      <component glyphName="comma" x="12" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="seven" xMin="77" yMin="0" xMax="1061" yMax="1456">
      <contour>
        <pt x="1061" y="1352" on="1"/>
        <pt x="458" y="0" on="1"/>
        <pt x="264" y="0" on="1"/>
        <pt x="865" y="1304" on="1"/>
        <pt x="77" y="1304" on="1"/>
        <pt x="77" y="1456" on="1"/>
        <pt x="1061" y="1456" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          3 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 3 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="seveneighths" xMin="89" yMin="-11" xMax="1533" yMax="1444">
      <component glyphName="glyph00547" x="31" y="655" flags="0x4"/>
      <component glyphName="fraction" x="288" y="0" flags="0x4"/>
      <component glyphName="glyph00548" x="862" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="sigma" xMin="96" yMin="-20" xMax="1147" yMax="1082">
      <contour>
        <pt x="1147" y="929" on="1"/>
        <pt x="863" y="929" on="1"/>
        <pt x="1063" y="781" on="0"/>
        <pt x="1063" y="508" on="1"/>
        <pt x="1063" y="491" on="1"/>
        <pt x="1063" y="351" on="0"/>
        <pt x="941" y="116" on="0"/>
        <pt x="720" y="-20" on="0"/>
        <pt x="580" y="-20" on="1"/>
        <pt x="362" y="-20" on="0"/>
        <pt x="96" y="283" on="0"/>
        <pt x="96" y="538" on="1"/>
        <pt x="96" y="551" on="1"/>
        <pt x="96" y="703" on="0"/>
        <pt x="214" y="945" on="0"/>
        <pt x="431" y="1081" on="0"/>
        <pt x="571" y="1082" on="1"/>
        <pt x="1147" y="1082" on="1"/>
      </contour>
      <contour>
        <pt x="282" y="529" on="1"/>
        <pt x="282" y="346" on="0"/>
        <pt x="442" y="131" on="0"/>
        <pt x="580" y="131" on="1"/>
        <pt x="719" y="131" on="0"/>
        <pt x="878" y="348" on="0"/>
        <pt x="878" y="551" on="1"/>
        <pt x="878" y="723" on="0"/>
        <pt x="717" y="929" on="0"/>
        <pt x="578" y="929" on="1"/>
        <pt x="441" y="929" on="0"/>
        <pt x="282" y="725" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          8 30 31
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          16 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          21 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          27
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="sigma1" xMin="101" yMin="-374" xMax="993" yMax="1102">
      <contour>
        <pt x="573" y="1102" on="1"/>
        <pt x="762" y="1102" on="0"/>
        <pt x="993" y="889" on="0"/>
        <pt x="993" y="709" on="1"/>
        <pt x="818" y="709" on="1"/>
        <pt x="818" y="819" on="0"/>
        <pt x="684" y="950" on="0"/>
        <pt x="573" y="950" on="1"/>
        <pt x="441" y="950" on="0"/>
        <pt x="286" y="731" on="0"/>
        <pt x="286" y="552" on="1"/>
        <pt x="286" y="520" on="1"/>
        <pt x="286" y="260" on="0"/>
        <pt x="606" y="161" on="1"/>
        <pt x="740" y="123" on="1"/>
        <pt x="838" y="94" on="0"/>
        <pt x="918" y="-2" on="0"/>
        <pt x="918" y="-82" on="1"/>
        <pt x="916" y="-145" on="0"/>
        <pt x="817" y="-312" on="0"/>
        <pt x="743" y="-374" on="1"/>
        <pt x="645" y="-289" on="1"/>
        <pt x="692" y="-235" on="1"/>
        <pt x="741" y="-175" on="0"/>
        <pt x="741" y="-105" on="1"/>
        <pt x="741" y="-62" on="0"/>
        <pt x="671" y="-19" on="0"/>
        <pt x="585" y="0" on="1"/>
        <pt x="349" y="52" on="0"/>
        <pt x="101" y="309" on="0"/>
        <pt x="101" y="520" on="1"/>
        <pt x="101" y="562" on="1"/>
        <pt x="101" y="714" on="0"/>
        <pt x="220" y="965" on="0"/>
        <pt x="435" y="1102" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          0 35 36
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          20
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          27
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          27 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          7 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          27
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          13 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="six" xMin="132" yMin="-20" xMax="1052" yMax="1457">
      <contour>
        <pt x="847" y="1457" on="1"/>
        <pt x="847" y="1300" on="1"/>
        <pt x="813" y="1300" on="1"/>
        <pt x="597" y="1296" on="0"/>
        <pt x="341" y="1048" on="0"/>
        <pt x="321" y="823" on="1"/>
        <pt x="436" y="955" on="0"/>
        <pt x="635" y="955" on="1"/>
        <pt x="825" y="955" on="0"/>
        <pt x="1052" y="687" on="0"/>
        <pt x="1052" y="475" on="1"/>
        <pt x="1052" y="250" on="0"/>
        <pt x="807" y="-20" on="0"/>
        <pt x="601" y="-20" on="1"/>
        <pt x="392" y="-20" on="0"/>
        <pt x="132" y="301" on="0"/>
        <pt x="132" y="554" on="1"/>
        <pt x="132" y="625" on="1"/>
        <pt x="132" y="1027" on="0"/>
        <pt x="475" y="1452" on="0"/>
        <pt x="814" y="1457" on="1"/>
      </contour>
      <contour>
        <pt x="604" y="801" on="1"/>
        <pt x="509" y="801" on="0"/>
        <pt x="349" y="687" on="0"/>
        <pt x="318" y="601" on="1"/>
        <pt x="318" y="533" on="1"/>
        <pt x="318" y="353" on="0"/>
        <pt x="480" y="133" on="0"/>
        <pt x="601" y="133" on="1"/>
        <pt x="726" y="133" on="0"/>
        <pt x="869" y="317" on="0"/>
        <pt x="869" y="466" on="1"/>
        <pt x="869" y="616" on="0"/>
        <pt x="724" y="801" on="0"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          1 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          7 13 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          21 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          28 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="slash" xMin="18" yMin="-125" xMax="784" yMax="1456">
      <contour>
        <pt x="177" y="-125" on="1"/>
        <pt x="18" y="-125" on="1"/>
        <pt x="626" y="1456" on="1"/>
        <pt x="784" y="1456" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="space"/><!-- contains no outline data -->

    <TTGlyph name="sterling" xMin="91" yMin="0" xMax="1128" yMax="1476">
      <contour>
        <pt x="449" y="622" on="1"/>
        <pt x="457" y="402" on="1"/>
        <pt x="457" y="248" on="0"/>
        <pt x="395" y="157" on="1"/>
        <pt x="1128" y="157" on="1"/>
        <pt x="1127" y="0" on="1"/>
        <pt x="95" y="0" on="1"/>
        <pt x="95" y="157" on="1"/>
        <pt x="172" y="157" on="1"/>
        <pt x="212" y="166" on="0"/>
        <pt x="262" y="297" on="0"/>
        <pt x="264" y="393" on="1"/>
        <pt x="264" y="401" on="1"/>
        <pt x="256" y="622" on="1"/>
        <pt x="91" y="622" on="1"/>
        <pt x="91" y="779" on="1"/>
        <pt x="251" y="779" on="1"/>
        <pt x="242" y="1039" on="1"/>
        <pt x="242" y="1238" on="0"/>
        <pt x="487" y="1476" on="0"/>
        <pt x="687" y="1476" on="1"/>
        <pt x="877" y="1476" on="0"/>
        <pt x="1099" y="1264" on="0"/>
        <pt x="1099" y="1087" on="1"/>
        <pt x="908" y="1087" on="1"/>
        <pt x="908" y="1194" on="0"/>
        <pt x="781" y="1318" on="0"/>
        <pt x="670" y="1318" on="1"/>
        <pt x="565" y="1318" on="0"/>
        <pt x="435" y="1164" on="0"/>
        <pt x="435" y="1039" on="1"/>
        <pt x="444" y="779" on="1"/>
        <pt x="763" y="779" on="1"/>
        <pt x="763" y="622" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          28 34 35
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          20
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          20 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          31 20 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          31
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          95 31 1
          DELTAP3[ ]	/* DeltaExceptionP3 */
          PUSH[ ]	/* 3 values pushed */
          143 31 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 3 values pushed */
          191 31 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          3 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          27 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="summation" xMin="69" yMin="-269" xMax="1195" yMax="1456">
      <contour>
        <pt x="875" y="577" on="1"/>
        <pt x="294" y="-117" on="1"/>
        <pt x="1195" y="-117" on="1"/>
        <pt x="1195" y="-269" on="1"/>
        <pt x="69" y="-269" on="1"/>
        <pt x="69" y="-126" on="1"/>
        <pt x="678" y="590" on="1"/>
        <pt x="69" y="1312" on="1"/>
        <pt x="69" y="1456" on="1"/>
        <pt x="1118" y="1456" on="1"/>
        <pt x="1118" y="1304" on="1"/>
        <pt x="293" y="1304" on="1"/>
        <pt x="875" y="602" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          2 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          10 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="t" xMin="9" yMin="-20" xMax="598" yMax="1344">
      <contour>
        <pt x="391" y="1344" on="1"/>
        <pt x="391" y="1082" on="1"/>
        <pt x="593" y="1082" on="1"/>
        <pt x="593" y="939" on="1"/>
        <pt x="391" y="939" on="1"/>
        <pt x="391" y="268" on="1"/>
        <pt x="391" y="203" on="0"/>
        <pt x="445" y="138" on="0"/>
        <pt x="510" y="138" on="1"/>
        <pt x="542" y="138" on="0"/>
        <pt x="598" y="150" on="1"/>
        <pt x="598" y="0" on="1"/>
        <pt x="525" y="-20" on="0"/>
        <pt x="456" y="-20" on="1"/>
        <pt x="332" y="-20" on="0"/>
        <pt x="206" y="130" on="0"/>
        <pt x="206" y="268" on="1"/>
        <pt x="206" y="939" on="1"/>
        <pt x="9" y="939" on="1"/>
        <pt x="9" y="1082" on="1"/>
        <pt x="206" y="1082" on="1"/>
        <pt x="206" y="1344" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          14 22 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          19 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          3 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          8 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          18
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="tau" xMin="81" yMin="-20" xMax="985" yMax="1082">
      <contour>
        <pt x="985" y="932" on="1"/>
        <pt x="614" y="932" on="1"/>
        <pt x="614" y="269" on="1"/>
        <pt x="614" y="136" on="0"/>
        <pt x="719" y="136" on="1"/>
        <pt x="762" y="136" on="0"/>
        <pt x="811" y="162" on="1"/>
        <pt x="853" y="32" on="1"/>
        <pt x="777" y="-20" on="0"/>
        <pt x="671" y="-20" on="1"/>
        <pt x="546" y="-20" on="0"/>
        <pt x="429" y="127" on="0"/>
        <pt x="428" y="273" on="1"/>
        <pt x="428" y="932" on="1"/>
        <pt x="81" y="932" on="1"/>
        <pt x="81" y="1082" on="1"/>
        <pt x="985" y="1082" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          10 17 18
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          15 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          4 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="tbar" xMin="-12" yMin="-20" xMax="624" yMax="1344">
      <contour>
        <pt x="391" y="1344" on="1"/>
        <pt x="391" y="1082" on="1"/>
        <pt x="593" y="1082" on="1"/>
        <pt x="593" y="939" on="1"/>
        <pt x="391" y="939" on="1"/>
        <pt x="391" y="753" on="1"/>
        <pt x="624" y="753" on="1"/>
        <pt x="624" y="602" on="1"/>
        <pt x="391" y="602" on="1"/>
        <pt x="391" y="268" on="1"/>
        <pt x="391" y="203" on="0"/>
        <pt x="445" y="138" on="0"/>
        <pt x="510" y="138" on="1"/>
        <pt x="542" y="138" on="0"/>
        <pt x="598" y="150" on="1"/>
        <pt x="598" y="0" on="1"/>
        <pt x="525" y="-20" on="0"/>
        <pt x="456" y="-20" on="1"/>
        <pt x="332" y="-20" on="0"/>
        <pt x="206" y="130" on="0"/>
        <pt x="206" y="268" on="1"/>
        <pt x="206" y="602" on="1"/>
        <pt x="-12" y="602" on="1"/>
        <pt x="-12" y="753" on="1"/>
        <pt x="206" y="753" on="1"/>
        <pt x="206" y="939" on="1"/>
        <pt x="9" y="939" on="1"/>
        <pt x="9" y="1082" on="1"/>
        <pt x="206" y="1082" on="1"/>
        <pt x="206" y="1344" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          1 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          17 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          4 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          0 5 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          8 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          17
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          12 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          25
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          28
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="tcaron" xMin="9" yMin="-20" xMax="748" yMax="1657">
      <component glyphName="t" x="0" y="0" flags="0x4"/>
      <component glyphName="uniF6C3" x="405" y="1418" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 3 values pushed */
          15 26 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          159 26 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          79 26 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="theta" xMin="122" yMin="-20" xMax="1042" yMax="1476">
      <contour>
        <pt x="1042" y="640" on="1"/>
        <pt x="1042" y="319" on="0"/>
        <pt x="806" y="-20" on="0"/>
        <pt x="583" y="-20" on="1"/>
        <pt x="364" y="-20" on="0"/>
        <pt x="126" y="312" on="0"/>
        <pt x="122" y="620" on="1"/>
        <pt x="122" y="825" on="1"/>
        <pt x="122" y="1142" on="0"/>
        <pt x="358" y="1476" on="0"/>
        <pt x="581" y="1476" on="1"/>
        <pt x="803" y="1476" on="0"/>
        <pt x="1038" y="1152" on="0"/>
        <pt x="1042" y="845" on="1"/>
      </contour>
      <contour>
        <pt x="307" y="801" on="1"/>
        <pt x="856" y="801" on="1"/>
        <pt x="856" y="856" on="1"/>
        <pt x="856" y="1083" on="0"/>
        <pt x="717" y="1324" on="0"/>
        <pt x="581" y="1324" on="1"/>
        <pt x="447" y="1324" on="0"/>
        <pt x="307" y="1083" on="0"/>
        <pt x="307" y="856" on="1"/>
      </contour>
      <contour>
        <pt x="856" y="649" on="1"/>
        <pt x="307" y="649" on="1"/>
        <pt x="307" y="610" on="1"/>
        <pt x="307" y="381" on="0"/>
        <pt x="453" y="131" on="0"/>
        <pt x="713" y="131" on="0"/>
        <pt x="854" y="371" on="0"/>
        <pt x="856" y="598" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          3 31 32
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          27
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          10 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          14 3 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          95 14 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          255 14 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          143 14 159 14 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 5 values pushed */
          191 14 207 14 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 3 values pushed */
          47 14 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 3 values pushed */
          207 14 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          47 14 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 5 values pushed */
          239 14 255 14 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          19 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          24 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          27 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="theta1" xMin="121" yMin="-20" xMax="1145" yMax="1478">
      <contour>
        <pt x="1145" y="627" on="1"/>
        <pt x="1085" y="604" on="0"/>
        <pt x="1002" y="595" on="1"/>
        <pt x="1002" y="429" on="1"/>
        <pt x="1000" y="218" on="0"/>
        <pt x="771" y="-20" on="0"/>
        <pt x="571" y="-20" on="1"/>
        <pt x="368" y="-20" on="0"/>
        <pt x="121" y="227" on="0"/>
        <pt x="121" y="442" on="1"/>
        <pt x="121" y="769" on="1"/>
        <pt x="307" y="771" on="1"/>
        <pt x="307" y="435" on="1"/>
        <pt x="307" y="292" on="0"/>
        <pt x="447" y="137" on="0"/>
        <pt x="571" y="137" on="1"/>
        <pt x="687" y="137" on="0"/>
        <pt x="817" y="283" on="0"/>
        <pt x="817" y="435" on="1"/>
        <pt x="817" y="601" on="1"/>
        <pt x="600" y="632" on="0"/>
        <pt x="331" y="914" on="0"/>
        <pt x="331" y="1131" on="1"/>
        <pt x="331" y="1291" on="0"/>
        <pt x="515" y="1478" on="0"/>
        <pt x="665" y="1478" on="1"/>
        <pt x="824" y="1478" on="0"/>
        <pt x="1002" y="1281" on="0"/>
        <pt x="1002" y="1103" on="1"/>
        <pt x="1002" y="752" on="1"/>
        <pt x="1065" y="757" on="0"/>
        <pt x="1137" y="776" on="1"/>
      </contour>
      <contour>
        <pt x="517" y="1114" on="1"/>
        <pt x="517" y="981" on="0"/>
        <pt x="679" y="792" on="0"/>
        <pt x="817" y="762" on="1"/>
        <pt x="817" y="1122" on="1"/>
        <pt x="812" y="1320" on="0"/>
        <pt x="665" y="1320" on="1"/>
        <pt x="517" y="1320" on="0"/>
        <pt x="517" y="1124" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          20 41 42
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          38
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          25
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          25 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          29 25 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          29
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          2 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          11 25 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          15 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          29
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          35
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          38 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="thorn" xMin="149" yMin="-416" xMax="1063" yMax="1536">
      <contour>
        <pt x="1063" y="529" on="1"/>
        <pt x="1063" y="282" on="0"/>
        <pt x="837" y="-20" on="0"/>
        <pt x="644" y="-20" on="1"/>
        <pt x="447" y="-20" on="0"/>
        <pt x="334" y="105" on="1"/>
        <pt x="334" y="-416" on="1"/>
        <pt x="149" y="-416" on="1"/>
        <pt x="149" y="1536" on="1"/>
        <pt x="334" y="1536" on="1"/>
        <pt x="334" y="970" on="1"/>
        <pt x="447" y="1102" on="0"/>
        <pt x="641" y="1102" on="1"/>
        <pt x="836" y="1102" on="0"/>
        <pt x="1063" y="808" on="0"/>
        <pt x="1063" y="546" on="1"/>
      </contour>
      <contour>
        <pt x="878" y="550" on="1"/>
        <pt x="878" y="733" on="0"/>
        <pt x="722" y="945" on="0"/>
        <pt x="586" y="945" on="1"/>
        <pt x="418" y="945" on="0"/>
        <pt x="334" y="796" on="1"/>
        <pt x="334" y="279" on="1"/>
        <pt x="417" y="131" on="0"/>
        <pt x="588" y="131" on="1"/>
        <pt x="721" y="131" on="0"/>
        <pt x="878" y="342" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          24 27 28
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          24
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          12 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 20
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          5 12 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          10 12 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          19 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          24 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="three" xMin="94" yMin="-20" xMax="1017" yMax="1476">
      <contour>
        <pt x="390" y="818" on="1"/>
        <pt x="529" y="818" on="1"/>
        <pt x="660" y="820" on="0"/>
        <pt x="810" y="954" on="0"/>
        <pt x="810" y="1068" on="1"/>
        <pt x="810" y="1324" on="0"/>
        <pt x="555" y="1324" on="1"/>
        <pt x="435" y="1324" on="0"/>
        <pt x="292" y="1187" on="0"/>
        <pt x="292" y="1074" on="1"/>
        <pt x="107" y="1074" on="1"/>
        <pt x="107" y="1247" on="0"/>
        <pt x="360" y="1476" on="0"/>
        <pt x="555" y="1476" on="1"/>
        <pt x="761" y="1476" on="0"/>
        <pt x="995" y="1258" on="0"/>
        <pt x="995" y="1064" on="1"/>
        <pt x="995" y="969" on="0"/>
        <pt x="872" y="791" on="0"/>
        <pt x="766" y="747" on="1"/>
        <pt x="886" y="709" on="0"/>
        <pt x="1017" y="533" on="0"/>
        <pt x="1017" y="406" on="1"/>
        <pt x="1017" y="210" on="0"/>
        <pt x="761" y="-20" on="0"/>
        <pt x="351" y="-20" on="0"/>
        <pt x="94" y="202" on="0"/>
        <pt x="94" y="384" on="1"/>
        <pt x="280" y="384" on="1"/>
        <pt x="280" y="269" on="0"/>
        <pt x="430" y="131" on="0"/>
        <pt x="556" y="131" on="1"/>
        <pt x="690" y="131" on="0"/>
        <pt x="832" y="271" on="0"/>
        <pt x="832" y="402" on="1"/>
        <pt x="832" y="529" on="0"/>
        <pt x="676" y="665" on="0"/>
        <pt x="529" y="667" on="1"/>
        <pt x="390" y="667" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          25
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          25 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 13 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          207 0 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          159 0 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 3 values pushed */
          47 0 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          95 0 1
          DELTAP3[ ]	/* DeltaExceptionP3 */
          PUSH[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          6 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          38 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          19 38 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          28
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          31 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="threeeighths" xMin="100" yMin="-11" xMax="1619" yMax="1460">
      <component glyphName="glyph00543" x="38" y="660" flags="0x4"/>
      <component glyphName="fraction" x="421" y="0" flags="0x4"/>
      <component glyphName="glyph00548" x="948" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          14 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="threequarters" xMin="111" yMin="0" xMax="1517" yMax="1467">
      <component glyphName="fraction" x="407" y="8" flags="0x4"/>
      <component glyphName="glyph00544" x="818" y="0" flags="0x4"/>
      <component glyphName="glyph00543" x="49" y="667" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          33
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          33 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="tilde" xMin="123" yMin="1241" xMax="830" yMax="1512">
      <contour>
        <pt x="830" y="1500" on="1"/>
        <pt x="830" y="1392" on="0"/>
        <pt x="707" y="1258" on="0"/>
        <pt x="615" y="1258" on="1"/>
        <pt x="574" y="1258" on="0"/>
        <pt x="514" y="1278" on="0"/>
        <pt x="417" y="1340" on="0"/>
        <pt x="374" y="1353" on="0"/>
        <pt x="346" y="1353" on="1"/>
        <pt x="305" y="1353" on="0"/>
        <pt x="247" y="1290" on="0"/>
        <pt x="247" y="1241" on="1"/>
        <pt x="123" y="1248" on="1"/>
        <pt x="123" y="1355" on="0"/>
        <pt x="244" y="1495" on="0"/>
        <pt x="337" y="1495" on="1"/>
        <pt x="372" y="1495" on="0"/>
        <pt x="428" y="1475" on="0"/>
        <pt x="524" y="1417" on="0"/>
        <pt x="575" y="1399" on="0"/>
        <pt x="606" y="1399" on="1"/>
        <pt x="649" y="1399" on="0"/>
        <pt x="706" y="1467" on="0"/>
        <pt x="706" y="1512" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 5 values pushed */
          15 8 31 8 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          15 3 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          20 3 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          23
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="tildecomb" xMin="-885" yMin="1241" xMax="-178" yMax="1512">
      <component glyphName="tilde" x="-1008" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="tonos" xMin="183" yMin="1262" xMax="411" yMax="1599">
      <contour>
        <pt x="237" y="1599" on="1"/>
        <pt x="411" y="1599" on="1"/>
        <pt x="295" y="1262" on="1"/>
        <pt x="183" y="1262" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          15 0 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          3 2 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="trademark" xMin="103" yMin="919" xMax="1080" yMax="1456">
      <contour>
        <pt x="990" y="1313" on="1"/>
        <pt x="850" y="919" on="1"/>
        <pt x="798" y="919" on="1"/>
        <pt x="658" y="1312" on="1"/>
        <pt x="658" y="919" on="1"/>
        <pt x="568" y="919" on="1"/>
        <pt x="568" y="1456" on="1"/>
        <pt x="680" y="1456" on="1"/>
        <pt x="824" y="1057" on="1"/>
        <pt x="968" y="1456" on="1"/>
        <pt x="1080" y="1456" on="1"/>
        <pt x="1080" y="919" on="1"/>
        <pt x="990" y="919" on="1"/>
      </contour>
      <contour>
        <pt x="489" y="1375" on="1"/>
        <pt x="342" y="1375" on="1"/>
        <pt x="342" y="919" on="1"/>
        <pt x="251" y="919" on="1"/>
        <pt x="251" y="1375" on="1"/>
        <pt x="103" y="1375" on="1"/>
        <pt x="103" y="1456" on="1"/>
        <pt x="489" y="1456" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          9 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          19 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          1 21 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          0 9 1
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          3 1 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          8 1 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 2 values pushed */
          13 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MDRP[11100]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          18
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="two" xMin="93" yMin="0" xMax="1075" yMax="1476">
      <contour>
        <pt x="1075" y="0" on="1"/>
        <pt x="121" y="0" on="1"/>
        <pt x="121" y="133" on="1"/>
        <pt x="625" y="693" on="1"/>
        <pt x="737" y="820" on="0"/>
        <pt x="822" y="979" on="0"/>
        <pt x="822" y="1064" on="1"/>
        <pt x="822" y="1178" on="0"/>
        <pt x="684" y="1324" on="0"/>
        <pt x="569" y="1324" on="1"/>
        <pt x="431" y="1324" on="0"/>
        <pt x="278" y="1167" on="0"/>
        <pt x="278" y="1027" on="1"/>
        <pt x="93" y="1027" on="1"/>
        <pt x="93" y="1228" on="0"/>
        <pt x="352" y="1476" on="0"/>
        <pt x="569" y="1476" on="1"/>
        <pt x="772" y="1476" on="0"/>
        <pt x="1008" y="1263" on="0"/>
        <pt x="1008" y="1086" on="1"/>
        <pt x="1008" y="871" on="0"/>
        <pt x="734" y="574" on="1"/>
        <pt x="344" y="151" on="1"/>
        <pt x="1075" y="151" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          16 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          23 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          3 16 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          9 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          21 23 16
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="twodotenleader" xMin="148" yMin="-11" xMax="815" yMax="209">
      <component glyphName="period" x="4" y="0" flags="0x4"/>
      <component glyphName="period" x="441" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="u" xMin="136" yMin="-20" xMax="988" yMax="1082">
      <contour>
        <pt x="808" y="107" on="1"/>
        <pt x="700" y="-20" on="0"/>
        <pt x="491" y="-20" on="1"/>
        <pt x="318" y="-20" on="0"/>
        <pt x="137" y="181" on="0"/>
        <pt x="136" y="378" on="1"/>
        <pt x="136" y="1082" on="1"/>
        <pt x="321" y="1082" on="1"/>
        <pt x="321" y="383" on="1"/>
        <pt x="321" y="137" on="0"/>
        <pt x="521" y="137" on="1"/>
        <pt x="733" y="137" on="0"/>
        <pt x="803" y="295" on="1"/>
        <pt x="803" y="1082" on="1"/>
        <pt x="988" y="1082" on="1"/>
        <pt x="988" y="0" on="1"/>
        <pt x="812" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          10 17 18
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          6 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          2 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          16 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 13 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          10 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uacute" xMin="136" yMin="-20" xMax="988" yMax="1536">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="342" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          19 9
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ubreve" xMin="136" yMin="-20" xMax="988" yMax="1496">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="breve" x="139" y="1" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          20
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ucircumflex" xMin="136" yMin="-20" xMax="988" yMax="1536">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="96" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          21 1
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="udieresis" xMin="136" yMin="-20" xMax="988" yMax="1477">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="144" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          24 1
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          33
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ugrave" xMin="136" yMin="-20" xMax="988" yMax="1536">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="199" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          18 9
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uhorn" xMin="136" yMin="-20" xMax="1295" yMax="1168">
      <contour>
        <pt x="1295" y="1168" on="1"/>
        <pt x="1295" y="988" on="0"/>
        <pt x="1148" y="841" on="0"/>
        <pt x="988" y="837" on="1"/>
        <pt x="988" y="0" on="1"/>
        <pt x="812" y="0" on="1"/>
        <pt x="808" y="107" on="1"/>
        <pt x="700" y="-20" on="0"/>
        <pt x="491" y="-20" on="1"/>
        <pt x="318" y="-20" on="0"/>
        <pt x="137" y="181" on="0"/>
        <pt x="136" y="378" on="1"/>
        <pt x="136" y="1082" on="1"/>
        <pt x="321" y="1082" on="1"/>
        <pt x="321" y="383" on="1"/>
        <pt x="321" y="137" on="0"/>
        <pt x="521" y="137" on="1"/>
        <pt x="733" y="137" on="0"/>
        <pt x="803" y="295" on="1"/>
        <pt x="803" y="1082" on="1"/>
        <pt x="988" y="1082" on="1"/>
        <pt x="988" y="951" on="1"/>
        <pt x="1056" y="953" on="0"/>
        <pt x="1124" y="988" on="0"/>
        <pt x="1153" y="1060" on="0"/>
        <pt x="1153" y="1168" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          7 26 27
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          19 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          8 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          21 8 19
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          6 8 19
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          16 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uhungarumlaut" xMin="136" yMin="-20" xMax="1036" yMax="1535">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="hungarumlaut" x="224" y="0" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          19 9
          MIRP[10100]	/* MoveIndirectRelPt */
          PUSH[ ]	/* 1 value pushed */
          23
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="umacron" xMin="136" yMin="-20" xMax="988" yMax="1453">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="macron" x="94" y="8" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          7 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          18
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="underscore" xMin="4" yMin="-151" xMax="920" yMax="0">
      <contour>
        <pt x="920" y="-151" on="1"/>
        <pt x="4" y="-151" on="1"/>
        <pt x="4" y="0" on="1"/>
        <pt x="920" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="underscoredbl" xMin="13" yMin="-405" xMax="929" yMax="0">
      <contour>
        <pt x="929" y="-405" on="1"/>
        <pt x="13" y="-405" on="1"/>
        <pt x="13" y="-254" on="1"/>
        <pt x="929" y="-254" on="1"/>
      </contour>
      <contour>
        <pt x="929" y="-151" on="1"/>
        <pt x="13" y="-151" on="1"/>
        <pt x="13" y="0" on="1"/>
        <pt x="929" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 3 values pushed */
          5 2 3
          CALL[ ]	/* CallFunction */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni0000"/><!-- contains no outline data -->

    <TTGlyph name="uni0002"/><!-- contains no outline data -->

    <TTGlyph name="uni000D"/><!-- contains no outline data -->

    <TTGlyph name="uni00A0"/><!-- contains no outline data -->

    <TTGlyph name="uni00AD" xMin="37" yMin="543" xMax="525" yMax="694">
      <component glyphName="hyphen" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="uni00B2" xMin="66" yMin="667" xMax="683" yMax="1467">
      <contour>
        <pt x="683" y="667" on="1"/>
        <pt x="84" y="667" on="1"/>
        <pt x="84" y="775" on="1"/>
        <pt x="384" y="1057" on="1"/>
        <pt x="493" y="1159" on="0"/>
        <pt x="493" y="1228" on="1"/>
        <pt x="493" y="1277" on="0"/>
        <pt x="429" y="1338" on="0"/>
        <pt x="369" y="1338" on="1"/>
        <pt x="294" y="1338" on="0"/>
        <pt x="223" y="1262" on="0"/>
        <pt x="223" y="1205" on="1"/>
        <pt x="66" y="1205" on="1"/>
        <pt x="66" y="1319" on="0"/>
        <pt x="233" y="1467" on="0"/>
        <pt x="497" y="1467" on="0"/>
        <pt x="651" y="1340" on="0"/>
        <pt x="651" y="1230" on="1"/>
        <pt x="651" y="1126" on="0"/>
        <pt x="544" y="1019" on="1"/>
        <pt x="460" y="940" on="1"/>
        <pt x="284" y="795" on="1"/>
        <pt x="683" y="795" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          8 23 24
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          14 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 22
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          22 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          3 14 22
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          8 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSH[ ]	/* 3 values pushed */
          20 22 14
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni00B3" xMin="62" yMin="656" xMax="666" yMax="1467">
      <contour>
        <pt x="265" y="1126" on="1"/>
        <pt x="349" y="1126" on="1"/>
        <pt x="423" y="1126" on="0"/>
        <pt x="495" y="1187" on="0"/>
        <pt x="495" y="1235" on="1"/>
        <pt x="495" y="1280" on="0"/>
        <pt x="432" y="1338" on="0"/>
        <pt x="362" y="1338" on="1"/>
        <pt x="305" y="1338" on="0"/>
        <pt x="230" y="1287" on="0"/>
        <pt x="230" y="1246" on="1"/>
        <pt x="73" y="1246" on="1"/>
        <pt x="73" y="1344" on="0"/>
        <pt x="236" y="1467" on="0"/>
        <pt x="360" y="1467" on="1"/>
        <pt x="497" y="1467" on="0"/>
        <pt x="653" y="1346" on="0"/>
        <pt x="653" y="1242" on="1"/>
        <pt x="653" y="1187" on="0"/>
        <pt x="583" y="1096" on="0"/>
        <pt x="517" y="1071" on="1"/>
        <pt x="666" y="1030" on="0"/>
        <pt x="666" y="887" on="1"/>
        <pt x="666" y="781" on="0"/>
        <pt x="496" y="656" on="0"/>
        <pt x="360" y="656" on="1"/>
        <pt x="228" y="656" on="0"/>
        <pt x="62" y="782" on="0"/>
        <pt x="62" y="889" on="1"/>
        <pt x="220" y="889" on="1"/>
        <pt x="220" y="844" on="0"/>
        <pt x="299" y="784" on="0"/>
        <pt x="366" y="784" on="1"/>
        <pt x="436" y="784" on="0"/>
        <pt x="509" y="844" on="0"/>
        <pt x="509" y="895" on="1"/>
        <pt x="509" y="1008" on="0"/>
        <pt x="353" y="1010" on="1"/>
        <pt x="265" y="1010" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          32 39 40
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          14 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          25
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          25 22
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          0 25 14
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 7 values pushed */
          111 0 127 0 143 0 3
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          63 0 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSH[ ]	/* 7 values pushed */
          15 0 31 0 47 0 3
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSH[ ]	/* 3 values pushed */
          95 0 1
          DELTAP3[ ]	/* DeltaExceptionP3 */
          PUSH[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          7 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          10 14 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          38 4 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          20 38 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 3 values pushed */
          29 25 14
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          32 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni00B9" xMin="122" yMin="667" xMax="495" yMax="1456">
      <contour>
        <pt x="495" y="667" on="1"/>
        <pt x="338" y="667" on="1"/>
        <pt x="338" y="1268" on="1"/>
        <pt x="122" y="1211" on="1"/>
        <pt x="122" y="1339" on="1"/>
        <pt x="477" y="1456" on="1"/>
        <pt x="495" y="1456" on="1"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          1 7 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          5 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 22
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          4 0 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 3 values pushed */
          3 2 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          2 3 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni0122" xMin="122" yMin="-522" xMax="1244" yMax="1476">
      <component glyphName="G" x="0" y="0" flags="0x204"/>
      <component glyphName="uniF6C3" x="474" y="-361" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni0123" xMin="96" yMin="-426" xMax="1010" yMax="1683">
      <component glyphName="g" x="0" y="0" flags="0x204"/>
      <component glyphName="glyph00564" x="299" y="88" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          3 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          42
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni0136" xMin="169" yMin="-424" xMax="1285" yMax="1456">
      <component glyphName="K" x="0" y="0" flags="0x204"/>
      <component glyphName="uniF6C3" x="404" y="-263" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni0137" xMin="141" yMin="-443" xMax="1036" yMax="1536">
      <component glyphName="k" x="0" y="0" flags="0x204"/>
      <component glyphName="uniF6C3" x="273" y="-282" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni013B" xMin="169" yMin="-503" xMax="1052" yMax="1456">
      <component glyphName="L" x="0" y="0" flags="0x204"/>
      <component glyphName="uniF6C3" x="364" y="-342" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni013C" xMin="87" yMin="-503" xMax="341" yMax="1536">
      <component glyphName="l" x="0" y="0" flags="0x204"/>
      <component glyphName="uniF6C3" x="-5" y="-342" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni0145" xMin="169" yMin="-503" xMax="1288" yMax="1456">
      <component glyphName="N" x="0" y="0" flags="0x204"/>
      <component glyphName="uniF6C3" x="464" y="-342" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni0146" xMin="140" yMin="-503" xMax="991" yMax="1102">
      <component glyphName="n" x="0" y="0" flags="0x204"/>
      <component glyphName="uniF6C3" x="307" y="-342" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni0156" xMin="168" yMin="-503" xMax="1225" yMax="1456">
      <component glyphName="R" x="0" y="0" flags="0x204"/>
      <component glyphName="uniF6C3" x="355" y="-342" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni0157" xMin="83" yMin="-503" xMax="663" yMax="1102">
      <component glyphName="r" x="0" y="0" flags="0x204"/>
      <component glyphName="uniF6C3" x="-9" y="-342" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni0162" xMin="49" yMin="-435" xMax="1175" yMax="1456">
      <component glyphName="T" x="0" y="0" flags="0x204"/>
      <component glyphName="cedilla" x="400" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni0163" xMin="9" yMin="-435" xMax="665" yMax="1344">
      <component glyphName="t" x="0" y="0" flags="0x204"/>
      <component glyphName="cedilla" x="239" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni018F" xMin="93" yMin="-20" xMax="1298" yMax="1476">
      <contour>
        <pt x="697" y="-20" on="1"/>
        <pt x="412" y="-20" on="0"/>
        <pt x="93" y="325" on="0"/>
        <pt x="93" y="650" on="1"/>
        <pt x="93" y="767" on="1"/>
        <pt x="1105" y="767" on="1"/>
        <pt x="1105" y="774" on="1"/>
        <pt x="1105" y="1032" on="0"/>
        <pt x="861" y="1316" on="0"/>
        <pt x="640" y="1316" on="1"/>
        <pt x="475" y="1316" on="0"/>
        <pt x="336" y="1258" on="1"/>
        <pt x="275" y="1232" on="1"/>
        <pt x="228" y="1375" on="1"/>
        <pt x="250" y="1388" on="1"/>
        <pt x="408" y="1476" on="0"/>
        <pt x="640" y="1476" on="1"/>
        <pt x="942" y="1476" on="0"/>
        <pt x="1298" y="1099" on="0"/>
        <pt x="1298" y="764" on="1"/>
        <pt x="1298" y="680" on="1"/>
        <pt x="1298" y="483" on="0"/>
        <pt x="1142" y="162" on="0"/>
        <pt x="864" y="-20" on="0"/>
      </contour>
      <contour>
        <pt x="697" y="138" on="1"/>
        <pt x="866" y="138" on="0"/>
        <pt x="1088" y="399" on="0"/>
        <pt x="1103" y="618" on="1"/>
        <pt x="286" y="618" on="1"/>
        <pt x="286" y="584" on="1"/>
        <pt x="286" y="366" on="0"/>
        <pt x="497" y="138" on="0"/>
      </contour>
      <instructions><assembly>
          PUSH[ ]	/* 3 values pushed */
          0 32 33
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          16 30
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          0 18
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 3 values pushed */
          5 16 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSH[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSH[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          9 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          24 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSH[ ]	/* 3 values pushed */
          27 1 10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
          MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni01F0" xMin="-76" yMin="-437" xMax="575" yMax="1496">
      <component glyphName="uni0237" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="-184" y="-39" flags="0x4"/>
      <instructions><assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSH[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
          PUSH[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
          PUSH[ ]	/* 2 values pushed */
          13 26
          MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSH[ ]	/* 2 values pushed */
          19 1
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni0218" xMin="80" yMin="-513" xMax="1138" yMax="1476">
      <component glyphName="S" x="0" y="0" flags="0x204"/>
      <component glyphName="uniF6C3" x="373" y="-352" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni0219" xMin="95" yMin="-522" xMax="955" yMax="1102">
      <component glyphName="s" x="0" y="0" flags="0x204"/>
      <component glyphName="uniF6C3" x="307" y="-361" flags="0x4"/>
    </TTGlyph>

